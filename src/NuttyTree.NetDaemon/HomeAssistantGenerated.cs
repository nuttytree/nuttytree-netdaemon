// <auto-generated>
#nullable enable

using System;
using System.Collections.Generic;
using NetDaemon.HassModel;
using NetDaemon.HassModel.Entities;
using NetDaemon.HassModel.Entities.Core;
using System.Text.Json.Serialization;

namespace HomeAssistantGenerated
{
	public interface IEntities
	{
		AlarmControlPanelEntities AlarmControlPanel { get; }

		AlertEntities Alert { get; }

		AutomationEntities Automation { get; }

		BinarySensorEntities BinarySensor { get; }

		ButtonEntities Button { get; }

		CalendarEntities Calendar { get; }

		CameraEntities Camera { get; }

		ClimateEntities Climate { get; }

		CounterEntities Counter { get; }

		CoverEntities Cover { get; }

		DeviceTrackerEntities DeviceTracker { get; }

		FanEntities Fan { get; }

		InputBooleanEntities InputBoolean { get; }

		InputDatetimeEntities InputDatetime { get; }

		InputNumberEntities InputNumber { get; }

		InputSelectEntities InputSelect { get; }

		InputTextEntities InputText { get; }

		LightEntities Light { get; }

		LockEntities Lock { get; }

		MediaPlayerEntities MediaPlayer { get; }

		PersonEntities Person { get; }

		ProximityEntities Proximity { get; }

		RemoteEntities Remote { get; }

		ScriptEntities Script { get; }

		SelectEntities Select { get; }

		SensorEntities Sensor { get; }

		SunEntities Sun { get; }

		SwitchEntities Switch { get; }

		UpdateEntities Update { get; }

		UtilityMeterEntities UtilityMeter { get; }

		VacuumEntities Vacuum { get; }

		WaterHeaterEntities WaterHeater { get; }

		WeatherEntities Weather { get; }

		ZoneEntities Zone { get; }
	}

	public partial class Entities : IEntities
	{
		private readonly IHaContext _haContext;
		public Entities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		public AlarmControlPanelEntities AlarmControlPanel => new(_haContext);
		public AlertEntities Alert => new(_haContext);
		public AutomationEntities Automation => new(_haContext);
		public BinarySensorEntities BinarySensor => new(_haContext);
		public ButtonEntities Button => new(_haContext);
		public CalendarEntities Calendar => new(_haContext);
		public CameraEntities Camera => new(_haContext);
		public ClimateEntities Climate => new(_haContext);
		public CounterEntities Counter => new(_haContext);
		public CoverEntities Cover => new(_haContext);
		public DeviceTrackerEntities DeviceTracker => new(_haContext);
		public FanEntities Fan => new(_haContext);
		public InputBooleanEntities InputBoolean => new(_haContext);
		public InputDatetimeEntities InputDatetime => new(_haContext);
		public InputNumberEntities InputNumber => new(_haContext);
		public InputSelectEntities InputSelect => new(_haContext);
		public InputTextEntities InputText => new(_haContext);
		public LightEntities Light => new(_haContext);
		public LockEntities Lock => new(_haContext);
		public MediaPlayerEntities MediaPlayer => new(_haContext);
		public PersonEntities Person => new(_haContext);
		public ProximityEntities Proximity => new(_haContext);
		public RemoteEntities Remote => new(_haContext);
		public ScriptEntities Script => new(_haContext);
		public SelectEntities Select => new(_haContext);
		public SensorEntities Sensor => new(_haContext);
		public SunEntities Sun => new(_haContext);
		public SwitchEntities Switch => new(_haContext);
		public UpdateEntities Update => new(_haContext);
		public UtilityMeterEntities UtilityMeter => new(_haContext);
		public VacuumEntities Vacuum => new(_haContext);
		public WaterHeaterEntities WaterHeater => new(_haContext);
		public WeatherEntities Weather => new(_haContext);
		public ZoneEntities Zone => new(_haContext);
	}

	public partial class AlarmControlPanelEntities
	{
		private readonly IHaContext _haContext;
		public AlarmControlPanelEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Alexa Guard cc675</summary>
		public AlarmControlPanelEntity AlexaGuardCc675 => new(_haContext, "alarm_control_panel.alexa_guard_cc675");
	}

	public partial class AlertEntities
	{
		private readonly IHaContext _haContext;
		public AlertEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Device(s) Offline</summary>
		public AlertEntity DeviceOffline => new(_haContext, "alert.device_offline");
		///<summary>Fridge/Freezer Temperature Alert</summary>
		public AlertEntity FridgeFreezerTemp => new(_haContext, "alert.fridge_freezer_temp");
		///<summary>Garbage Needs to Go Out</summary>
		public AlertEntity GarbageDue => new(_haContext, "alert.garbage_due");
		///<summary>Garbage Needs to Go Out TTS</summary>
		public AlertEntity GarbageDueTts => new(_haContext, "alert.garbage_due_tts");
		///<summary>Storage Space is Low</summary>
		public AlertEntity StorageSpaceLow => new(_haContext, "alert.storage_space_low");
		///<summary>Time to Upgrade Home Assistant</summary>
		public AlertEntity TimeToUpgrade => new(_haContext, "alert.time_to_upgrade");
	}

	public partial class AutomationEntities
	{
		private readonly IHaContext _haContext;
		public AutomationEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Announcement - Main Floor Vacuum - Announce Error</summary>
		public AutomationEntity AnnouncementMainFloorVacuumAnnounceError => new(_haContext, "automation.announcement_main_floor_vacuum_announce_error");
		///<summary>Announcement - Main Floor Vacuum - Set Error</summary>
		public AutomationEntity AnnouncementMainFloorVacuumSetError => new(_haContext, "automation.announcement_main_floor_vacuum_set_error");
		///<summary>Announcement - Mayson's Medicine</summary>
		public AutomationEntity AnnouncementMaysonMedicine => new(_haContext, "automation.announcement_mayson_medicine");
		///<summary>Auto Refresh</summary>
		public AutomationEntity AutoRefresh => new(_haContext, "automation.auto_refresh");
		///<summary>Basement TV - Don't allow bypassing restrictions</summary>
		public AutomationEntity BasementTvDonTAllowBypassingRestrictions => new(_haContext, "automation.basement_tv_don_t_allow_bypassing_restrictions");
		///<summary>Presence and Mode - Close and Turn Off Everything When Night or Away</summary>
		public AutomationEntity CloseOffNightAway => new(_haContext, "automation.close_off_night_away");
		///<summary>Energy - Change Rate</summary>
		public AutomationEntity EnergyChangeRate => new(_haContext, "automation.energy_change_rate");
		///<summary>Family Room - Turn Off Idle TV</summary>
		public AutomationEntity FamilyRoomTurnOffIdleTv => new(_haContext, "automation.family_room_turn_off_idle_tv");
		///<summary>Fix Incorrect Light State Reporting</summary>
		public AutomationEntity FixIncorrectLightStateReporting => new(_haContext, "automation.fix_incorrect_light_state_reporting");
		///<summary>Outside Back - Fountain and Bird Bath for Pool Party</summary>
		public AutomationEntity FountainAndBirdBathForPoolParty => new(_haContext, "automation.fountain_and_bird_bath_for_pool_party");
		///<summary>Outside Front - Front Lights Off</summary>
		public AutomationEntity FrontLightsOff => new(_haContext, "automation.front_lights_off");
		///<summary>Outside Front - Front Lights On</summary>
		public AutomationEntity FrontLightsOn => new(_haContext, "automation.front_lights_on");
		///<summary>Presence and Mode - Arm/Disarm Alexa Guard Mode</summary>
		public AutomationEntity GuardMode => new(_haContext, "automation.guard_mode");
		///<summary>Mayson's Electronics Time - Reset Time and Tasks</summary>
		public AutomationEntity MaysonResetDailyTasks => new(_haContext, "automation.mayson_reset_daily_tasks");
		///<summary>Mayson's Electronics Time - Alert on Mode Change</summary>
		public AutomationEntity MaysonSElectronicsTimeAlertWhenChangedToAllowedMode => new(_haContext, "automation.mayson_s_electronics_time_alert_when_changed_to_allowed_mode");
		///<summary>Mayson's Room - Mayson's Light Double-Tap Down</summary>
		public AutomationEntity MaysonSLightDoubleTapDown => new(_haContext, "automation.mayson_s_light_double_tap_down");
		///<summary>Mayson's Room - Mayson's Light Double-Tap Up</summary>
		public AutomationEntity MaysonSLightDoubleTapUp => new(_haContext, "automation.mayson_s_light_double_tap_up");
		///<summary>Mayson's Electronics Time - Turn off TV/XBox when not allowed electronics</summary>
		public AutomationEntity MaysonTurnOffTvXboxWhenNotAllowedElectronics => new(_haContext, "automation.mayson_turn_off_tv_xbox_when_not_allowed_electronics");
		///<summary>Misc - Reconnect the Robo-Vac</summary>
		public AutomationEntity MiscReconnectTheRoboVac => new(_haContext, "automation.misc_reconnect_the_robo_vac");
		///<summary>Mobile Action - Mark Garbage Collected</summary>
		public AutomationEntity MobileActionMarkGarbageCollected => new(_haContext, "automation.mobile_action_mark_garbage_collected");
		///<summary>Mobile Action - Open Main Garage Door</summary>
		public AutomationEntity MobileActionOpenMainGarageDoor => new(_haContext, "automation.mobile_action_open_main_garage_door");
		///<summary>Garage - Open Garage Door for Chris</summary>
		public AutomationEntity OpenGarageDoorForChris => new(_haContext, "automation.open_garage_door_for_chris");
		///<summary>Outside Back - Turn on Lights</summary>
		public AutomationEntity OutsideBackTurnOnLights => new(_haContext, "automation.outside_back_turn_on_lights");
		///<summary>Outside - All Outside Lights Off At Sunrise</summary>
		public AutomationEntity PatioAndPoolLightsOffAtSunrise => new(_haContext, "automation.patio_and_pool_lights_off_at_sunrise");
		///<summary>Presence and Mode - Manage Smart Plug Power</summary>
		public AutomationEntity PresenceAndModeManageSmartPlugPower => new(_haContext, "automation.presence_and_mode_manage_smart_plug_power");
		///<summary>Presence and Mode - Restore Vehicle Tracker States</summary>
		public AutomationEntity PresenceAndModeRestoreVehicleTrackerStates => new(_haContext, "automation.presence_and_mode_restore_vehicle_tracker_states");
		///<summary>Presence and Mode - Set House Mode</summary>
		public AutomationEntity PresenceAndModeSetHouseMode => new(_haContext, "automation.presence_and_mode_set_house_mode");
		///<summary>Presence and Mode - Set Phone Do Not Disturb</summary>
		public AutomationEntity PresenceAndModeSetPhoneDoNotDisturb => new(_haContext, "automation.presence_and_mode_set_phone_do_not_disturb");
		///<summary>Announcement - Remind Melissa to Clock In/Out</summary>
		public AutomationEntity RemindMelissaToClockInOut => new(_haContext, "automation.remind_melissa_to_clock_in_out");
		///<summary>Presence and Mode - Set Day Mode</summary>
		public AutomationEntity SetDayMode2 => new(_haContext, "automation.set_day_mode_2");
		///<summary>Set Default Theme</summary>
		public AutomationEntity SetDefaultTheme => new(_haContext, "automation.set_default_theme");
		///<summary>Presence and Mode - Set Night Mode</summary>
		public AutomationEntity SetNightMode2 => new(_haContext, "automation.set_night_mode_2");
		///<summary>System - Redeploy NetDaemon on code commit</summary>
		public AutomationEntity SystemRedeployNetdaemonOnCodeCommit => new(_haContext, "automation.system_redeploy_netdaemon_on_code_commit");
		///<summary>System - Reload UI on Startup</summary>
		public AutomationEntity SystemReloadUiOnStartup => new(_haContext, "automation.system_reload_ui_on_startup");
		///<summary>System - Update PID parameters after restart</summary>
		public AutomationEntity SystemUpdatePidParametersAfterRestart => new(_haContext, "automation.system_update_pid_parameters_after_restart");
		///<summary>Presence and Mode - Track Chris' Vehicle with Chris' Phone</summary>
		public AutomationEntity TrackG35WithChrisPhone => new(_haContext, "automation.track_g35_with_chris_phone");
		///<summary>Presence and Mode - Track Melissa's Vehicle with Melissa's Phone</summary>
		public AutomationEntity TrackMkxWithMelissaSPhone => new(_haContext, "automation.track_mkx_with_melissa_s_phone");
		///<summary>Presence and Mode - Track Truck with Chris' Phone</summary>
		public AutomationEntity TrackSuburbanWithChrisPhone => new(_haContext, "automation.track_suburban_with_chris_phone");
		///<summary>Mayson's Room - Turn Mayson's Fan Off</summary>
		public AutomationEntity TurnMaysonSFanOff => new(_haContext, "automation.turn_mayson_s_fan_off");
		///<summary>Mayson's Room - Turn Mayson's Lights Off</summary>
		public AutomationEntity TurnMaysonSLightsOff => new(_haContext, "automation.turn_mayson_s_lights_off");
		///<summary>Master Suite - Turn Off the Master Bathroom Outlet</summary>
		public AutomationEntity TurnOffTheMasterBathroomOutlet => new(_haContext, "automation.turn_off_the_master_bathroom_outlet");
		///<summary>Upstairs Bathroom - Fan Off</summary>
		public AutomationEntity UpstairsBathroomFanOff => new(_haContext, "automation.upstairs_bathroom_fan_off");
		///<summary>Upstairs Bathroom - Fan On</summary>
		public AutomationEntity UpstairsBathroomFanOn => new(_haContext, "automation.upstairs_bathroom_fan_on");
		///<summary>Upstairs Bathroom - Light Off</summary>
		public AutomationEntity UpstairsBathroomLightOff => new(_haContext, "automation.upstairs_bathroom_light_off");
		///<summary>Upstairs Bathroom - Light On</summary>
		public AutomationEntity UpstairsBathroomLightOn => new(_haContext, "automation.upstairs_bathroom_light_on");
		///<summary>Misc - Vacuum the Main Floor at Night</summary>
		public AutomationEntity VacuumTheMainFloorAtNight => new(_haContext, "automation.vacuum_the_main_floor_at_night");
		///<summary>Water Heater - Manage Temperature</summary>
		public AutomationEntity WaterHeaterManageTemperature => new(_haContext, "automation.water_heater_manage_temperature");
	}

	public partial class BinarySensorEntities
	{
		private readonly IHaContext _haContext;
		public BinarySensorEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Amcrest Cell Motion Detection</summary>
		public BinarySensorEntity E000CellMotionDetection => new(_haContext, "binary_sensor.000_cell_motion_detection");
		public BinarySensorEntity E000MotionAlarm => new(_haContext, "binary_sensor.000_motion_alarm");
		///<summary>4-in-1 Sensor: Home Security - Tampering, product cover removed</summary>
		public BinarySensorEntity E4In1SensorHomeSecurityTamperingProductCoverRemoved => new(_haContext, "binary_sensor.4_in_1_sensor_home_security_tampering_product_cover_removed");
		///<summary>4-in-1 Sensor: Low battery level</summary>
		public BinarySensorEntity E4In1SensorLowBatteryLevel => new(_haContext, "binary_sensor.4_in_1_sensor_low_battery_level");
		///<summary>AC</summary>
		public BinarySensorEntity Ac => new(_haContext, "binary_sensor.ac");
		///<summary>AC 2</summary>
		public BinarySensorEntity Ac23 => new(_haContext, "binary_sensor.ac_2_3");
		///<summary>Always On</summary>
		public BinarySensorEntity AlwaysOn => new(_haContext, "binary_sensor.always_on");
		///<summary>BananaMae08</summary>
		public BinarySensorEntity Bananamae08 => new(_haContext, "binary_sensor.bananamae08");
		///<summary>Basement Bathroom Door</summary>
		public BinarySensorEntity BasementBathroomDoor => new(_haContext, "binary_sensor.basement_bathroom_door");
		///<summary>Basement Bathroom Heater</summary>
		public BinarySensorEntity BasementBathroomHeater => new(_haContext, "binary_sensor.basement_bathroom_heater");
		///<summary>Basement Bathroom Heater</summary>
		public BinarySensorEntity BasementBathroomHeater2 => new(_haContext, "binary_sensor.basement_bathroom_heater_2");
		///<summary>Basement Bathroom Light</summary>
		public BinarySensorEntity BasementBathroomLight => new(_haContext, "binary_sensor.basement_bathroom_light");
		///<summary>Basement Bathroom Light and Fan Status</summary>
		public BinarySensorEntity BasementBathroomLightAndFanStatus => new(_haContext, "binary_sensor.basement_bathroom_light_and_fan_status");
		///<summary>Basement Bathroom Motion</summary>
		public BinarySensorEntity BasementBathroomMotion => new(_haContext, "binary_sensor.basement_bathroom_motion");
		///<summary>Basement Bathroom Sensor Status</summary>
		public BinarySensorEntity BasementBathroomSensorStatus => new(_haContext, "binary_sensor.basement_bathroom_sensor_status");
		///<summary>Basement Bathroom Shower Light and Heater Status</summary>
		public BinarySensorEntity BasementBathroomShowerLightAndHeaterStatus => new(_haContext, "binary_sensor.basement_bathroom_shower_light_and_heater_status");
		///<summary>Basement Beep Enabled</summary>
		public BinarySensorEntity BasementBeepEnabled => new(_haContext, "binary_sensor.basement_beep_enabled");
		///<summary>Basement Fridge</summary>
		public BinarySensorEntity BasementFridge => new(_haContext, "binary_sensor.basement_fridge");
		///<summary>Basement Fridge Status</summary>
		public BinarySensorEntity BasementFridgeStatus => new(_haContext, "binary_sensor.basement_fridge_status");
		///<summary>Basement Running</summary>
		public BinarySensorEntity BasementRunning => new(_haContext, "binary_sensor.basement_running");
		///<summary>Basement Screen Lock</summary>
		public BinarySensorEntity BasementScreenLocked => new(_haContext, "binary_sensor.basement_screen_locked");
		///<summary>Basement Shower Light</summary>
		public BinarySensorEntity BasementShowerLight => new(_haContext, "binary_sensor.basement_shower_light");
		///<summary>Basement Stair Lights</summary>
		public BinarySensorEntity BasementStairLights => new(_haContext, "binary_sensor.basement_stair_lights");
		///<summary>Basement Stair Lights 2 Status</summary>
		public BinarySensorEntity BasementStairLights2Status => new(_haContext, "binary_sensor.basement_stair_lights_2_status");
		///<summary>Basement Stair Lights Status</summary>
		public BinarySensorEntity BasementStairLightsStatus => new(_haContext, "binary_sensor.basement_stair_lights_status");
		///<summary>Basement TV</summary>
		public BinarySensorEntity BasementTv => new(_haContext, "binary_sensor.basement_tv");
		///<summary>Basement TV Status</summary>
		public BinarySensorEntity BasementTvStatus => new(_haContext, "binary_sensor.basement_tv_status");
		public BinarySensorEntity Browser1e9f03981fd3d3a3 => new(_haContext, "binary_sensor.browser_1e9f0398_1fd3d3a3");
		public BinarySensorEntity Browser1e9f039865167b95 => new(_haContext, "binary_sensor.browser_1e9f0398_65167b95");
		public BinarySensorEntity Browser5401738cE708562d => new(_haContext, "binary_sensor.browser_5401738c_e708562d");
		///<summary>CalmMicrobe3</summary>
		public BinarySensorEntity Calmmicrobe3 => new(_haContext, "binary_sensor.calmmicrobe3");
		///<summary>Chris is in Bed</summary>
		public BinarySensorEntity ChrisIsInBed => new(_haContext, "binary_sensor.chris_is_in_bed");
		///<summary>Coffee Maker Status</summary>
		public BinarySensorEntity CoffeeMakerStatus => new(_haContext, "binary_sensor.coffee_maker_status");
		///<summary>Computer Light</summary>
		public BinarySensorEntity ComputerLight => new(_haContext, "binary_sensor.computer_light");
		///<summary>Computer Light Status</summary>
		public BinarySensorEntity ComputerLightStatus => new(_haContext, "binary_sensor.computer_light_status");
		///<summary>Device 1</summary>
		public BinarySensorEntity Device1 => new(_haContext, "binary_sensor.device_1");
		///<summary>Device 1</summary>
		public BinarySensorEntity Device12 => new(_haContext, "binary_sensor.device_1_2");
		///<summary>Device 2</summary>
		public BinarySensorEntity Device2 => new(_haContext, "binary_sensor.device_2");
		///<summary>Device 2</summary>
		public BinarySensorEntity Device22 => new(_haContext, "binary_sensor.device_2_2");
		///<summary>Device 4</summary>
		public BinarySensorEntity Device4 => new(_haContext, "binary_sensor.device_4");
		///<summary>One or More Devices are Offline</summary>
		public BinarySensorEntity DeviceOffline => new(_haContext, "binary_sensor.device_offline");
		///<summary>Dining Room Light</summary>
		public BinarySensorEntity DiningRoomLight => new(_haContext, "binary_sensor.dining_room_light");
		///<summary>Dining Room Light Status</summary>
		public BinarySensorEntity DiningRoomLightStatus => new(_haContext, "binary_sensor.dining_room_light_status");
		///<summary>Dogeiscool13</summary>
		public BinarySensorEntity Dogeiscool13 => new(_haContext, "binary_sensor.dogeiscool13");
		///<summary>Dryer</summary>
		public BinarySensorEntity Dryer3 => new(_haContext, "binary_sensor.dryer_3");
		///<summary>Family Room Light</summary>
		public BinarySensorEntity FamilyRoomLight => new(_haContext, "binary_sensor.family_room_light");
		///<summary>Family Room Light Status</summary>
		public BinarySensorEntity FamilyRoomLightStatus => new(_haContext, "binary_sensor.family_room_light_status");
		///<summary>Family Room TV</summary>
		public BinarySensorEntity FamilyRoomTv => new(_haContext, "binary_sensor.family_room_tv");
		///<summary>Family Room TV Status</summary>
		public BinarySensorEntity FamilyRoomTvStatus => new(_haContext, "binary_sensor.family_room_tv_status");
		///<summary>Fire Pit and Fountain Status</summary>
		public BinarySensorEntity FirePitAndFountainStatus => new(_haContext, "binary_sensor.fire_pit_and_fountain_status");
		///<summary>Fridge</summary>
		public BinarySensorEntity Fridge => new(_haContext, "binary_sensor.fridge");
		///<summary>Fridge 2</summary>
		public BinarySensorEntity Fridge2 => new(_haContext, "binary_sensor.fridge_2");
		///<summary>Fridge 2</summary>
		public BinarySensorEntity Fridge22 => new(_haContext, "binary_sensor.fridge_2_2");
		///<summary>Fridge 2</summary>
		public BinarySensorEntity Fridge23 => new(_haContext, "binary_sensor.fridge_2_3");
		///<summary>Fridge 2</summary>
		public BinarySensorEntity Fridge24 => new(_haContext, "binary_sensor.fridge_2_4");
		///<summary>Fridge 3</summary>
		public BinarySensorEntity Fridge3 => new(_haContext, "binary_sensor.fridge_3");
		///<summary>Fridge 3</summary>
		public BinarySensorEntity Fridge32 => new(_haContext, "binary_sensor.fridge_3_2");
		///<summary>Fridge</summary>
		public BinarySensorEntity Fridge4 => new(_haContext, "binary_sensor.fridge_4");
		///<summary>Fridge 4</summary>
		public BinarySensorEntity Fridge42 => new(_haContext, "binary_sensor.fridge_4_2");
		///<summary>Fridge</summary>
		public BinarySensorEntity Fridge5 => new(_haContext, "binary_sensor.fridge_5");
		///<summary>Front Door Ding</summary>
		public BinarySensorEntity FrontDoorDing => new(_haContext, "binary_sensor.front_door_ding");
		///<summary>Front Door Motion</summary>
		public BinarySensorEntity FrontDoorMotion => new(_haContext, "binary_sensor.front_door_motion");
		///<summary>Front Entry Lights</summary>
		public BinarySensorEntity FrontEntryLights => new(_haContext, "binary_sensor.front_entry_lights");
		///<summary>Front Entry Lights 2 Status</summary>
		public BinarySensorEntity FrontEntryLights2Status => new(_haContext, "binary_sensor.front_entry_lights_2_status");
		///<summary>Front Entry Lights Status</summary>
		public BinarySensorEntity FrontEntryLightsStatus => new(_haContext, "binary_sensor.front_entry_lights_status");
		///<summary>Front Lights</summary>
		public BinarySensorEntity FrontLights => new(_haContext, "binary_sensor.front_lights");
		///<summary>Front Lights Status</summary>
		public BinarySensorEntity FrontLightsStatus => new(_haContext, "binary_sensor.front_lights_status");
		///<summary>Furnace</summary>
		public BinarySensorEntity Furnace2 => new(_haContext, "binary_sensor.furnace_2");
		///<summary>Garage door</summary>
		public BinarySensorEntity GarageDoor2 => new(_haContext, "binary_sensor.garage_door_2");
		///<summary>Garage Fridge Status</summary>
		public BinarySensorEntity GarageFridgeStatus => new(_haContext, "binary_sensor.garage_fridge_status");
		///<summary>Garage Lights</summary>
		public BinarySensorEntity GarageLights => new(_haContext, "binary_sensor.garage_lights");
		///<summary>Garage Lights Status</summary>
		public BinarySensorEntity GarageLightsStatus => new(_haContext, "binary_sensor.garage_lights_status");
		///<summary>Garbage Needs to Go Out</summary>
		public BinarySensorEntity GarbageDue => new(_haContext, "binary_sensor.garbage_due");
		///<summary>Heat 1</summary>
		public BinarySensorEntity Heat1 => new(_haContext, "binary_sensor.heat_1");
		///<summary>Coffee Maker</summary>
		public BinarySensorEntity Heat22 => new(_haContext, "binary_sensor.heat_2_2");
		///<summary>Heat 3</summary>
		public BinarySensorEntity Heat3 => new(_haContext, "binary_sensor.heat_3");
		///<summary>Heat 4</summary>
		public BinarySensorEntity Heat4 => new(_haContext, "binary_sensor.heat_4");
		///<summary>Heat 5</summary>
		public BinarySensorEntity Heat5 => new(_haContext, "binary_sensor.heat_5");
		///<summary>Home MyQ Gateway</summary>
		public BinarySensorEntity HomeMyqGateway => new(_haContext, "binary_sensor.home_myq_gateway");
		///<summary>Kitchen Bar Lights</summary>
		public BinarySensorEntity KitchenBarLights => new(_haContext, "binary_sensor.kitchen_bar_lights");
		///<summary>Kitchen Bar Lights Status</summary>
		public BinarySensorEntity KitchenBarLightsStatus => new(_haContext, "binary_sensor.kitchen_bar_lights_status");
		///<summary>Kitchen Fridge</summary>
		public BinarySensorEntity KitchenFridge => new(_haContext, "binary_sensor.kitchen_fridge");
		///<summary>Kitchen Fridge Status</summary>
		public BinarySensorEntity KitchenFridgeStatus => new(_haContext, "binary_sensor.kitchen_fridge_status");
		///<summary>Kitchen Table Light</summary>
		public BinarySensorEntity KitchenTableLight => new(_haContext, "binary_sensor.kitchen_table_light");
		///<summary>Kitchen Table Light Status</summary>
		public BinarySensorEntity KitchenTableLightStatus => new(_haContext, "binary_sensor.kitchen_table_light_status");
		///<summary>Latest Version Update Available</summary>
		public BinarySensorEntity LatestVersionUpdateAvailable => new(_haContext, "binary_sensor.latest_version_update_available");
		///<summary>Light 1</summary>
		public BinarySensorEntity Light1 => new(_haContext, "binary_sensor.light_1");
		///<summary>Living Room Lights</summary>
		public BinarySensorEntity LivingRoomLights => new(_haContext, "binary_sensor.living_room_lights");
		///<summary>Living Room Lights Status</summary>
		public BinarySensorEntity LivingRoomLightsStatus => new(_haContext, "binary_sensor.living_room_lights_status");
		///<summary>Main Floor Beep Enabled</summary>
		public BinarySensorEntity MainFloorBeepEnabled => new(_haContext, "binary_sensor.main_floor_beep_enabled");
		///<summary>Main Floor Running</summary>
		public BinarySensorEntity MainFloorRunning => new(_haContext, "binary_sensor.main_floor_running");
		///<summary>Main Floor Screen Locked</summary>
		public BinarySensorEntity MainFloorScreenLocked => new(_haContext, "binary_sensor.main_floor_screen_locked");
		///<summary>Master Bath Motion</summary>
		public BinarySensorEntity MasterBathMotion => new(_haContext, "binary_sensor.master_bath_motion");
		///<summary>Master Bathroom Fan</summary>
		public BinarySensorEntity MasterBathroomFan => new(_haContext, "binary_sensor.master_bathroom_fan");
		///<summary>Master Bathroom Fan Status</summary>
		public BinarySensorEntity MasterBathroomFanStatus => new(_haContext, "binary_sensor.master_bathroom_fan_status");
		///<summary>Master Bathroom Lights</summary>
		public BinarySensorEntity MasterBathroomLights => new(_haContext, "binary_sensor.master_bathroom_lights");
		///<summary>Master Bathroom Lights 2 Status</summary>
		public BinarySensorEntity MasterBathroomLights2Status => new(_haContext, "binary_sensor.master_bathroom_lights_2_status");
		///<summary>Master Bathroom Lights Status</summary>
		public BinarySensorEntity MasterBathroomLightsStatus => new(_haContext, "binary_sensor.master_bathroom_lights_status");
		///<summary>Master all in Bed</summary>
		public BinarySensorEntity MasterBedAll => new(_haContext, "binary_sensor.master_bed_all");
		///<summary>Master Bed Status</summary>
		public BinarySensorEntity MasterBedStatus => new(_haContext, "binary_sensor.master_bed_status");
		///<summary>Mayson Can Use Electronics</summary>
		public BinarySensorEntity MaysonCanUseElectronics => new(_haContext, "binary_sensor.mayson_can_use_electronics");
		///<summary>Mayson is in Bed</summary>
		public BinarySensorEntity MaysonInBed => new(_haContext, "binary_sensor.mayson_in_bed");
		///<summary>mayson_is_using_double_time</summary>
		public BinarySensorEntity MaysonIsUsingDoubleTime => new(_haContext, "binary_sensor.mayson_is_using_double_time");
		///<summary>mayson_is_using_time</summary>
		public BinarySensorEntity MaysonIsUsingTime => new(_haContext, "binary_sensor.mayson_is_using_time");
		///<summary>mayson_phone_app_allowed</summary>
		public BinarySensorEntity MaysonPhoneAppAllowed => new(_haContext, "binary_sensor.mayson_phone_app_allowed");
		///<summary>mayson_phone_restricted_app</summary>
		public BinarySensorEntity MaysonPhoneRestrictedApp => new(_haContext, "binary_sensor.mayson_phone_restricted_app");
		///<summary>Mayson's V350U App Inactive</summary>
		public BinarySensorEntity MaysonSV350uAppInactive => new(_haContext, "binary_sensor.mayson_s_v350u_app_inactive");
		///<summary>Mayson's V350U Bluetooth State</summary>
		public BinarySensorEntity MaysonSV350uBluetoothState => new(_haContext, "binary_sensor.mayson_s_v350u_bluetooth_state");
		///<summary>Mayson's V350U Device Locked</summary>
		public BinarySensorEntity MaysonSV350uDeviceLocked => new(_haContext, "binary_sensor.mayson_s_v350u_device_locked");
		///<summary>Mayson's V350U Device Secure</summary>
		public BinarySensorEntity MaysonSV350uDeviceSecure => new(_haContext, "binary_sensor.mayson_s_v350u_device_secure");
		///<summary>Mayson's V350U Doze Mode</summary>
		public BinarySensorEntity MaysonSV350uDozeMode => new(_haContext, "binary_sensor.mayson_s_v350u_doze_mode");
		///<summary>Mayson's V350U Headphones</summary>
		public BinarySensorEntity MaysonSV350uHeadphones => new(_haContext, "binary_sensor.mayson_s_v350u_headphones");
		///<summary>Mayson's V350U High Accuracy Mode</summary>
		public BinarySensorEntity MaysonSV350uHighAccuracyMode => new(_haContext, "binary_sensor.mayson_s_v350u_high_accuracy_mode");
		///<summary>Mayson's V350U Interactive</summary>
		public BinarySensorEntity MaysonSV350uInteractive => new(_haContext, "binary_sensor.mayson_s_v350u_interactive");
		///<summary>Mayson's V350U Is Charging</summary>
		public BinarySensorEntity MaysonSV350uIsCharging => new(_haContext, "binary_sensor.mayson_s_v350u_is_charging");
		///<summary>Mayson's V350U Keyguard Locked</summary>
		public BinarySensorEntity MaysonSV350uKeyguardLocked => new(_haContext, "binary_sensor.mayson_s_v350u_keyguard_locked");
		///<summary>Mayson's V350U Keyguard Secure</summary>
		public BinarySensorEntity MaysonSV350uKeyguardSecure => new(_haContext, "binary_sensor.mayson_s_v350u_keyguard_secure");
		///<summary>Mayson's V350U Mic Muted</summary>
		public BinarySensorEntity MaysonSV350uMicMuted => new(_haContext, "binary_sensor.mayson_s_v350u_mic_muted");
		///<summary>Mayson's V350U Mobile Data</summary>
		public BinarySensorEntity MaysonSV350uMobileData => new(_haContext, "binary_sensor.mayson_s_v350u_mobile_data");
		///<summary>Mayson's V350U Mobile Data Roaming</summary>
		public BinarySensorEntity MaysonSV350uMobileDataRoaming => new(_haContext, "binary_sensor.mayson_s_v350u_mobile_data_roaming");
		///<summary>Mayson's V350U Music Active</summary>
		public BinarySensorEntity MaysonSV350uMusicActive => new(_haContext, "binary_sensor.mayson_s_v350u_music_active");
		///<summary>Mayson's V350U Power Save</summary>
		public BinarySensorEntity MaysonSV350uPowerSave => new(_haContext, "binary_sensor.mayson_s_v350u_power_save");
		///<summary>Mayson's V350U Speakerphone</summary>
		public BinarySensorEntity MaysonSV350uSpeakerphone => new(_haContext, "binary_sensor.mayson_s_v350u_speakerphone");
		///<summary>Mayson's V350U WiFi State</summary>
		public BinarySensorEntity MaysonSV350uWifiState => new(_haContext, "binary_sensor.mayson_s_v350u_wifi_state");
		///<summary>Mayson's Room Motion</summary>
		public BinarySensorEntity MaysonsMotion => new(_haContext, "binary_sensor.maysons_motion");
		///<summary>Mayson's Tablet Interactive</summary>
		public BinarySensorEntity MaysonsTabletInteractive => new(_haContext, "binary_sensor.maysons_tablet_interactive");
		///<summary>Mayson's Tablet Is Charging</summary>
		public BinarySensorEntity MaysonsTabletIsCharging => new(_haContext, "binary_sensor.maysons_tablet_is_charging");
		///<summary>Phone - Melissa High Accuracy Mode</summary>
		public BinarySensorEntity MelissaGalaxyS9HighAccuracyMode => new(_haContext, "binary_sensor.melissa_galaxy_s9_high_accuracy_mode");
		///<summary>Melissa is in Bed</summary>
		public BinarySensorEntity MelissaIsInBed => new(_haContext, "binary_sensor.melissa_is_in_bed");
		public BinarySensorEntity MelissaPhoneConnectedToMkx => new(_haContext, "binary_sensor.melissa_phone_connected_to_mkx");
		///<summary>Microwave</summary>
		public BinarySensorEntity Microwave2 => new(_haContext, "binary_sensor.microwave_2");
		///<summary>Motor 1</summary>
		public BinarySensorEntity Motor1 => new(_haContext, "binary_sensor.motor_1");
		///<summary>Motor 1</summary>
		public BinarySensorEntity Motor12 => new(_haContext, "binary_sensor.motor_1_2");
		///<summary>Motor 2</summary>
		public BinarySensorEntity Motor23 => new(_haContext, "binary_sensor.motor_2_3");
		///<summary>Motor 3</summary>
		public BinarySensorEntity Motor3 => new(_haContext, "binary_sensor.motor_3");
		///<summary>Motor 4</summary>
		public BinarySensorEntity Motor4 => new(_haContext, "binary_sensor.motor_4");
		///<summary>Motor 5</summary>
		public BinarySensorEntity Motor5 => new(_haContext, "binary_sensor.motor_5");
		///<summary>Motor 6</summary>
		public BinarySensorEntity Motor6 => new(_haContext, "binary_sensor.motor_6");
		///<summary>Motor 7</summary>
		public BinarySensorEntity Motor7 => new(_haContext, "binary_sensor.motor_7");
		///<summary>Motor 8</summary>
		public BinarySensorEntity Motor8 => new(_haContext, "binary_sensor.motor_8");
		///<summary>Motor 8</summary>
		public BinarySensorEntity Motor82 => new(_haContext, "binary_sensor.motor_8_2");
		///<summary>Motor 9</summary>
		public BinarySensorEntity Motor9 => new(_haContext, "binary_sensor.motor_9");
		///<summary>Network Equipment</summary>
		public BinarySensorEntity NetworkEquipment => new(_haContext, "binary_sensor.network_equipment");
		///<summary>Network Equipment Status</summary>
		public BinarySensorEntity NetworkEquipmentStatus => new(_haContext, "binary_sensor.network_equipment_status");
		///<summary>NuttyNAS (Drive 1) Below Min Remaining Life</summary>
		public BinarySensorEntity NuttynasBelowMinRemainingLife => new(_haContext, "binary_sensor.nuttynas_below_min_remaining_life");
		///<summary>NuttyNAS (Cache device 2) Below Min Remaining Life</summary>
		public BinarySensorEntity NuttynasBelowMinRemainingLife10 => new(_haContext, "binary_sensor.nuttynas_below_min_remaining_life_10");
		///<summary>NuttyNAS (Drive 2) Below Min Remaining Life</summary>
		public BinarySensorEntity NuttynasBelowMinRemainingLife2 => new(_haContext, "binary_sensor.nuttynas_below_min_remaining_life_2");
		///<summary>NuttyNAS (Drive 3) Below Min Remaining Life</summary>
		public BinarySensorEntity NuttynasBelowMinRemainingLife3 => new(_haContext, "binary_sensor.nuttynas_below_min_remaining_life_3");
		///<summary>NuttyNAS (Drive 4) Below Min Remaining Life</summary>
		public BinarySensorEntity NuttynasBelowMinRemainingLife4 => new(_haContext, "binary_sensor.nuttynas_below_min_remaining_life_4");
		///<summary>NuttyNAS (Drive 5) Below Min Remaining Life</summary>
		public BinarySensorEntity NuttynasBelowMinRemainingLife5 => new(_haContext, "binary_sensor.nuttynas_below_min_remaining_life_5");
		///<summary>NuttyNAS (Drive 6) Below Min Remaining Life</summary>
		public BinarySensorEntity NuttynasBelowMinRemainingLife6 => new(_haContext, "binary_sensor.nuttynas_below_min_remaining_life_6");
		///<summary>NuttyNAS (Drive 7) Below Min Remaining Life</summary>
		public BinarySensorEntity NuttynasBelowMinRemainingLife7 => new(_haContext, "binary_sensor.nuttynas_below_min_remaining_life_7");
		///<summary>NuttyNAS (Drive 8) Below Min Remaining Life</summary>
		public BinarySensorEntity NuttynasBelowMinRemainingLife8 => new(_haContext, "binary_sensor.nuttynas_below_min_remaining_life_8");
		///<summary>NuttyNAS (Cache device 1) Below Min Remaining Life</summary>
		public BinarySensorEntity NuttynasBelowMinRemainingLife9 => new(_haContext, "binary_sensor.nuttynas_below_min_remaining_life_9");
		///<summary>NuttyNAS (Drive 1) Exceeded Max Bad Sectors</summary>
		public BinarySensorEntity NuttynasExceededMaxBadSectors => new(_haContext, "binary_sensor.nuttynas_exceeded_max_bad_sectors");
		///<summary>NuttyNAS (Cache device 2) Exceeded Max Bad Sectors</summary>
		public BinarySensorEntity NuttynasExceededMaxBadSectors10 => new(_haContext, "binary_sensor.nuttynas_exceeded_max_bad_sectors_10");
		///<summary>NuttyNAS (Drive 2) Exceeded Max Bad Sectors</summary>
		public BinarySensorEntity NuttynasExceededMaxBadSectors2 => new(_haContext, "binary_sensor.nuttynas_exceeded_max_bad_sectors_2");
		///<summary>NuttyNAS (Drive 3) Exceeded Max Bad Sectors</summary>
		public BinarySensorEntity NuttynasExceededMaxBadSectors3 => new(_haContext, "binary_sensor.nuttynas_exceeded_max_bad_sectors_3");
		///<summary>NuttyNAS (Drive 4) Exceeded Max Bad Sectors</summary>
		public BinarySensorEntity NuttynasExceededMaxBadSectors4 => new(_haContext, "binary_sensor.nuttynas_exceeded_max_bad_sectors_4");
		///<summary>NuttyNAS (Drive 5) Exceeded Max Bad Sectors</summary>
		public BinarySensorEntity NuttynasExceededMaxBadSectors5 => new(_haContext, "binary_sensor.nuttynas_exceeded_max_bad_sectors_5");
		///<summary>NuttyNAS (Drive 6) Exceeded Max Bad Sectors</summary>
		public BinarySensorEntity NuttynasExceededMaxBadSectors6 => new(_haContext, "binary_sensor.nuttynas_exceeded_max_bad_sectors_6");
		///<summary>NuttyNAS (Drive 7) Exceeded Max Bad Sectors</summary>
		public BinarySensorEntity NuttynasExceededMaxBadSectors7 => new(_haContext, "binary_sensor.nuttynas_exceeded_max_bad_sectors_7");
		///<summary>NuttyNAS (Drive 8) Exceeded Max Bad Sectors</summary>
		public BinarySensorEntity NuttynasExceededMaxBadSectors8 => new(_haContext, "binary_sensor.nuttynas_exceeded_max_bad_sectors_8");
		///<summary>NuttyNAS (Cache device 1) Exceeded Max Bad Sectors</summary>
		public BinarySensorEntity NuttynasExceededMaxBadSectors9 => new(_haContext, "binary_sensor.nuttynas_exceeded_max_bad_sectors_9");
		///<summary>NuttyNAS Security Status</summary>
		public BinarySensorEntity NuttynasSecurityStatus => new(_haContext, "binary_sensor.nuttynas_security_status");
		///<summary>NuttyNAS Update Available</summary>
		public BinarySensorEntity NuttynasUpdateAvailable => new(_haContext, "binary_sensor.nuttynas_update_available");
		///<summary>Office Light</summary>
		public BinarySensorEntity OfficeLight => new(_haContext, "binary_sensor.office_light");
		///<summary>Office Light Status</summary>
		public BinarySensorEntity OfficeLightStatus => new(_haContext, "binary_sensor.office_light_status");
		///<summary>Other</summary>
		public BinarySensorEntity Other => new(_haContext, "binary_sensor.other");
		///<summary>Oven</summary>
		public BinarySensorEntity Oven => new(_haContext, "binary_sensor.oven");
		///<summary>Oven</summary>
		public BinarySensorEntity Oven2 => new(_haContext, "binary_sensor.oven_2");
		///<summary>Patio Lights</summary>
		public BinarySensorEntity PatioLights => new(_haContext, "binary_sensor.patio_lights");
		///<summary>Patio Lights Status</summary>
		public BinarySensorEntity PatioLightsStatus => new(_haContext, "binary_sensor.patio_lights_status");
		///<summary>Phone - Chris App Inactive</summary>
		public BinarySensorEntity PhoneChrisAppInactive => new(_haContext, "binary_sensor.phone_chris_app_inactive");
		///<summary>Phone - Chris Bluetooth State</summary>
		public BinarySensorEntity PhoneChrisBluetoothState => new(_haContext, "binary_sensor.phone_chris_bluetooth_state");
		///<summary>Chris' Phone is Connected to G35</summary>
		public BinarySensorEntity PhoneChrisConnectedToVehicleChris => new(_haContext, "binary_sensor.phone_chris_connected_to_vehicle_chris");
		///<summary>Chris' Phone is Connected to Suburban</summary>
		public BinarySensorEntity PhoneChrisConnectedToVehicleTruck => new(_haContext, "binary_sensor.phone_chris_connected_to_vehicle_truck");
		///<summary>Phone - Chris Device Locked</summary>
		public BinarySensorEntity PhoneChrisDeviceLocked => new(_haContext, "binary_sensor.phone_chris_device_locked");
		///<summary>Phone - Chris Device Secure</summary>
		public BinarySensorEntity PhoneChrisDeviceSecure => new(_haContext, "binary_sensor.phone_chris_device_secure");
		///<summary>Phone - Chris Doze Mode</summary>
		public BinarySensorEntity PhoneChrisDozeMode => new(_haContext, "binary_sensor.phone_chris_doze_mode");
		///<summary>Phone - Chris Headphones</summary>
		public BinarySensorEntity PhoneChrisHeadphones => new(_haContext, "binary_sensor.phone_chris_headphones");
		///<summary>Phone - Chris High Accuracy Mode</summary>
		public BinarySensorEntity PhoneChrisHighAccuracyMode => new(_haContext, "binary_sensor.phone_chris_high_accuracy_mode");
		///<summary>Phone - Chris Interactive</summary>
		public BinarySensorEntity PhoneChrisInteractive => new(_haContext, "binary_sensor.phone_chris_interactive");
		///<summary>Phone - Chris Is Charging</summary>
		public BinarySensorEntity PhoneChrisIsCharging => new(_haContext, "binary_sensor.phone_chris_is_charging");
		///<summary>Phone - Chris Keyguard Locked</summary>
		public BinarySensorEntity PhoneChrisKeyguardLocked => new(_haContext, "binary_sensor.phone_chris_keyguard_locked");
		///<summary>Phone - Chris Keyguard Secure</summary>
		public BinarySensorEntity PhoneChrisKeyguardSecure => new(_haContext, "binary_sensor.phone_chris_keyguard_secure");
		///<summary>Phone - Chris Mic Muted</summary>
		public BinarySensorEntity PhoneChrisMicMuted => new(_haContext, "binary_sensor.phone_chris_mic_muted");
		///<summary>Phone - Chris Mobile Data</summary>
		public BinarySensorEntity PhoneChrisMobileData => new(_haContext, "binary_sensor.phone_chris_mobile_data");
		///<summary>Phone - Chris Mobile Data Roaming</summary>
		public BinarySensorEntity PhoneChrisMobileDataRoaming => new(_haContext, "binary_sensor.phone_chris_mobile_data_roaming");
		///<summary>Phone - Chris Music Active</summary>
		public BinarySensorEntity PhoneChrisMusicActive => new(_haContext, "binary_sensor.phone_chris_music_active");
		///<summary>Phone - Chris Power Save</summary>
		public BinarySensorEntity PhoneChrisPowerSave => new(_haContext, "binary_sensor.phone_chris_power_save");
		///<summary>Phone - Chris Speakerphone</summary>
		public BinarySensorEntity PhoneChrisSpeakerphone => new(_haContext, "binary_sensor.phone_chris_speakerphone");
		///<summary>Phone - Chris WiFi State</summary>
		public BinarySensorEntity PhoneChrisWifiState => new(_haContext, "binary_sensor.phone_chris_wifi_state");
		///<summary>Phone - Chris Work Profile</summary>
		public BinarySensorEntity PhoneChrisWorkProfile => new(_haContext, "binary_sensor.phone_chris_work_profile");
		///<summary>Melissa's Phone is Connected to MKX</summary>
		public BinarySensorEntity PhoneMelissaConnectedToVehicleMelissa => new(_haContext, "binary_sensor.phone_melissa_connected_to_vehicle_melissa");
		///<summary>Phone - Melissa Is Charging</summary>
		public BinarySensorEntity PhoneMelissaIsCharging => new(_haContext, "binary_sensor.phone_melissa_is_charging");
		///<summary>Pi-Hole Core Update Available</summary>
		public BinarySensorEntity PiHoleCoreUpdateAvailable => new(_haContext, "binary_sensor.pi_hole_core_update_available");
		///<summary>Pi-Hole FTL Update Available</summary>
		public BinarySensorEntity PiHoleFtlUpdateAvailable => new(_haContext, "binary_sensor.pi_hole_ftl_update_available");
		///<summary>Pi-Hole Web Update Available</summary>
		public BinarySensorEntity PiHoleWebUpdateAvailable => new(_haContext, "binary_sensor.pi_hole_web_update_available");
		///<summary>PIR Motion Sensor: Low battery level</summary>
		public BinarySensorEntity PirMotionSensorLowBatteryLevel => new(_haContext, "binary_sensor.pir_motion_sensor_low_battery_level");
		///<summary>Pool and Patio Lights Status</summary>
		public BinarySensorEntity PoolAndPatioLightsStatus => new(_haContext, "binary_sensor.pool_and_patio_lights_status");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity PoolCleaner => new(_haContext, "binary_sensor.pool_cleaner");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity PoolCleaner10 => new(_haContext, "binary_sensor.pool_cleaner_10");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity PoolCleaner11 => new(_haContext, "binary_sensor.pool_cleaner_11");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity PoolCleaner12 => new(_haContext, "binary_sensor.pool_cleaner_12");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity PoolCleaner13 => new(_haContext, "binary_sensor.pool_cleaner_13");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity PoolCleaner14 => new(_haContext, "binary_sensor.pool_cleaner_14");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity PoolCleaner15 => new(_haContext, "binary_sensor.pool_cleaner_15");
		///<summary>Pool Cleaner</summary>
		public BinarySensorEntity PoolCleaner16 => new(_haContext, "binary_sensor.pool_cleaner_16");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity PoolCleaner2 => new(_haContext, "binary_sensor.pool_cleaner_2");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity PoolCleaner3 => new(_haContext, "binary_sensor.pool_cleaner_3");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity PoolCleaner4 => new(_haContext, "binary_sensor.pool_cleaner_4");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity PoolCleaner5 => new(_haContext, "binary_sensor.pool_cleaner_5");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity PoolCleaner6 => new(_haContext, "binary_sensor.pool_cleaner_6");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity PoolCleaner7 => new(_haContext, "binary_sensor.pool_cleaner_7");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity PoolCleaner8 => new(_haContext, "binary_sensor.pool_cleaner_8");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity PoolCleaner9 => new(_haContext, "binary_sensor.pool_cleaner_9");
		///<summary>Pool Lights</summary>
		public BinarySensorEntity PoolLights => new(_haContext, "binary_sensor.pool_lights");
		///<summary>Pool Pump</summary>
		public BinarySensorEntity PoolPump3 => new(_haContext, "binary_sensor.pool_pump_3");
		///<summary>Pool Pump</summary>
		public BinarySensorEntity PoolPump6 => new(_haContext, "binary_sensor.pool_pump_6");
		///<summary>Pool Pumps Status</summary>
		public BinarySensorEntity PoolPumpsStatus => new(_haContext, "binary_sensor.pool_pumps_status");
		///<summary>Presence</summary>
		public BinarySensorEntity PresenceAll => new(_haContext, "binary_sensor.presence_all");
		///<summary>Pump</summary>
		public BinarySensorEntity Pump => new(_haContext, "binary_sensor.pump");
		///<summary>Pump 2</summary>
		public BinarySensorEntity Pump2 => new(_haContext, "binary_sensor.pump_2");
		///<summary>Pump 2</summary>
		public BinarySensorEntity Pump23 => new(_haContext, "binary_sensor.pump_2_3");
		///<summary>Robo-Vac Status</summary>
		public BinarySensorEntity RoboVacStatus => new(_haContext, "binary_sensor.robo_vac_status");
		///<summary>Second Garage Door Closed Sensor</summary>
		public BinarySensorEntity SecondGarageDoorClosedSensor => new(_haContext, "binary_sensor.second_garage_door_closed_sensor");
		///<summary>Second Garage Door Open Sensor</summary>
		public BinarySensorEntity SecondGarageDoorOpenSensor => new(_haContext, "binary_sensor.second_garage_door_open_sensor");
		///<summary>Second Garage Door Status</summary>
		public BinarySensorEntity SecondGarageDoorStatus => new(_haContext, "binary_sensor.second_garage_door_status");
		///<summary>SM-G965U1 App Inactive</summary>
		public BinarySensorEntity SmG965u1AppInactive => new(_haContext, "binary_sensor.sm_g965u1_app_inactive");
		///<summary>SM-G965U1 Bluetooth State</summary>
		public BinarySensorEntity SmG965u1BluetoothState => new(_haContext, "binary_sensor.sm_g965u1_bluetooth_state");
		///<summary>SM-G965U1 Device Locked</summary>
		public BinarySensorEntity SmG965u1DeviceLocked => new(_haContext, "binary_sensor.sm_g965u1_device_locked");
		///<summary>SM-G965U1 Device Secure</summary>
		public BinarySensorEntity SmG965u1DeviceSecure => new(_haContext, "binary_sensor.sm_g965u1_device_secure");
		///<summary>SM-G965U1 Doze Mode</summary>
		public BinarySensorEntity SmG965u1DozeMode => new(_haContext, "binary_sensor.sm_g965u1_doze_mode");
		///<summary>SM-G965U1 Headphones</summary>
		public BinarySensorEntity SmG965u1Headphones => new(_haContext, "binary_sensor.sm_g965u1_headphones");
		///<summary>SM-G965U1 Interactive</summary>
		public BinarySensorEntity SmG965u1Interactive => new(_haContext, "binary_sensor.sm_g965u1_interactive");
		///<summary>SM-G965U1 Keyguard Locked</summary>
		public BinarySensorEntity SmG965u1KeyguardLocked => new(_haContext, "binary_sensor.sm_g965u1_keyguard_locked");
		///<summary>SM-G965U1 Keyguard Secure</summary>
		public BinarySensorEntity SmG965u1KeyguardSecure => new(_haContext, "binary_sensor.sm_g965u1_keyguard_secure");
		///<summary>SM-G965U1 Mic Muted</summary>
		public BinarySensorEntity SmG965u1MicMuted => new(_haContext, "binary_sensor.sm_g965u1_mic_muted");
		///<summary>SM-G965U1 Mobile Data</summary>
		public BinarySensorEntity SmG965u1MobileData => new(_haContext, "binary_sensor.sm_g965u1_mobile_data");
		///<summary>SM-G965U1 Mobile Data Roaming</summary>
		public BinarySensorEntity SmG965u1MobileDataRoaming => new(_haContext, "binary_sensor.sm_g965u1_mobile_data_roaming");
		///<summary>SM-G965U1 Music Active</summary>
		public BinarySensorEntity SmG965u1MusicActive => new(_haContext, "binary_sensor.sm_g965u1_music_active");
		///<summary>SM-G965U1 Power Save</summary>
		public BinarySensorEntity SmG965u1PowerSave => new(_haContext, "binary_sensor.sm_g965u1_power_save");
		///<summary>SM-G965U1 Speakerphone</summary>
		public BinarySensorEntity SmG965u1Speakerphone => new(_haContext, "binary_sensor.sm_g965u1_speakerphone");
		///<summary>SM-G965U1 WiFi State</summary>
		public BinarySensorEntity SmG965u1WifiState => new(_haContext, "binary_sensor.sm_g965u1_wifi_state");
		///<summary>Someone is in Bed</summary>
		public BinarySensorEntity SomeoneIsInBed => new(_haContext, "binary_sensor.someone_is_in_bed");
		///<summary>Storage Space is Low</summary>
		public BinarySensorEntity StorageAlert => new(_haContext, "binary_sensor.storage_alert");
		///<summary>Sump Pump</summary>
		public BinarySensorEntity SumpPump => new(_haContext, "binary_sensor.sump_pump");
		///<summary>Sump Pump Status</summary>
		public BinarySensorEntity SumpPumpStatus => new(_haContext, "binary_sensor.sump_pump_status");
		///<summary>Time to Upgrade Home Assistant</summary>
		public BinarySensorEntity TimeToUpgrade => new(_haContext, "binary_sensor.time_to_upgrade");
		///<summary>Time to Vacuum the Main Floor</summary>
		public BinarySensorEntity TimeToVacuumMainFloor => new(_haContext, "binary_sensor.time_to_vacuum_main_floor");
		///<summary>Upstairs Bathroom Motion</summary>
		public BinarySensorEntity UpstairsBathroomMotion => new(_haContext, "binary_sensor.upstairs_bathroom_motion");
		///<summary>Upstairs Bathroom Motion (Battery)</summary>
		public BinarySensorEntity UpstairsBathroomMotionBattery => new(_haContext, "binary_sensor.upstairs_bathroom_motion_battery");
		///<summary>Upstairs Beep Enabled</summary>
		public BinarySensorEntity UpstairsBeepEnabled => new(_haContext, "binary_sensor.upstairs_beep_enabled");
		///<summary>Upstairs Running</summary>
		public BinarySensorEntity UpstairsRunning => new(_haContext, "binary_sensor.upstairs_running");
		///<summary>Upstairs Screen Locked</summary>
		public BinarySensorEntity UpstairsScreenLocked => new(_haContext, "binary_sensor.upstairs_screen_locked");
		///<summary>Vacuum 3</summary>
		public BinarySensorEntity Vacuum3 => new(_haContext, "binary_sensor.vacuum_3");
		///<summary>Vacuum 4</summary>
		public BinarySensorEntity Vacuum4 => new(_haContext, "binary_sensor.vacuum_4");
		///<summary>Washer</summary>
		public BinarySensorEntity Washer => new(_haContext, "binary_sensor.washer");
		///<summary>Washing Machine</summary>
		public BinarySensorEntity WashingMachine => new(_haContext, "binary_sensor.washing_machine");
		///<summary>Washing Machine Status</summary>
		public BinarySensorEntity WashingMachineStatus => new(_haContext, "binary_sensor.washing_machine_status");
		///<summary>Water Heater_running</summary>
		public BinarySensorEntity WaterHeaterRunning => new(_haContext, "binary_sensor.water_heater_running");
		///<summary>Water Heater_shutoff_valve</summary>
		public BinarySensorEntity WaterHeaterShutoffValve => new(_haContext, "binary_sensor.water_heater_shutoff_valve");
		///<summary>Whirlpool Firmware Update</summary>
		public BinarySensorEntity WhirlpoolFirmwareUpdate => new(_haContext, "binary_sensor.whirlpool_firmware_update");
		///<summary>Whirlpool Overheating</summary>
		public BinarySensorEntity WhirlpoolOverheating => new(_haContext, "binary_sensor.whirlpool_overheating");
		///<summary>Whirlpool Overpowering</summary>
		public BinarySensorEntity WhirlpoolOverpowering => new(_haContext, "binary_sensor.whirlpool_overpowering");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity ZzOldSmartPlug => new(_haContext, "binary_sensor.zz_old_smart_plug");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity ZzOldSmartPlug2 => new(_haContext, "binary_sensor.zz_old_smart_plug_2");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity ZzOldSmartPlug3 => new(_haContext, "binary_sensor.zz_old_smart_plug_3");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity ZzOldSmartPlug4 => new(_haContext, "binary_sensor.zz_old_smart_plug_4");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity ZzOldSmartPlug5 => new(_haContext, "binary_sensor.zz_old_smart_plug_5");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity ZzOldSmartPlug6 => new(_haContext, "binary_sensor.zz_old_smart_plug_6");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity ZzOldSmartPlug7 => new(_haContext, "binary_sensor.zz_old_smart_plug_7");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity ZzOldSmartPlug8 => new(_haContext, "binary_sensor.zz_old_smart_plug_8");
		///<summary>ZZ OLD SMART PLUG</summary>
		public BinarySensorEntity ZzOldSmartPlug9 => new(_haContext, "binary_sensor.zz_old_smart_plug_9");
	}

	public partial class ButtonEntities
	{
		private readonly IHaContext _haContext;
		public ButtonEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Back Light: Ping</summary>
		public ButtonEntity BackLightPing3 => new(_haContext, "button.back_light_ping_3");
		///<summary>Bar Light: Ping</summary>
		public ButtonEntity BarLightPing2 => new(_haContext, "button.bar_light_ping_2");
		///<summary>Basement Lights: Ping</summary>
		public ButtonEntity BasementLightsPing => new(_haContext, "button.basement_lights_ping");
		///<summary>Basement TV Lights: Ping</summary>
		public ButtonEntity BasementTvLightsPing2 => new(_haContext, "button.basement_tv_lights_ping_2");
		///<summary>Bird Bath: Ping</summary>
		public ButtonEntity BirdBathPing => new(_haContext, "button.bird_bath_ping");
		///<summary>Deck Light: Ping</summary>
		public ButtonEntity DeckLightPing4 => new(_haContext, "button.deck_light_ping_4");
		///<summary>Gate Camera Reboot</summary>
		public ButtonEntity GateCameraReboot => new(_haContext, "button.gate_camera_reboot");
		///<summary>Guest Bedroom Light: Ping</summary>
		public ButtonEntity GuestBedroomLightPing => new(_haContext, "button.guest_bedroom_light_ping");
		///<summary>Upstairs Bathroom Main Light: Ping</summary>
		public ButtonEntity InWallDimmerPing => new(_haContext, "button.in_wall_dimmer_ping");
		///<summary>Master Bath Outlet: Ping</summary>
		public ButtonEntity MasterBathOutletPing => new(_haContext, "button.master_bath_outlet_ping");
		///<summary>Mayson's Fan: Ping</summary>
		public ButtonEntity MaysonsFanPing => new(_haContext, "button.maysons_fan_ping");
		///<summary>Mayson's Lights (Outlet): Ping</summary>
		public ButtonEntity MaysonsLightsOutletPing => new(_haContext, "button.maysons_lights_outlet_ping");
		///<summary>Mayson's Lights (Switch): Ping</summary>
		public ButtonEntity MaysonsLightsSwitchPing3 => new(_haContext, "button.maysons_lights_switch_ping_3");
		///<summary>Mayson's Room Motion: Ping</summary>
		public ButtonEntity MaysonsRoomMotionPing => new(_haContext, "button.maysons_room_motion_ping");
		///<summary>NuttyNAS Reboot</summary>
		public ButtonEntity NuttynasReboot => new(_haContext, "button.nuttynas_reboot");
		///<summary>NuttyNAS Shutdown</summary>
		public ButtonEntity NuttynasShutdown => new(_haContext, "button.nuttynas_shutdown");
		///<summary>Pool Camera Reboot</summary>
		public ButtonEntity PoolCameraReboot => new(_haContext, "button.pool_camera_reboot");
		///<summary>Pool Table Light: Ping</summary>
		public ButtonEntity PoolTableLightPing => new(_haContext, "button.pool_table_light_ping");
		///<summary>Restart Basement Bathroom Light and Fan</summary>
		public ButtonEntity RestartBasementBathroomLightAndFan => new(_haContext, "button.restart_basement_bathroom_light_and_fan");
		///<summary>Restart Basement Bathroom Sensor</summary>
		public ButtonEntity RestartBasementBathroomSensor => new(_haContext, "button.restart_basement_bathroom_sensor");
		///<summary>Restart Basement Bathroom Shower Light and Heater</summary>
		public ButtonEntity RestartBasementBathroomShowerLightAndHeater => new(_haContext, "button.restart_basement_bathroom_shower_light_and_heater");
		///<summary>Restart Basement Fridge</summary>
		public ButtonEntity RestartBasementFridge => new(_haContext, "button.restart_basement_fridge");
		///<summary>Restart Basement Stair Lights</summary>
		public ButtonEntity RestartBasementStairLights => new(_haContext, "button.restart_basement_stair_lights");
		///<summary>Restart Basement Stair Lights 2</summary>
		public ButtonEntity RestartBasementStairLights2 => new(_haContext, "button.restart_basement_stair_lights_2");
		///<summary>Restart Basement TV</summary>
		public ButtonEntity RestartBasementTv => new(_haContext, "button.restart_basement_tv");
		///<summary>Restart Coffee Maker</summary>
		public ButtonEntity RestartCoffeeMaker => new(_haContext, "button.restart_coffee_maker");
		///<summary>Restart Computer Light</summary>
		public ButtonEntity RestartComputerLight => new(_haContext, "button.restart_computer_light");
		///<summary>Restart Dining Room Light</summary>
		public ButtonEntity RestartDiningRoomLight => new(_haContext, "button.restart_dining_room_light");
		///<summary>Restart Family Room Light</summary>
		public ButtonEntity RestartFamilyRoomLight => new(_haContext, "button.restart_family_room_light");
		///<summary>Restart Family Room TV</summary>
		public ButtonEntity RestartFamilyRoomTv => new(_haContext, "button.restart_family_room_tv");
		///<summary>Restart Fire Pit and Fountain</summary>
		public ButtonEntity RestartFirePitAndFountain => new(_haContext, "button.restart_fire_pit_and_fountain");
		///<summary>Restart Front Entry Lights</summary>
		public ButtonEntity RestartFrontEntryLights => new(_haContext, "button.restart_front_entry_lights");
		///<summary>Restart Front Entry Lights 2</summary>
		public ButtonEntity RestartFrontEntryLights2 => new(_haContext, "button.restart_front_entry_lights_2");
		///<summary>Restart Front Lights</summary>
		public ButtonEntity RestartFrontLights => new(_haContext, "button.restart_front_lights");
		///<summary>Restart Garage Fridge</summary>
		public ButtonEntity RestartGarageFridge => new(_haContext, "button.restart_garage_fridge");
		///<summary>Restart Garage Lights</summary>
		public ButtonEntity RestartGarageLights => new(_haContext, "button.restart_garage_lights");
		///<summary>Restart Kitchen Bar Lights</summary>
		public ButtonEntity RestartKitchenBarLights => new(_haContext, "button.restart_kitchen_bar_lights");
		///<summary>Restart Kitchen Fridge</summary>
		public ButtonEntity RestartKitchenFridge => new(_haContext, "button.restart_kitchen_fridge");
		///<summary>Restart Kitchen Table Light</summary>
		public ButtonEntity RestartKitchenTableLight => new(_haContext, "button.restart_kitchen_table_light");
		///<summary>Restart Living Room Lights</summary>
		public ButtonEntity RestartLivingRoomLights => new(_haContext, "button.restart_living_room_lights");
		///<summary>Restart Master Bathroom Fan</summary>
		public ButtonEntity RestartMasterBathroomFan => new(_haContext, "button.restart_master_bathroom_fan");
		///<summary>Restart Master Bathroom Lights</summary>
		public ButtonEntity RestartMasterBathroomLights => new(_haContext, "button.restart_master_bathroom_lights");
		///<summary>Restart Master Bathroom Lights 2</summary>
		public ButtonEntity RestartMasterBathroomLights2 => new(_haContext, "button.restart_master_bathroom_lights_2");
		///<summary>Restart Master Bed</summary>
		public ButtonEntity RestartMasterBed => new(_haContext, "button.restart_master_bed");
		///<summary>Restart Network Equipment</summary>
		public ButtonEntity RestartNetworkEquipment => new(_haContext, "button.restart_network_equipment");
		///<summary>Restart Office Light</summary>
		public ButtonEntity RestartOfficeLight => new(_haContext, "button.restart_office_light");
		///<summary>Restart Patio Lights</summary>
		public ButtonEntity RestartPatioLights => new(_haContext, "button.restart_patio_lights");
		///<summary>Restart Pool and Patio Lights</summary>
		public ButtonEntity RestartPoolAndPatioLights => new(_haContext, "button.restart_pool_and_patio_lights");
		///<summary>Restart Pool Pumps</summary>
		public ButtonEntity RestartPoolPumps => new(_haContext, "button.restart_pool_pumps");
		///<summary>Restart Second Garage Door</summary>
		public ButtonEntity RestartSecondGarageDoor => new(_haContext, "button.restart_second_garage_door");
		///<summary>Restart Sump Pump</summary>
		public ButtonEntity RestartSumpPump => new(_haContext, "button.restart_sump_pump");
		///<summary>Restart Washing Machine</summary>
		public ButtonEntity RestartWashingMachine => new(_haContext, "button.restart_washing_machine");
		///<summary>Upstairs Bathroom Fan: Ping</summary>
		public ButtonEntity UpstairsBathroomFanPing2 => new(_haContext, "button.upstairs_bathroom_fan_ping_2");
		///<summary>Upstairs Bathroom Sensor: Ping</summary>
		public ButtonEntity UpstairsBathroomSensorPing => new(_haContext, "button.upstairs_bathroom_sensor_ping");
		///<summary>Upstairs Bathroom Vanity Light: Ping</summary>
		public ButtonEntity UpstairsBathroomVanityLightPing => new(_haContext, "button.upstairs_bathroom_vanity_light_ping");
		///<summary>Whirlpool OTA Update</summary>
		public ButtonEntity WhirlpoolOtaUpdate => new(_haContext, "button.whirlpool_ota_update");
		///<summary>Whirlpool Reboot</summary>
		public ButtonEntity WhirlpoolReboot => new(_haContext, "button.whirlpool_reboot");
	}

	public partial class CalendarEntities
	{
		private readonly IHaContext _haContext;
		public CalendarEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>chrisnussbaum@gmail.com</summary>
		public CalendarEntity ChrisnussbaumGmailCom => new(_haContext, "calendar.chrisnussbaum_gmail_com");
		///<summary>Contacts</summary>
		public CalendarEntity Contacts2 => new(_haContext, "calendar.contacts_2");
		///<summary>Family</summary>
		public CalendarEntity Family => new(_haContext, "calendar.family");
		///<summary>Garbage Collection</summary>
		public CalendarEntity GarbageCollection => new(_haContext, "calendar.garbage_collection");
		///<summary>Holidays in United States</summary>
		public CalendarEntity HolidaysInUnitedStates => new(_haContext, "calendar.holidays_in_united_states");
		///<summary>Ticketmaster</summary>
		public CalendarEntity Ticketmaster => new(_haContext, "calendar.ticketmaster");
		///<summary>Troop 479</summary>
		public CalendarEntity Troop479 => new(_haContext, "calendar.troop_479");
	}

	public partial class CameraEntities
	{
		private readonly IHaContext _haContext;
		public CameraEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Front Door</summary>
		public CameraEntity FrontDoor => new(_haContext, "camera.front_door");
		///<summary>Gate Camera</summary>
		public CameraEntity GateCameraOnvif => new(_haContext, "camera.gate_camera_onvif");
		///<summary>Neato Cleaning Map</summary>
		public CameraEntity NeatoCleaningMap => new(_haContext, "camera.neato_cleaning_map");
		///<summary>NuttyNAS Gate Camera</summary>
		public CameraEntity NuttynasGateCamera => new(_haContext, "camera.nuttynas_gate_camera");
		///<summary>NuttyNAS Pool Camera</summary>
		public CameraEntity NuttynasPoolCamera => new(_haContext, "camera.nuttynas_pool_camera");
		///<summary>Pool Camera</summary>
		public CameraEntity PoolCameraOnvif => new(_haContext, "camera.pool_camera_onvif");
	}

	public partial class ClimateEntities
	{
		private readonly IHaContext _haContext;
		public ClimateEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Basement</summary>
		public ClimateEntity Basement => new(_haContext, "climate.basement");
		///<summary>Garage Fridge</summary>
		public ClimateEntity GarageFridge => new(_haContext, "climate.garage_fridge");
		///<summary>Main Floor</summary>
		public ClimateEntity MainFloor => new(_haContext, "climate.main_floor");
		///<summary>Upstairs</summary>
		public ClimateEntity Upstairs => new(_haContext, "climate.upstairs");
	}

	public partial class CounterEntities
	{
		private readonly IHaContext _haContext;
		public CounterEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Mayson Electronics Time</summary>
		public CounterEntity MaysonElectronicsTime => new(_haContext, "counter.mayson_electronics_time");
	}

	public partial class CoverEntities
	{
		private readonly IHaContext _haContext;
		public CoverEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Main Garage Door</summary>
		public CoverEntity MainGarageDoor => new(_haContext, "cover.main_garage_door");
		///<summary>Second Garage Door</summary>
		public CoverEntity SecondGarageDoor => new(_haContext, "cover.second_garage_door");
	}

	public partial class DeviceTrackerEntities
	{
		private readonly IHaContext _haContext;
		public DeviceTrackerEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>AT&T Maestro™ Plus</summary>
		public DeviceTrackerEntity AtTMaestrotmPlus => new(_haContext, "device_tracker.at_t_maestrotm_plus");
		///<summary>Basement Bathroom Echo</summary>
		public DeviceTrackerEntity BasementBathroomEcho => new(_haContext, "device_tracker.basement_bathroom_echo");
		///<summary>Basement Bathroom Light and Fan</summary>
		public DeviceTrackerEntity BasementBathroomLightAndFan => new(_haContext, "device_tracker.basement_bathroom_light_and_fan");
		///<summary>Basement Bathroom Sensor</summary>
		public DeviceTrackerEntity BasementBathroomSensor => new(_haContext, "device_tracker.basement_bathroom_sensor");
		///<summary>Basement Bathroom Shower Light and Heater</summary>
		public DeviceTrackerEntity BasementBathroomShowerLightAndHeater => new(_haContext, "device_tracker.basement_bathroom_shower_light_and_heater");
		///<summary>Basement Echo</summary>
		public DeviceTrackerEntity BasementEcho => new(_haContext, "device_tracker.basement_echo");
		///<summary>Basement Fridge Smart Plug</summary>
		public DeviceTrackerEntity BasementFridgeSmartPlug => new(_haContext, "device_tracker.basement_fridge_smart_plug");
		///<summary>Basement Harmony Hub</summary>
		public DeviceTrackerEntity BasementHarmonyHub => new(_haContext, "device_tracker.basement_harmony_hub");
		///<summary>Basement Nest Protect</summary>
		public DeviceTrackerEntity BasementNestProtect => new(_haContext, "device_tracker.basement_nest_protect");
		///<summary>Basement TV Smart Plug</summary>
		public DeviceTrackerEntity BasementTvSmartPlug => new(_haContext, "device_tracker.basement_tv_smart_plug");
		///<summary>Bradyn's iPhone</summary>
		public DeviceTrackerEntity BradynSIphone => new(_haContext, "device_tracker.bradyn_s_iphone");
		///<summary>Bradyn's MacBook</summary>
		public DeviceTrackerEntity BradynSMacbook => new(_haContext, "device_tracker.bradyn_s_macbook");
		///<summary>Bradyn's TV</summary>
		public DeviceTrackerEntity BradynSTv => new(_haContext, "device_tracker.bradyn_s_tv");
		///<summary>Chris' Keys</summary>
		public DeviceTrackerEntity ChrisKeys => new(_haContext, "device_tracker.chris_keys");
		///<summary>Chris' Laptop</summary>
		public DeviceTrackerEntity ChrisLaptop => new(_haContext, "device_tracker.chris_laptop");
		///<summary>Chris' Phone</summary>
		public DeviceTrackerEntity ChrisPhone => new(_haContext, "device_tracker.chris_phone");
		///<summary>Chris's Pixel 3</summary>
		public DeviceTrackerEntity ChrisSPixel3 => new(_haContext, "device_tracker.chris_s_pixel_3");
		///<summary>Chris' Work Laptop</summary>
		public DeviceTrackerEntity ChrisWorkLaptop => new(_haContext, "device_tracker.chris_work_laptop");
		///<summary>Coffee Maker</summary>
		public DeviceTrackerEntity CoffeeMaker => new(_haContext, "device_tracker.coffee_maker");
		///<summary>Garage Echo</summary>
		public DeviceTrackerEntity GarageEcho => new(_haContext, "device_tracker.garage_echo");
		///<summary>Kitchen Echo</summary>
		public DeviceTrackerEntity KitchenEcho => new(_haContext, "device_tracker.kitchen_echo");
		///<summary>Kitchen Fridge Smart Plug</summary>
		public DeviceTrackerEntity KitchenFridgeSmartPlug => new(_haContext, "device_tracker.kitchen_fridge_smart_plug");
		///<summary>Kitchen Tablet</summary>
		public DeviceTrackerEntity KitchenTablet => new(_haContext, "device_tracker.kitchen_tablet");
		///<summary>Living Room Echo</summary>
		public DeviceTrackerEntity LivingRoomEcho => new(_haContext, "device_tracker.living_room_echo");
		///<summary>Main Floor Bathroom Echo</summary>
		public DeviceTrackerEntity MainFloorBathroomEcho => new(_haContext, "device_tracker.main_floor_bathroom_echo");
		///<summary>Master Bathroom Echo</summary>
		public DeviceTrackerEntity MasterBathroomEcho => new(_haContext, "device_tracker.master_bathroom_echo");
		///<summary>Master Bedroom Fire TV</summary>
		public DeviceTrackerEntity MasterBedroomFireTv => new(_haContext, "device_tracker.master_bedroom_fire_tv");
		///<summary>Master Bedroom Nest Protect</summary>
		public DeviceTrackerEntity MasterBedroomNestProtect => new(_haContext, "device_tracker.master_bedroom_nest_protect");
		///<summary>Mayson's Echo</summary>
		public DeviceTrackerEntity MaysonSEcho => new(_haContext, "device_tracker.mayson_s_echo");
		///<summary>Mayson's Phone</summary>
		public DeviceTrackerEntity MaysonSPhone => new(_haContext, "device_tracker.mayson_s_phone");
		///<summary>Mayson's V350U</summary>
		public DeviceTrackerEntity MaysonSV350u => new(_haContext, "device_tracker.mayson_s_v350u");
		///<summary>Mayson's Tablet</summary>
		public DeviceTrackerEntity MaysonsTablet => new(_haContext, "device_tracker.maysons_tablet");
		///<summary>Melissa's Keys</summary>
		public DeviceTrackerEntity MelissaSKeys => new(_haContext, "device_tracker.melissa_s_keys");
		///<summary>Melissa's Laptop</summary>
		public DeviceTrackerEntity MelissaSLaptop => new(_haContext, "device_tracker.melissa_s_laptop");
		///<summary>Melissa's Work Laptop</summary>
		public DeviceTrackerEntity MelissaSWorkLaptop => new(_haContext, "device_tracker.melissa_s_work_laptop");
		///<summary>Network Equipment Smart Plug</summary>
		public DeviceTrackerEntity NetworkEquipmentSmartPlug => new(_haContext, "device_tracker.network_equipment_smart_plug");
		///<summary>Office Echo</summary>
		public DeviceTrackerEntity OfficeEcho => new(_haContext, "device_tracker.office_echo");
		///<summary>Phone - Chris</summary>
		public DeviceTrackerEntity PhoneChris => new(_haContext, "device_tracker.phone_chris");
		///<summary>Ring Doorbell</summary>
		public DeviceTrackerEntity RingDoorbell => new(_haContext, "device_tracker.ring_doorbell");
		///<summary>Sense</summary>
		public DeviceTrackerEntity Sense => new(_haContext, "device_tracker.sense");
		///<summary>Phone - Melissa</summary>
		public DeviceTrackerEntity SmG965u1 => new(_haContext, "device_tracker.sm_g965u1");
		///<summary>Sump Pump Smart Plug</summary>
		public DeviceTrackerEntity SumpPumpSmartPlug => new(_haContext, "device_tracker.sump_pump_smart_plug");
		///<summary>Thermostat</summary>
		public DeviceTrackerEntity Thermostat => new(_haContext, "device_tracker.thermostat");
		public DeviceTrackerEntity Unifi14913884C4A2Default => new(_haContext, "device_tracker.unifi_14_91_38_84_c4_a2_default");
		///<summary>Front Lights</summary>
		public DeviceTrackerEntity Unifi2462Ab49941cDefault => new(_haContext, "device_tracker.unifi_24_62_ab_49_94_1c_default");
		///<summary>Kitchen Bar Lights</summary>
		public DeviceTrackerEntity Unifi2462Ab4994E1Default => new(_haContext, "device_tracker.unifi_24_62_ab_49_94_e1_default");
		///<summary>Pool Pumps</summary>
		public DeviceTrackerEntity Unifi2cF43269185cDefault => new(_haContext, "device_tracker.unifi_2c_f4_32_69_18_5c_default");
		///<summary>Pool and Patio Lights</summary>
		public DeviceTrackerEntity Unifi2cF43285451bDefault => new(_haContext, "device_tracker.unifi_2c_f4_32_85_45_1b_default");
		///<summary>VacuumRobot</summary>
		public DeviceTrackerEntity Unifi4006A09218E4Default => new(_haContext, "device_tracker.unifi_40_06_a0_92_18_e4_default");
		///<summary>Family Room TV Smart Plug</summary>
		public DeviceTrackerEntity Unifi600194Aa0072Default => new(_haContext, "device_tracker.unifi_60_01_94_aa_00_72_default");
		///<summary>Whirlpool</summary>
		public DeviceTrackerEntity Unifi84CcA89fF2A3Default => new(_haContext, "device_tracker.unifi_84_cc_a8_9f_f2_a3_default");
		///<summary>Garage Lights</summary>
		public DeviceTrackerEntity Unifi84CcA8A81495Default => new(_haContext, "device_tracker.unifi_84_cc_a8_a8_14_95_default");
		///<summary>Fire Pit and Fountain</summary>
		public DeviceTrackerEntity UnifiA4Cf12F4E532Default => new(_haContext, "device_tracker.unifi_a4_cf_12_f4_e5_32_default");
		///<summary>Master Bed Sensor</summary>
		public DeviceTrackerEntity UnifiB4E62d458289Default => new(_haContext, "device_tracker.unifi_b4_e6_2d_45_82_89_default");
		public DeviceTrackerEntity UnifiBeA437E1A204Default => new(_haContext, "device_tracker.unifi_be_a4_37_e1_a2_04_default");
		public DeviceTrackerEntity UnifiBeCeD52c39E0Default => new(_haContext, "device_tracker.unifi_be_ce_d5_2c_39_e0_default");
		///<summary>Patio Lights</summary>
		public DeviceTrackerEntity UnifiCc50E3Cd570aDefault => new(_haContext, "device_tracker.unifi_cc_50_e3_cd_57_0a_default");
		///<summary>Office Lights</summary>
		public DeviceTrackerEntity UnifiD8F15bA52a0eDefault => new(_haContext, "device_tracker.unifi_d8_f1_5b_a5_2a_0e_default");
		///<summary>Kitchen Table Light</summary>
		public DeviceTrackerEntity UnifiD8F15bA54dC8Default => new(_haContext, "device_tracker.unifi_d8_f1_5b_a5_4d_c8_default");
		///<summary>Basement Stairs Lights</summary>
		public DeviceTrackerEntity UnifiD8F15bB42eE3Default => new(_haContext, "device_tracker.unifi_d8_f1_5b_b4_2e_e3_default");
		///<summary>Computer Light</summary>
		public DeviceTrackerEntity UnifiD8F15bB42f71Default => new(_haContext, "device_tracker.unifi_d8_f1_5b_b4_2f_71_default");
		///<summary>Basement Stairs Lights 2</summary>
		public DeviceTrackerEntity UnifiD8F15bB430DcDefault => new(_haContext, "device_tracker.unifi_d8_f1_5b_b4_30_dc_default");
		///<summary>Family Room Light</summary>
		public DeviceTrackerEntity UnifiD8F15bB432AbDefault => new(_haContext, "device_tracker.unifi_d8_f1_5b_b4_32_ab_default");
		///<summary>Front Entry Lights</summary>
		public DeviceTrackerEntity UnifiD8F15bDcDa64Default => new(_haContext, "device_tracker.unifi_d8_f1_5b_dc_da_64_default");
		///<summary>Front Entry Lights 2</summary>
		public DeviceTrackerEntity UnifiD8F15bDeEf08Default => new(_haContext, "device_tracker.unifi_d8_f1_5b_de_ef_08_default");
		///<summary>Master Bath Lights</summary>
		public DeviceTrackerEntity UnifiD8F15bDeF790Default => new(_haContext, "device_tracker.unifi_d8_f1_5b_de_f7_90_default");
		///<summary>Master Bath Fan</summary>
		public DeviceTrackerEntity UnifiD8F15bDf58C0Default => new(_haContext, "device_tracker.unifi_d8_f1_5b_df_58_c0_default");
		///<summary>Master Bath Lights 2</summary>
		public DeviceTrackerEntity UnifiD8F15bDf5b37Default => new(_haContext, "device_tracker.unifi_d8_f1_5b_df_5b_37_default");
		///<summary>Living Room Lights</summary>
		public DeviceTrackerEntity UnifiD8F15bDf5b94Default => new(_haContext, "device_tracker.unifi_d8_f1_5b_df_5b_94_default");
		///<summary>Dining Room Light</summary>
		public DeviceTrackerEntity UnifiD8F15bDf5c34Default => new(_haContext, "device_tracker.unifi_d8_f1_5b_df_5c_34_default");
		///<summary>Second Garage Door</summary>
		public DeviceTrackerEntity UnifiEcFaBc4c72BcDefault => new(_haContext, "device_tracker.unifi_ec_fa_bc_4c_72_bc_default");
		public DeviceTrackerEntity UnifiF0817382BeEdDefault => new(_haContext, "device_tracker.unifi_f0_81_73_82_be_ed_default");
		///<summary>Upstairs Nest Protect</summary>
		public DeviceTrackerEntity UpstairsNestProtect => new(_haContext, "device_tracker.upstairs_nest_protect");
		///<summary>v350u</summary>
		public DeviceTrackerEntity V350u => new(_haContext, "device_tracker.v350u");
		///<summary>G35</summary>
		public DeviceTrackerEntity VehicleChris => new(_haContext, "device_tracker.vehicle_chris");
		///<summary>MKX</summary>
		public DeviceTrackerEntity VehicleMelissa => new(_haContext, "device_tracker.vehicle_melissa");
		///<summary>Suburban</summary>
		public DeviceTrackerEntity VehicleTruck => new(_haContext, "device_tracker.vehicle_truck");
		///<summary>Washing Machine Smart Plug</summary>
		public DeviceTrackerEntity WashingMachineSmartPlug => new(_haContext, "device_tracker.washing_machine_smart_plug");
		///<summary>Water Heater</summary>
		public DeviceTrackerEntity WaterHeater => new(_haContext, "device_tracker.water_heater");
	}

	public partial class FanEntities
	{
		private readonly IHaContext _haContext;
		public FanEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Basement Bathroom Fan</summary>
		public FanEntity BasementBathroomFan => new(_haContext, "fan.basement_bathroom_fan");
		///<summary>Master Bathroom Fan</summary>
		public FanEntity MasterBathroomFan => new(_haContext, "fan.master_bathroom_fan");
	}

	public partial class InputBooleanEntities
	{
		private readonly IHaContext _haContext;
		public InputBooleanEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Day/Night Mode</summary>
		public InputBooleanEntity DayNight => new(_haContext, "input_boolean.day_night");
		///<summary>Guest Mode</summary>
		public InputBooleanEntity GuestMode => new(_haContext, "input_boolean.guest_mode");
		///<summary>Keep Alive Switch</summary>
		public InputBooleanEntity KeepAliveSwitch => new(_haContext, "input_boolean.keep_alive_switch");
		///<summary>Mayson Has His Phone</summary>
		public InputBooleanEntity MaysonHasHisPhone => new(_haContext, "input_boolean.mayson_has_his_phone");
		///<summary>netdaemon_nutty_tree_net_daemon_apps_appointment_reminders_appointment_reminders_app</summary>
		public InputBooleanEntity NetdaemonNuttyTreeNetDaemonAppsAppointmentRemindersAppointmentRemindersApp => new(_haContext, "input_boolean.netdaemon_nutty_tree_net_daemon_apps_appointment_reminders_appointment_reminders_app");
		///<summary>Pool Party Mode</summary>
		public InputBooleanEntity PoolPartyMode => new(_haContext, "input_boolean.pool_party_mode");
	}

	public partial class InputDatetimeEntities
	{
		private readonly IHaContext _haContext;
		public InputDatetimeEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Misc - Last Main Floor Vacuum Time</summary>
		public InputDatetimeEntity MiscLastMainFloorVacuumTime => new(_haContext, "input_datetime.misc_last_main_floor_vacuum_time");
	}

	public partial class InputNumberEntities
	{
		private readonly IHaContext _haContext;
		public InputNumberEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Mayson Tasks Daily Brush Teeth</summary>
		public InputNumberEntity MaysonTasksDailyBrushTeeth => new(_haContext, "input_number.mayson_tasks_daily_brush_teeth");
		///<summary>Mayson Tasks Daily Clean Bathroom Sink</summary>
		public InputNumberEntity MaysonTasksDailyCleanBathroomSink => new(_haContext, "input_number.mayson_tasks_daily_clean_bathroom_sink");
		///<summary>Mayson Tasks Daily Cleanup Breakfast</summary>
		public InputNumberEntity MaysonTasksDailyCleanupBreakfast => new(_haContext, "input_number.mayson_tasks_daily_cleanup_breakfast");
		///<summary>Mayson Tasks Daily Get Dressed</summary>
		public InputNumberEntity MaysonTasksDailyGetDressed => new(_haContext, "input_number.mayson_tasks_daily_get_dressed");
		///<summary>Mayson Tasks Daily Prepare Breakfast</summary>
		public InputNumberEntity MaysonTasksDailyPrepareBreakfast => new(_haContext, "input_number.mayson_tasks_daily_prepare_breakfast");
		///<summary>Mayson Tasks Daily Put Breakfast Food Away</summary>
		public InputNumberEntity MaysonTasksDailyPutBreakfastFoodAway => new(_haContext, "input_number.mayson_tasks_daily_put_breakfast_food_away");
		///<summary>Mayson Tasks Daily Put Dishes in Dishwasher</summary>
		public InputNumberEntity MaysonTasksDailyPutDishesInDishwasher => new(_haContext, "input_number.mayson_tasks_daily_put_dishes_in_dishwasher");
		///<summary>Mayson Tasks Daily Put Toothbrush/Toothpaste Away</summary>
		public InputNumberEntity MaysonTasksDailyPutToothbrushToothpasteAway => new(_haContext, "input_number.mayson_tasks_daily_put_toothbrush_toothpaste_away");
		///<summary>Mayson Tasks Daily Take Medicine</summary>
		public InputNumberEntity MaysonTasksDailyTakeMedicine => new(_haContext, "input_number.mayson_tasks_daily_take_medicine");
	}

	public partial class InputSelectEntities
	{
		private readonly IHaContext _haContext;
		public InputSelectEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>House Mode</summary>
		public InputSelectEntity HouseMode => new(_haContext, "input_select.house_mode");
		///<summary>Mayson Electronics Mode</summary>
		public InputSelectEntity MaysonElectronicsMode => new(_haContext, "input_select.mayson_electronics_mode");
	}

	public partial class InputTextEntities
	{
		private readonly IHaContext _haContext;
		public InputTextEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Announcement - Main Floor Vacuum Error</summary>
		public InputTextEntity AnnouncementMainFloorVacuumError => new(_haContext, "input_text.announcement_main_floor_vacuum_error");
		///<summary>Blank Text</summary>
		public InputTextEntity BlankText => new(_haContext, "input_text.blank_text");
		///<summary>Mayson's Phone App</summary>
		public InputTextEntity MaysonPhoneApp => new(_haContext, "input_text.mayson_phone_app");
	}

	public partial class LightEntities
	{
		private readonly IHaContext _haContext;
		public LightEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Back Light</summary>
		public LightEntity Back => new(_haContext, "light.back");
		///<summary>Bar Light</summary>
		public LightEntity Bar => new(_haContext, "light.bar");
		///<summary>Basement Lights</summary>
		public LightEntity Basement => new(_haContext, "light.basement");
		///<summary>Basement Bathroom Light</summary>
		public LightEntity BasementBathroomLight => new(_haContext, "light.basement_bathroom_light");
		///<summary>Basement Shower Light</summary>
		public LightEntity BasementShowerLight => new(_haContext, "light.basement_shower_light");
		///<summary>Basement Stair Lights</summary>
		public LightEntity BasementStairLights => new(_haContext, "light.basement_stair_lights");
		///<summary>Basement Stair Lights 2</summary>
		public LightEntity BasementStairLights2 => new(_haContext, "light.basement_stair_lights_2");
		///<summary>Basement TV Lights</summary>
		public LightEntity BasementTv => new(_haContext, "light.basement_tv");
		public LightEntity Browser05099cdfAcf0a078 => new(_haContext, "light.browser_05099cdf_acf0a078");
		public LightEntity Browser0af4f53c346abf41 => new(_haContext, "light.browser_0af4f53c_346abf41");
		public LightEntity Browser1e9f03981fd3d3a3 => new(_haContext, "light.browser_1e9f0398_1fd3d3a3");
		public LightEntity Browser1e9f039865167b95 => new(_haContext, "light.browser_1e9f0398_65167b95");
		public LightEntity Browser2220f842D725ec7f => new(_haContext, "light.browser_2220f842_d725ec7f");
		public LightEntity Browser2431620f021ade0a => new(_haContext, "light.browser_2431620f_021ade0a");
		public LightEntity Browser50104499441cf777 => new(_haContext, "light.browser_50104499_441cf777");
		public LightEntity Browser5401738cE708562d => new(_haContext, "light.browser_5401738c_e708562d");
		public LightEntity Browser5735537b88639214 => new(_haContext, "light.browser_5735537b_88639214");
		public LightEntity Browser700407555e760f23 => new(_haContext, "light.browser_70040755_5e760f23");
		public LightEntity Browser847e14670c0b0054 => new(_haContext, "light.browser_847e1467_0c0b0054");
		public LightEntity Browser872beea142ecd4e4 => new(_haContext, "light.browser_872beea1_42ecd4e4");
		public LightEntity Browser89202ac9F783f676 => new(_haContext, "light.browser_89202ac9_f783f676");
		public LightEntity Browser8f6598ac878a6eef => new(_haContext, "light.browser_8f6598ac_878a6eef");
		public LightEntity Browser924ecf7eCe81f2dd => new(_haContext, "light.browser_924ecf7e_ce81f2dd");
		public LightEntity BrowserA66d1949Ef5df9d8 => new(_haContext, "light.browser_a66d1949_ef5df9d8");
		public LightEntity BrowserA9d49a81E5c0a795 => new(_haContext, "light.browser_a9d49a81_e5c0a795");
		public LightEntity BrowserBc73bd275f074836 => new(_haContext, "light.browser_bc73bd27_5f074836");
		public LightEntity BrowserBcb440e17c4bb54d => new(_haContext, "light.browser_bcb440e1_7c4bb54d");
		public LightEntity BrowserC21dc6808ca704c1 => new(_haContext, "light.browser_c21dc680_8ca704c1");
		public LightEntity BrowserD6825c1dC26af1c4 => new(_haContext, "light.browser_d6825c1d_c26af1c4");
		public LightEntity BrowserDab8d308Db5f3697 => new(_haContext, "light.browser_dab8d308_db5f3697");
		public LightEntity BrowserE00a1d720251a39f => new(_haContext, "light.browser_e00a1d72_0251a39f");
		public LightEntity BrowserE06ded894138e7af => new(_haContext, "light.browser_e06ded89_4138e7af");
		public LightEntity BrowserE95eea912411007a => new(_haContext, "light.browser_e95eea91_2411007a");
		public LightEntity BrowserF5bf6e71De5fd3ec => new(_haContext, "light.browser_f5bf6e71_de5fd3ec");
		public LightEntity BrowserF8b3d7a1E09f5d18 => new(_haContext, "light.browser_f8b3d7a1_e09f5d18");
		public LightEntity BrowserFfe73d5fC6e4b921 => new(_haContext, "light.browser_ffe73d5f_c6e4b921");
		///<summary>Computer Light</summary>
		public LightEntity ComputerLight => new(_haContext, "light.computer_light");
		///<summary>Deck Light</summary>
		public LightEntity Deck => new(_haContext, "light.deck");
		///<summary>Dining Room Light</summary>
		public LightEntity DiningRoomLight => new(_haContext, "light.dining_room_light");
		///<summary>Family Room Light</summary>
		public LightEntity FamilyRoomLight => new(_haContext, "light.family_room_light");
		///<summary>Front Entry Lights</summary>
		public LightEntity FrontEntryLights => new(_haContext, "light.front_entry_lights");
		///<summary>Front Entry Lights 2</summary>
		public LightEntity FrontEntryLights2 => new(_haContext, "light.front_entry_lights_2");
		///<summary>Front Lights</summary>
		public LightEntity FrontLights => new(_haContext, "light.front_lights");
		///<summary>Garage Lights</summary>
		public LightEntity GarageLights => new(_haContext, "light.garage_lights");
		///<summary>Guest Bedroom Light</summary>
		public LightEntity GuestBedroom => new(_haContext, "light.guest_bedroom");
		///<summary>Kitchen Bar Lights</summary>
		public LightEntity KitchenBarLights => new(_haContext, "light.kitchen_bar_lights");
		///<summary>Kitchen Table Light</summary>
		public LightEntity KitchenTableLight => new(_haContext, "light.kitchen_table_light");
		///<summary>Living Room Lights</summary>
		public LightEntity LivingRoomLights => new(_haContext, "light.living_room_lights");
		///<summary>Master Bathroom Lights</summary>
		public LightEntity MasterBathroomLights => new(_haContext, "light.master_bathroom_lights");
		///<summary>Master Bathroom Lights 2</summary>
		public LightEntity MasterBathroomLights2 => new(_haContext, "light.master_bathroom_lights_2");
		///<summary>Mayson's Lights</summary>
		public LightEntity Maysons => new(_haContext, "light.maysons");
		///<summary>Mayson's Lights (Outlet)</summary>
		public LightEntity MaysonsOutlet => new(_haContext, "light.maysons_outlet");
		///<summary>Mayson's Lights (Switch)</summary>
		public LightEntity MaysonsSwitch => new(_haContext, "light.maysons_switch");
		///<summary>Office Light</summary>
		public LightEntity OfficeLight => new(_haContext, "light.office_light");
		///<summary>Patio Lights</summary>
		public LightEntity PatioLights => new(_haContext, "light.patio_lights");
		///<summary>Pool Lights</summary>
		public LightEntity PoolLights => new(_haContext, "light.pool_lights");
		///<summary>Upstairs Bathroom Main Light</summary>
		public LightEntity UpstairsBathroomMain => new(_haContext, "light.upstairs_bathroom_main");
		///<summary>Upstairs Bathroom Vanity Light</summary>
		public LightEntity UpstairsBathroomVanity => new(_haContext, "light.upstairs_bathroom_vanity");
	}

	public partial class LockEntities
	{
		private readonly IHaContext _haContext;
		public LockEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Second Garage Door</summary>
		public LockEntity SecondGarageDoor2 => new(_haContext, "lock.second_garage_door_2");
		///<summary>Suburban</summary>
		public LockEntity Smartstart1695751 => new(_haContext, "lock.smartstart_1695751");
		///<summary>MKX</summary>
		public LockEntity Smartstart90947 => new(_haContext, "lock.smartstart_90947");
	}

	public partial class MediaPlayerEntities
	{
		private readonly IHaContext _haContext;
		public MediaPlayerEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>ADB Family Room TV</summary>
		public MediaPlayerEntity AdbFamilyRoomTv => new(_haContext, "media_player.adb_family_room_tv");
		///<summary>Basement Echo</summary>
		public MediaPlayerEntity BasementEcho => new(_haContext, "media_player.basement_echo");
		///<summary>Basement Fire TV</summary>
		public MediaPlayerEntity BasementFireTv => new(_haContext, "media_player.basement_fire_tv");
		public MediaPlayerEntity Browser05099cdfAcf0a078 => new(_haContext, "media_player.browser_05099cdf_acf0a078");
		public MediaPlayerEntity Browser0af4f53c346abf41 => new(_haContext, "media_player.browser_0af4f53c_346abf41");
		public MediaPlayerEntity Browser1e9f03981fd3d3a3 => new(_haContext, "media_player.browser_1e9f0398_1fd3d3a3");
		public MediaPlayerEntity Browser1e9f039865167b95 => new(_haContext, "media_player.browser_1e9f0398_65167b95");
		public MediaPlayerEntity Browser2220f842D725ec7f => new(_haContext, "media_player.browser_2220f842_d725ec7f");
		public MediaPlayerEntity Browser2431620f021ade0a => new(_haContext, "media_player.browser_2431620f_021ade0a");
		public MediaPlayerEntity Browser50104499441cf777 => new(_haContext, "media_player.browser_50104499_441cf777");
		public MediaPlayerEntity Browser5401738cE708562d => new(_haContext, "media_player.browser_5401738c_e708562d");
		public MediaPlayerEntity Browser5735537b88639214 => new(_haContext, "media_player.browser_5735537b_88639214");
		public MediaPlayerEntity Browser700407555e760f23 => new(_haContext, "media_player.browser_70040755_5e760f23");
		public MediaPlayerEntity Browser847e14670c0b0054 => new(_haContext, "media_player.browser_847e1467_0c0b0054");
		public MediaPlayerEntity Browser872beea142ecd4e4 => new(_haContext, "media_player.browser_872beea1_42ecd4e4");
		public MediaPlayerEntity Browser89202ac9F783f676 => new(_haContext, "media_player.browser_89202ac9_f783f676");
		public MediaPlayerEntity Browser8f6598ac878a6eef => new(_haContext, "media_player.browser_8f6598ac_878a6eef");
		public MediaPlayerEntity Browser924ecf7eCe81f2dd => new(_haContext, "media_player.browser_924ecf7e_ce81f2dd");
		public MediaPlayerEntity BrowserA66d1949Ef5df9d8 => new(_haContext, "media_player.browser_a66d1949_ef5df9d8");
		public MediaPlayerEntity BrowserA9d49a81E5c0a795 => new(_haContext, "media_player.browser_a9d49a81_e5c0a795");
		public MediaPlayerEntity BrowserBc73bd275f074836 => new(_haContext, "media_player.browser_bc73bd27_5f074836");
		public MediaPlayerEntity BrowserBcb440e17c4bb54d => new(_haContext, "media_player.browser_bcb440e1_7c4bb54d");
		public MediaPlayerEntity BrowserC21dc6808ca704c1 => new(_haContext, "media_player.browser_c21dc680_8ca704c1");
		public MediaPlayerEntity BrowserD6825c1dC26af1c4 => new(_haContext, "media_player.browser_d6825c1d_c26af1c4");
		public MediaPlayerEntity BrowserDab8d308Db5f3697 => new(_haContext, "media_player.browser_dab8d308_db5f3697");
		public MediaPlayerEntity BrowserE00a1d720251a39f => new(_haContext, "media_player.browser_e00a1d72_0251a39f");
		public MediaPlayerEntity BrowserE06ded894138e7af => new(_haContext, "media_player.browser_e06ded89_4138e7af");
		public MediaPlayerEntity BrowserE95eea912411007a => new(_haContext, "media_player.browser_e95eea91_2411007a");
		public MediaPlayerEntity BrowserF5bf6e71De5fd3ec => new(_haContext, "media_player.browser_f5bf6e71_de5fd3ec");
		public MediaPlayerEntity BrowserF8b3d7a1E09f5d18 => new(_haContext, "media_player.browser_f8b3d7a1_e09f5d18");
		public MediaPlayerEntity BrowserFfe73d5fC6e4b921 => new(_haContext, "media_player.browser_ffe73d5f_c6e4b921");
		///<summary>Main Floor Bathroom Echo</summary>
		public MediaPlayerEntity ChristopherS2ndEchoFlex => new(_haContext, "media_player.christopher_s_2nd_echo_flex");
		///<summary>Basement Bathroom Echo</summary>
		public MediaPlayerEntity ChristopherS3rdEchoFlex => new(_haContext, "media_player.christopher_s_3rd_echo_flex");
		///<summary>Garage Echo</summary>
		public MediaPlayerEntity ChristopherS6thEchoDot => new(_haContext, "media_player.christopher_s_6th_echo_dot");
		///<summary>G35 Echo</summary>
		public MediaPlayerEntity ChristopherSEchoAuto => new(_haContext, "media_player.christopher_s_echo_auto");
		///<summary>Master Bathroom Echo</summary>
		public MediaPlayerEntity ChristopherSEchoDot => new(_haContext, "media_player.christopher_s_echo_dot");
		///<summary>Mayson's Echo</summary>
		public MediaPlayerEntity ChristopherSEchoDot2 => new(_haContext, "media_player.christopher_s_echo_dot_2");
		///<summary>Kitchen Echo</summary>
		public MediaPlayerEntity ChristopherSEchoFlex => new(_haContext, "media_player.christopher_s_echo_flex");
		///<summary>Backyard</summary>
		public MediaPlayerEntity ChristopherSEchoLinkAmp => new(_haContext, "media_player.christopher_s_echo_link_amp");
		///<summary>Kitchen Tablet</summary>
		public MediaPlayerEntity ChristopherSFire => new(_haContext, "media_player.christopher_s_fire");
		///<summary>Guest Bedroom Fire TV</summary>
		public MediaPlayerEntity ChristopherSFireTv => new(_haContext, "media_player.christopher_s_fire_tv");
		///<summary>Devices - Everywhere</summary>
		public MediaPlayerEntity DevicesEverywhere => new(_haContext, "media_player.devices_everywhere");
		///<summary>Devices - Inside</summary>
		public MediaPlayerEntity DevicesInside => new(_haContext, "media_player.devices_inside");
		///<summary>Dining room</summary>
		public MediaPlayerEntity DiningRoom => new(_haContext, "media_player.dining_room");
		///<summary>Family room</summary>
		public MediaPlayerEntity FamilyRoom => new(_haContext, "media_player.family_room");
		///<summary>Family Room Fire TV</summary>
		public MediaPlayerEntity FamilyRoomTv => new(_haContext, "media_player.family_room_tv");
		///<summary>Front entry</summary>
		public MediaPlayerEntity FrontEntry => new(_haContext, "media_player.front_entry");
		///<summary>Kitchen</summary>
		public MediaPlayerEntity Kitchen => new(_haContext, "media_player.kitchen");
		///<summary>Living Room</summary>
		public MediaPlayerEntity LivingRoom => new(_haContext, "media_player.living_room");
		///<summary>Living room</summary>
		public MediaPlayerEntity LivingRoom2 => new(_haContext, "media_player.living_room_2");
		///<summary>Main floor</summary>
		public MediaPlayerEntity MainFloor => new(_haContext, "media_player.main_floor");
		///<summary>Master Bedroom Fire TV</summary>
		public MediaPlayerEntity MasterBedroomFireTv => new(_haContext, "media_player.master_bedroom_fire_tv");
		///<summary>Office Echo Show</summary>
		public MediaPlayerEntity OfficeEchoShow => new(_haContext, "media_player.office_echo_show");
		///<summary>Speakers - Everywhere</summary>
		public MediaPlayerEntity SpeakersEverywhere => new(_haContext, "media_player.speakers_everywhere");
		///<summary>Speakers - Main Floor</summary>
		public MediaPlayerEntity SpeakersMainFloor => new(_haContext, "media_player.speakers_main_floor");
		///<summary>This Device</summary>
		public MediaPlayerEntity ThisDevice2 => new(_haContext, "media_player.this_device_2");
	}

	public partial class PersonEntities
	{
		private readonly IHaContext _haContext;
		public PersonEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Bradyn</summary>
		public PersonEntity Bradyn => new(_haContext, "person.bradyn");
		///<summary>Chris</summary>
		public PersonEntity Chris => new(_haContext, "person.chris");
		///<summary>Mayson</summary>
		public PersonEntity Mayson => new(_haContext, "person.mayson");
		///<summary>Melissa</summary>
		public PersonEntity Melissa => new(_haContext, "person.melissa");
	}

	public partial class ProximityEntities
	{
		private readonly IHaContext _haContext;
		public ProximityEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>home</summary>
		public ProximityEntity Home => new(_haContext, "proximity.home");
	}

	public partial class RemoteEntities
	{
		private readonly IHaContext _haContext;
		public RemoteEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Basement Harmony</summary>
		public RemoteEntity BasementHarmony => new(_haContext, "remote.basement_harmony");
	}

	public partial class ScriptEntities
	{
		private readonly IHaContext _haContext;
		public ScriptEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Announce Appointment Reminder</summary>
		public ScriptEntity AnnounceAppointmentReminder => new(_haContext, "script.announce_appointment_reminder");
		///<summary>Alexa Audio Notification</summary>
		public ScriptEntity AudioNotify => new(_haContext, "script.audio_notify");
		///<summary>Mayson's Electronics Time - Credit Task Time</summary>
		public ScriptEntity CreditTaskTime => new(_haContext, "script.credit_task_time");
		///<summary>Script - Close Main Garage Door</summary>
		public ScriptEntity ScriptCloseMainGarageDoor => new(_haContext, "script.script_close_main_garage_door");
		///<summary>Script - Start Chris' Car</summary>
		public ScriptEntity ScriptStartChrisCar => new(_haContext, "script.script_start_chris_car");
		///<summary>Script - Start Melissa's Car</summary>
		public ScriptEntity ScriptStartMelissasCar => new(_haContext, "script.script_start_melissas_car");
		///<summary>Script - Shutdown Basement TV</summary>
		public ScriptEntity ShutdownBasementTv => new(_haContext, "script.shutdown_basement_tv");
	}

	public partial class SelectEntities
	{
		private readonly IHaContext _haContext;
		public SelectEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Basement Harmony Activities</summary>
		public SelectEntity BasementHarmonyActivities => new(_haContext, "select.basement_harmony_activities");
		///<summary>daily_electric</summary>
		public SelectEntity DailyElectric => new(_haContext, "select.daily_electric");
		///<summary>PIR Motion Sensor: Local protection state</summary>
		public SelectEntity PirMotionSensorLocalProtectionState => new(_haContext, "select.pir_motion_sensor_local_protection_state");
		///<summary>PIR Motion Sensor: RF protection state</summary>
		public SelectEntity PirMotionSensorRfProtectionState => new(_haContext, "select.pir_motion_sensor_rf_protection_state");
		///<summary>Pool Cleaner Mode</summary>
		public SelectEntity PoolCleanerMode => new(_haContext, "select.pool_cleaner_mode");
		///<summary>Pool Pump Mode</summary>
		public SelectEntity PoolPumpMode => new(_haContext, "select.pool_pump_mode");
	}

	public partial class SensorEntities
	{
		private readonly IHaContext _haContext;
		public SensorEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>AC 2 Usage</summary>
		public NumericSensorEntity Ac2Usage3 => new(_haContext, "sensor.ac_2_usage_3");
		///<summary>AC Usage</summary>
		public NumericSensorEntity AcUsage => new(_haContext, "sensor.ac_usage");
		///<summary>Always On Usage</summary>
		public NumericSensorEntity AlwaysOnUsage => new(_haContext, "sensor.always_on_usage");
		///<summary>Backyard Echo Link Amp RX</summary>
		public NumericSensorEntity BackyardEchoLinkAmpRx => new(_haContext, "sensor.backyard_echo_link_amp_rx");
		///<summary>Backyard Echo Link Amp TX</summary>
		public NumericSensorEntity BackyardEchoLinkAmpTx => new(_haContext, "sensor.backyard_echo_link_amp_tx");
		///<summary>Basement Bathroom Echo RX</summary>
		public NumericSensorEntity BasementBathroomEchoRx => new(_haContext, "sensor.basement_bathroom_echo_rx");
		///<summary>Basement Bathroom Echo TX</summary>
		public NumericSensorEntity BasementBathroomEchoTx => new(_haContext, "sensor.basement_bathroom_echo_tx");
		///<summary>Basement Bathroom Heater</summary>
		public NumericSensorEntity BasementBathroomHeater => new(_haContext, "sensor.basement_bathroom_heater");
		///<summary>Basement Bathroom Heater Power</summary>
		public NumericSensorEntity BasementBathroomHeaterPower => new(_haContext, "sensor.basement_bathroom_heater_power");
		///<summary>Basement Bathroom Heater Usage</summary>
		public NumericSensorEntity BasementBathroomHeaterUsage => new(_haContext, "sensor.basement_bathroom_heater_usage");
		///<summary>Basement Bathroom Heater Usage</summary>
		public NumericSensorEntity BasementBathroomHeaterUsage2 => new(_haContext, "sensor.basement_bathroom_heater_usage_2");
		///<summary>Basement Bathroom Humidity</summary>
		public NumericSensorEntity BasementBathroomHumidity => new(_haContext, "sensor.basement_bathroom_humidity");
		///<summary>Basement Bathroom Light</summary>
		public NumericSensorEntity BasementBathroomLight => new(_haContext, "sensor.basement_bathroom_light");
		///<summary>Basement Bathroom Light and Fan RX</summary>
		public NumericSensorEntity BasementBathroomLightAndFanRx => new(_haContext, "sensor.basement_bathroom_light_and_fan_rx");
		///<summary>Basement Bathroom Light and Fan TX</summary>
		public NumericSensorEntity BasementBathroomLightAndFanTx => new(_haContext, "sensor.basement_bathroom_light_and_fan_tx");
		///<summary>Basement Bathroom Light and Fan Uptime</summary>
		public NumericSensorEntity BasementBathroomLightAndFanUptime => new(_haContext, "sensor.basement_bathroom_light_and_fan_uptime");
		///<summary>Basement Bathroom Light and Fan WiFi Signal</summary>
		public NumericSensorEntity BasementBathroomLightAndFanWifiSignal => new(_haContext, "sensor.basement_bathroom_light_and_fan_wifi_signal");
		///<summary>Basement Bathroom Light Power</summary>
		public NumericSensorEntity BasementBathroomLightPower => new(_haContext, "sensor.basement_bathroom_light_power");
		///<summary>Basement Bathroom Light Usage</summary>
		public NumericSensorEntity BasementBathroomLightUsage => new(_haContext, "sensor.basement_bathroom_light_usage");
		///<summary>Basement Bathroom Median Humidity</summary>
		public NumericSensorEntity BasementBathroomMedianHumidity => new(_haContext, "sensor.basement_bathroom_median_humidity");
		///<summary>Basement Bathroom Pressure</summary>
		public NumericSensorEntity BasementBathroomPressure => new(_haContext, "sensor.basement_bathroom_pressure");
		///<summary>Basement Bathroom Sensor RX</summary>
		public NumericSensorEntity BasementBathroomSensorRx => new(_haContext, "sensor.basement_bathroom_sensor_rx");
		///<summary>Basement Bathroom Sensor TX</summary>
		public NumericSensorEntity BasementBathroomSensorTx => new(_haContext, "sensor.basement_bathroom_sensor_tx");
		///<summary>Basement Bathroom Sensor Uptime</summary>
		public NumericSensorEntity BasementBathroomSensorUptime => new(_haContext, "sensor.basement_bathroom_sensor_uptime");
		///<summary>Basement Bathroom Sensor WiFi Signal</summary>
		public NumericSensorEntity BasementBathroomSensorWifiSignal => new(_haContext, "sensor.basement_bathroom_sensor_wifi_signal");
		///<summary>Basement Bathroom Shower Light and Heater RX</summary>
		public NumericSensorEntity BasementBathroomShowerLightAndHeaterRx => new(_haContext, "sensor.basement_bathroom_shower_light_and_heater_rx");
		///<summary>Basement Bathroom Shower Light and Heater TX</summary>
		public NumericSensorEntity BasementBathroomShowerLightAndHeaterTx => new(_haContext, "sensor.basement_bathroom_shower_light_and_heater_tx");
		///<summary>Basement Bathroom Shower Light and Heater Uptime</summary>
		public NumericSensorEntity BasementBathroomShowerLightAndHeaterUptime => new(_haContext, "sensor.basement_bathroom_shower_light_and_heater_uptime");
		///<summary>Basement Bathroom Shower Light and Heater WiFi Signal</summary>
		public NumericSensorEntity BasementBathroomShowerLightAndHeaterWifiSignal => new(_haContext, "sensor.basement_bathroom_shower_light_and_heater_wifi_signal");
		///<summary>Basement Bathroom Temperature</summary>
		public NumericSensorEntity BasementBathroomTemperature => new(_haContext, "sensor.basement_bathroom_temperature");
		///<summary>Basement Echo RX</summary>
		public NumericSensorEntity BasementEchoRx => new(_haContext, "sensor.basement_echo_rx");
		///<summary>Basement Echo TX</summary>
		public NumericSensorEntity BasementEchoTx => new(_haContext, "sensor.basement_echo_tx");
		///<summary>Basement Fire TV RX</summary>
		public NumericSensorEntity BasementFireTvRx => new(_haContext, "sensor.basement_fire_tv_rx");
		///<summary>Basement Fire TV TX</summary>
		public NumericSensorEntity BasementFireTvTx => new(_haContext, "sensor.basement_fire_tv_tx");
		///<summary>Basement Fridge</summary>
		public NumericSensorEntity BasementFridge => new(_haContext, "sensor.basement_fridge");
		///<summary>Basement Fridge Current</summary>
		public NumericSensorEntity BasementFridgeCurrent => new(_haContext, "sensor.basement_fridge_current");
		///<summary>Basement Fridge Power</summary>
		public NumericSensorEntity BasementFridgePower => new(_haContext, "sensor.basement_fridge_power");
		///<summary>Basement Fridge Smart Plug RX</summary>
		public NumericSensorEntity BasementFridgeSmartPlugRx => new(_haContext, "sensor.basement_fridge_smart_plug_rx");
		///<summary>Basement Fridge Smart Plug TX</summary>
		public NumericSensorEntity BasementFridgeSmartPlugTx => new(_haContext, "sensor.basement_fridge_smart_plug_tx");
		///<summary>Basement Fridge Uptime</summary>
		public NumericSensorEntity BasementFridgeUptime => new(_haContext, "sensor.basement_fridge_uptime");
		///<summary>Basement Fridge Usage</summary>
		public NumericSensorEntity BasementFridgeUsage => new(_haContext, "sensor.basement_fridge_usage");
		///<summary>Basement Fridge WiFi Signal</summary>
		public NumericSensorEntity BasementFridgeWifiSignal => new(_haContext, "sensor.basement_fridge_wifi_signal");
		///<summary>Basement Harmony Hub RX</summary>
		public NumericSensorEntity BasementHarmonyHubRx => new(_haContext, "sensor.basement_harmony_hub_rx");
		///<summary>Basement Harmony Hub TX</summary>
		public NumericSensorEntity BasementHarmonyHubTx => new(_haContext, "sensor.basement_harmony_hub_tx");
		///<summary>Basement Nest Protect RX</summary>
		public NumericSensorEntity BasementNestProtectRx => new(_haContext, "sensor.basement_nest_protect_rx");
		///<summary>Basement Nest Protect TX</summary>
		public NumericSensorEntity BasementNestProtectTx => new(_haContext, "sensor.basement_nest_protect_tx");
		///<summary>Basement Shower Light</summary>
		public NumericSensorEntity BasementShowerLight => new(_haContext, "sensor.basement_shower_light");
		///<summary>Basement Shower Light Power</summary>
		public NumericSensorEntity BasementShowerLightPower => new(_haContext, "sensor.basement_shower_light_power");
		///<summary>Basement Shower Light Usage</summary>
		public NumericSensorEntity BasementShowerLightUsage => new(_haContext, "sensor.basement_shower_light_usage");
		///<summary>Basement Stair Lights</summary>
		public NumericSensorEntity BasementStairLights => new(_haContext, "sensor.basement_stair_lights");
		///<summary>Basement Stair Lights 2 Uptime</summary>
		public NumericSensorEntity BasementStairLights2Uptime => new(_haContext, "sensor.basement_stair_lights_2_uptime");
		///<summary>Basement Stair Lights 2 WiFi Signal</summary>
		public NumericSensorEntity BasementStairLights2WifiSignal => new(_haContext, "sensor.basement_stair_lights_2_wifi_signal");
		///<summary>Basement Stair Lights Power</summary>
		public NumericSensorEntity BasementStairLightsPower => new(_haContext, "sensor.basement_stair_lights_power");
		///<summary>Basement Stair Lights Uptime</summary>
		public NumericSensorEntity BasementStairLightsUptime => new(_haContext, "sensor.basement_stair_lights_uptime");
		///<summary>Basement Stair Lights Usage</summary>
		public NumericSensorEntity BasementStairLightsUsage => new(_haContext, "sensor.basement_stair_lights_usage");
		///<summary>Basement Stair Lights WiFi Signal</summary>
		public NumericSensorEntity BasementStairLightsWifiSignal => new(_haContext, "sensor.basement_stair_lights_wifi_signal");
		///<summary>Basement TV</summary>
		public NumericSensorEntity BasementTv => new(_haContext, "sensor.basement_tv");
		///<summary>Basement TV Current</summary>
		public NumericSensorEntity BasementTvCurrent => new(_haContext, "sensor.basement_tv_current");
		///<summary>Basement TV Power</summary>
		public NumericSensorEntity BasementTvPower => new(_haContext, "sensor.basement_tv_power");
		///<summary>Basement TV Smart Plug RX</summary>
		public NumericSensorEntity BasementTvSmartPlugRx => new(_haContext, "sensor.basement_tv_smart_plug_rx");
		///<summary>Basement TV Smart Plug TX</summary>
		public NumericSensorEntity BasementTvSmartPlugTx => new(_haContext, "sensor.basement_tv_smart_plug_tx");
		///<summary>Basement TV Uptime</summary>
		public NumericSensorEntity BasementTvUptime => new(_haContext, "sensor.basement_tv_uptime");
		///<summary>Basement TV Usage</summary>
		public NumericSensorEntity BasementTvUsage => new(_haContext, "sensor.basement_tv_usage");
		///<summary>Basement TV WiFi Signal</summary>
		public NumericSensorEntity BasementTvWifiSignal => new(_haContext, "sensor.basement_tv_wifi_signal");
		///<summary>Bradyn's Apple Watch RX</summary>
		public NumericSensorEntity BradynSAppleWatchRx => new(_haContext, "sensor.bradyn_s_apple_watch_rx");
		///<summary>Bradyn's Apple Watch TX</summary>
		public NumericSensorEntity BradynSAppleWatchTx => new(_haContext, "sensor.bradyn_s_apple_watch_tx");
		///<summary>Bradyn's iPhone RX</summary>
		public NumericSensorEntity BradynSIphoneRx => new(_haContext, "sensor.bradyn_s_iphone_rx");
		///<summary>Bradyn's iPhone TX</summary>
		public NumericSensorEntity BradynSIphoneTx => new(_haContext, "sensor.bradyn_s_iphone_tx");
		///<summary>Bradyn's MacBook RX</summary>
		public NumericSensorEntity BradynSMacbookRx => new(_haContext, "sensor.bradyn_s_macbook_rx");
		///<summary>Bradyn's MacBook TX</summary>
		public NumericSensorEntity BradynSMacbookTx => new(_haContext, "sensor.bradyn_s_macbook_tx");
		///<summary>Bradyn's TV RX</summary>
		public NumericSensorEntity BradynSTvRx => new(_haContext, "sensor.bradyn_s_tv_rx");
		///<summary>Bradyn's TV TX</summary>
		public NumericSensorEntity BradynSTvTx => new(_haContext, "sensor.bradyn_s_tv_tx");
		///<summary>cbpowell/ESPSense Discussions</summary>
		public NumericSensorEntity CbpowellEspsenseDiscussions => new(_haContext, "sensor.cbpowell_espsense_discussions");
		///<summary>cbpowell/ESPSense Forks</summary>
		public NumericSensorEntity CbpowellEspsenseForks => new(_haContext, "sensor.cbpowell_espsense_forks");
		///<summary>cbpowell/ESPSense Issues</summary>
		public NumericSensorEntity CbpowellEspsenseIssues => new(_haContext, "sensor.cbpowell_espsense_issues");
		///<summary>cbpowell/ESPSense Pull Requests</summary>
		public NumericSensorEntity CbpowellEspsensePullRequests => new(_haContext, "sensor.cbpowell_espsense_pull_requests");
		///<summary>cbpowell/ESPSense Stars</summary>
		public NumericSensorEntity CbpowellEspsenseStars => new(_haContext, "sensor.cbpowell_espsense_stars");
		///<summary>cbpowell/ESPSense Watchers</summary>
		public NumericSensorEntity CbpowellEspsenseWatchers => new(_haContext, "sensor.cbpowell_espsense_watchers");
		///<summary>Chris Bed Percent</summary>
		public NumericSensorEntity ChrisBedPercent => new(_haContext, "sensor.chris_bed_percent");
		///<summary>Chris' Desktop RX</summary>
		public NumericSensorEntity ChrisDesktopRx => new(_haContext, "sensor.chris_desktop_rx");
		///<summary>Chris' Desktop TX</summary>
		public NumericSensorEntity ChrisDesktopTx => new(_haContext, "sensor.chris_desktop_tx");
		///<summary>Chris' Laptop RX</summary>
		public NumericSensorEntity ChrisLaptopRx => new(_haContext, "sensor.chris_laptop_rx");
		///<summary>Chris' Laptop TX</summary>
		public NumericSensorEntity ChrisLaptopTx => new(_haContext, "sensor.chris_laptop_tx");
		///<summary>Chris' Old Desktop RX</summary>
		public NumericSensorEntity ChrisOldDesktopRx => new(_haContext, "sensor.chris_old_desktop_rx");
		///<summary>Chris' Old Desktop TX</summary>
		public NumericSensorEntity ChrisOldDesktopTx => new(_haContext, "sensor.chris_old_desktop_tx");
		///<summary>Chris' Phone RX</summary>
		public NumericSensorEntity ChrisPhoneRx => new(_haContext, "sensor.chris_phone_rx");
		///<summary>Chris' Phone TX</summary>
		public NumericSensorEntity ChrisPhoneTx => new(_haContext, "sensor.chris_phone_tx");
		///<summary>Chris To Home</summary>
		public NumericSensorEntity ChrisToHome => new(_haContext, "sensor.chris_to_home");
		///<summary>Chris' Work Laptop RX</summary>
		public NumericSensorEntity ChrisWorkLaptopRx => new(_haContext, "sensor.chris_work_laptop_rx");
		///<summary>Chris' Work Laptop TX</summary>
		public NumericSensorEntity ChrisWorkLaptopTx => new(_haContext, "sensor.chris_work_laptop_tx");
		///<summary>Coffee Maker RX</summary>
		public NumericSensorEntity CoffeeMakerRx => new(_haContext, "sensor.coffee_maker_rx");
		///<summary>Coffee Maker TX</summary>
		public NumericSensorEntity CoffeeMakerTx => new(_haContext, "sensor.coffee_maker_tx");
		///<summary>Coffee Maker Uptime</summary>
		public NumericSensorEntity CoffeeMakerUptime => new(_haContext, "sensor.coffee_maker_uptime");
		///<summary>Coffee Maker WiFi Signal</summary>
		public NumericSensorEntity CoffeeMakerWifiSignal => new(_haContext, "sensor.coffee_maker_wifi_signal");
		///<summary>Computer Light</summary>
		public NumericSensorEntity ComputerLight => new(_haContext, "sensor.computer_light");
		///<summary>Computer Light Power</summary>
		public NumericSensorEntity ComputerLightPower => new(_haContext, "sensor.computer_light_power");
		///<summary>Computer Light Uptime</summary>
		public NumericSensorEntity ComputerLightUptime => new(_haContext, "sensor.computer_light_uptime");
		///<summary>Computer Light Usage</summary>
		public NumericSensorEntity ComputerLightUsage => new(_haContext, "sensor.computer_light_usage");
		///<summary>Computer Light WiFi Signal</summary>
		public NumericSensorEntity ComputerLightWifiSignal => new(_haContext, "sensor.computer_light_wifi_signal");
		///<summary>Daily Energy mid_peak</summary>
		public NumericSensorEntity DailyElectricMidPeak => new(_haContext, "sensor.daily_electric_mid_peak");
		///<summary>Daily Energy mid_peak Cost</summary>
		public NumericSensorEntity DailyElectricMidPeakCost => new(_haContext, "sensor.daily_electric_mid_peak_cost");
		///<summary>Daily Energy off_peak</summary>
		public NumericSensorEntity DailyElectricOffPeak => new(_haContext, "sensor.daily_electric_off_peak");
		///<summary>Daily Energy off_peak Cost</summary>
		public NumericSensorEntity DailyElectricOffPeakCost => new(_haContext, "sensor.daily_electric_off_peak_cost");
		///<summary>Daily Energy peak</summary>
		public NumericSensorEntity DailyElectricPeak => new(_haContext, "sensor.daily_electric_peak");
		///<summary>Daily Energy peak Cost</summary>
		public NumericSensorEntity DailyElectricPeakCost => new(_haContext, "sensor.daily_electric_peak_cost");
		///<summary>Daily Usage</summary>
		public NumericSensorEntity DailyUsage => new(_haContext, "sensor.daily_usage");
		///<summary>Device 1 Usage</summary>
		public NumericSensorEntity Device1Usage => new(_haContext, "sensor.device_1_usage");
		///<summary>Device 1 Usage</summary>
		public NumericSensorEntity Device1Usage2 => new(_haContext, "sensor.device_1_usage_2");
		///<summary>Device 2 Usage</summary>
		public NumericSensorEntity Device2Usage => new(_haContext, "sensor.device_2_usage");
		///<summary>Device 2 Usage</summary>
		public NumericSensorEntity Device2Usage2 => new(_haContext, "sensor.device_2_usage_2");
		///<summary>Device 4 Usage</summary>
		public NumericSensorEntity Device4Usage => new(_haContext, "sensor.device_4_usage");
		///<summary>Dining Room Light</summary>
		public NumericSensorEntity DiningRoomLight => new(_haContext, "sensor.dining_room_light");
		///<summary>Dining Room Light Power</summary>
		public NumericSensorEntity DiningRoomLightPower => new(_haContext, "sensor.dining_room_light_power");
		///<summary>Dining Room Light Uptime</summary>
		public NumericSensorEntity DiningRoomLightUptime => new(_haContext, "sensor.dining_room_light_uptime");
		///<summary>Dining Room Light Usage</summary>
		public NumericSensorEntity DiningRoomLightUsage => new(_haContext, "sensor.dining_room_light_usage");
		///<summary>Dining Room Light WiFi Signal</summary>
		public NumericSensorEntity DiningRoomLightWifiSignal => new(_haContext, "sensor.dining_room_light_wifi_signal");
		///<summary>Disk use (percent) /</summary>
		public NumericSensorEntity DiskUsePercent => new(_haContext, "sensor.disk_use_percent");
		///<summary>Dryer Usage</summary>
		public NumericSensorEntity DryerUsage => new(_haContext, "sensor.dryer_usage");
		///<summary>electric_rate_fuel_cost</summary>
		public NumericSensorEntity ElectricRateFuelCost => new(_haContext, "sensor.electric_rate_fuel_cost");
		///<summary>electric_rate_riders</summary>
		public NumericSensorEntity ElectricRateRiders => new(_haContext, "sensor.electric_rate_riders");
		///<summary>electric_tax_percentage</summary>
		public NumericSensorEntity ElectricTaxPercentage => new(_haContext, "sensor.electric_tax_percentage");
		///<summary>Energy Production</summary>
		public NumericSensorEntity EnergyProduction => new(_haContext, "sensor.energy_production");
		///<summary>Energy Usage</summary>
		public NumericSensorEntity EnergyUsage => new(_haContext, "sensor.energy_usage");
		///<summary>esphome/esphome Discussions</summary>
		public NumericSensorEntity EsphomeEsphomeDiscussions => new(_haContext, "sensor.esphome_esphome_discussions");
		///<summary>esphome/esphome Forks</summary>
		public NumericSensorEntity EsphomeEsphomeForks => new(_haContext, "sensor.esphome_esphome_forks");
		///<summary>esphome/esphome Issues</summary>
		public NumericSensorEntity EsphomeEsphomeIssues => new(_haContext, "sensor.esphome_esphome_issues");
		///<summary>esphome/esphome Pull Requests</summary>
		public NumericSensorEntity EsphomeEsphomePullRequests => new(_haContext, "sensor.esphome_esphome_pull_requests");
		///<summary>esphome/esphome Stars</summary>
		public NumericSensorEntity EsphomeEsphomeStars => new(_haContext, "sensor.esphome_esphome_stars");
		///<summary>esphome/esphome Watchers</summary>
		public NumericSensorEntity EsphomeEsphomeWatchers => new(_haContext, "sensor.esphome_esphome_watchers");
		///<summary>Family Room Fire TV RX</summary>
		public NumericSensorEntity FamilyRoomFireTvRx => new(_haContext, "sensor.family_room_fire_tv_rx");
		///<summary>Family Room Fire TV TX</summary>
		public NumericSensorEntity FamilyRoomFireTvTx => new(_haContext, "sensor.family_room_fire_tv_tx");
		///<summary>Family Room Light</summary>
		public NumericSensorEntity FamilyRoomLight => new(_haContext, "sensor.family_room_light");
		///<summary>Family Room Light Power</summary>
		public NumericSensorEntity FamilyRoomLightPower => new(_haContext, "sensor.family_room_light_power");
		///<summary>Family Room Light Uptime</summary>
		public NumericSensorEntity FamilyRoomLightUptime => new(_haContext, "sensor.family_room_light_uptime");
		///<summary>Family Room Light Usage</summary>
		public NumericSensorEntity FamilyRoomLightUsage => new(_haContext, "sensor.family_room_light_usage");
		///<summary>Family Room Light WiFi Signal</summary>
		public NumericSensorEntity FamilyRoomLightWifiSignal => new(_haContext, "sensor.family_room_light_wifi_signal");
		///<summary>Family Room TV</summary>
		public NumericSensorEntity FamilyRoomTv => new(_haContext, "sensor.family_room_tv");
		///<summary>Family Room TV Current</summary>
		public NumericSensorEntity FamilyRoomTvCurrent => new(_haContext, "sensor.family_room_tv_current");
		///<summary>Family Room TV Power</summary>
		public NumericSensorEntity FamilyRoomTvPower => new(_haContext, "sensor.family_room_tv_power");
		///<summary>Family Room TV Uptime</summary>
		public NumericSensorEntity FamilyRoomTvUptime => new(_haContext, "sensor.family_room_tv_uptime");
		///<summary>Family Room TV Usage</summary>
		public NumericSensorEntity FamilyRoomTvUsage => new(_haContext, "sensor.family_room_tv_usage");
		///<summary>Family Room TV WiFi Signal</summary>
		public NumericSensorEntity FamilyRoomTvWifiSignal => new(_haContext, "sensor.family_room_tv_wifi_signal");
		///<summary>Fire Pit and Fountain Uptime</summary>
		public NumericSensorEntity FirePitAndFountainUptime => new(_haContext, "sensor.fire_pit_and_fountain_uptime");
		///<summary>Fire Pit and Fountain WiFi Signal</summary>
		public NumericSensorEntity FirePitAndFountainWifiSignal => new(_haContext, "sensor.fire_pit_and_fountain_wifi_signal");
		///<summary>Fridge 2 Usage</summary>
		public NumericSensorEntity Fridge2Usage => new(_haContext, "sensor.fridge_2_usage");
		///<summary>Fridge 2 Usage</summary>
		public NumericSensorEntity Fridge2Usage2 => new(_haContext, "sensor.fridge_2_usage_2");
		///<summary>Fridge 2 Usage</summary>
		public NumericSensorEntity Fridge2Usage3 => new(_haContext, "sensor.fridge_2_usage_3");
		///<summary>Fridge 2 Usage</summary>
		public NumericSensorEntity Fridge2Usage4 => new(_haContext, "sensor.fridge_2_usage_4");
		///<summary>Fridge 3 Usage</summary>
		public NumericSensorEntity Fridge3Usage => new(_haContext, "sensor.fridge_3_usage");
		///<summary>Fridge 3 Usage</summary>
		public NumericSensorEntity Fridge3Usage2 => new(_haContext, "sensor.fridge_3_usage_2");
		///<summary>Fridge 4 Usage</summary>
		public NumericSensorEntity Fridge4Usage => new(_haContext, "sensor.fridge_4_usage");
		///<summary>Fridge Usage</summary>
		public NumericSensorEntity FridgeUsage => new(_haContext, "sensor.fridge_usage");
		///<summary>Fridge Usage</summary>
		public NumericSensorEntity FridgeUsage2 => new(_haContext, "sensor.fridge_usage_2");
		///<summary>Fridge Usage</summary>
		public NumericSensorEntity FridgeUsage3 => new(_haContext, "sensor.fridge_usage_3");
		///<summary>Front Door Battery</summary>
		public NumericSensorEntity FrontDoorBattery => new(_haContext, "sensor.front_door_battery");
		///<summary>Front Entry Lights</summary>
		public NumericSensorEntity FrontEntryLights => new(_haContext, "sensor.front_entry_lights");
		///<summary>Front Entry Lights 2 Uptime</summary>
		public NumericSensorEntity FrontEntryLights2Uptime => new(_haContext, "sensor.front_entry_lights_2_uptime");
		///<summary>Front Entry Lights 2 WiFi Signal</summary>
		public NumericSensorEntity FrontEntryLights2WifiSignal => new(_haContext, "sensor.front_entry_lights_2_wifi_signal");
		///<summary>Front Entry Lights Power</summary>
		public NumericSensorEntity FrontEntryLightsPower => new(_haContext, "sensor.front_entry_lights_power");
		///<summary>Front Entry Lights Uptime</summary>
		public NumericSensorEntity FrontEntryLightsUptime => new(_haContext, "sensor.front_entry_lights_uptime");
		///<summary>Front Entry Lights Usage</summary>
		public NumericSensorEntity FrontEntryLightsUsage => new(_haContext, "sensor.front_entry_lights_usage");
		///<summary>Front Entry Lights WiFi Signal</summary>
		public NumericSensorEntity FrontEntryLightsWifiSignal => new(_haContext, "sensor.front_entry_lights_wifi_signal");
		///<summary>Front Lights</summary>
		public NumericSensorEntity FrontLights => new(_haContext, "sensor.front_lights");
		///<summary>Front Lights Power</summary>
		public NumericSensorEntity FrontLightsPower => new(_haContext, "sensor.front_lights_power");
		///<summary>Front Lights Uptime</summary>
		public NumericSensorEntity FrontLightsUptime => new(_haContext, "sensor.front_lights_uptime");
		///<summary>Front Lights Usage</summary>
		public NumericSensorEntity FrontLightsUsage => new(_haContext, "sensor.front_lights_usage");
		///<summary>Front Lights WiFi Signal</summary>
		public NumericSensorEntity FrontLightsWifiSignal => new(_haContext, "sensor.front_lights_wifi_signal");
		///<summary>Furnace Usage</summary>
		public NumericSensorEntity FurnaceUsage => new(_haContext, "sensor.furnace_usage");
		///<summary>Garage door Usage</summary>
		public NumericSensorEntity GarageDoorUsage2 => new(_haContext, "sensor.garage_door_usage_2");
		///<summary>Garage Echo RX</summary>
		public NumericSensorEntity GarageEchoRx => new(_haContext, "sensor.garage_echo_rx");
		///<summary>Garage Echo TX</summary>
		public NumericSensorEntity GarageEchoTx => new(_haContext, "sensor.garage_echo_tx");
		///<summary>Garage Freezer Humidity</summary>
		public NumericSensorEntity GarageFreezerHumidity => new(_haContext, "sensor.garage_freezer_humidity");
		///<summary>Garage Freezer Sensor Battery Level</summary>
		public NumericSensorEntity GarageFreezerSensorBatteryLevel => new(_haContext, "sensor.garage_freezer_sensor_battery_level");
		///<summary>Garage Freezer Temperature</summary>
		public NumericSensorEntity GarageFreezerTemperature => new(_haContext, "sensor.garage_freezer_temperature");
		///<summary>Garage Fridge</summary>
		public NumericSensorEntity GarageFridge => new(_haContext, "sensor.garage_fridge");
		///<summary>Garage Fridge Current</summary>
		public NumericSensorEntity GarageFridgeCurrent => new(_haContext, "sensor.garage_fridge_current");
		///<summary>Garage Fridge Derivative Term</summary>
		public NumericSensorEntity GarageFridgeDerivativeTerm => new(_haContext, "sensor.garage_fridge_derivative_term");
		///<summary>Garage Fridge Error</summary>
		public NumericSensorEntity GarageFridgeError => new(_haContext, "sensor.garage_fridge_error");
		///<summary>Garage Fridge Heat Output</summary>
		public NumericSensorEntity GarageFridgeHeatOutput => new(_haContext, "sensor.garage_fridge_heat_output");
		///<summary>Garage Fridge Humidity</summary>
		public NumericSensorEntity GarageFridgeHumidity => new(_haContext, "sensor.garage_fridge_humidity");
		///<summary>Garage Fridge Integral Term</summary>
		public NumericSensorEntity GarageFridgeIntegralTerm => new(_haContext, "sensor.garage_fridge_integral_term");
		///<summary>Garage Fridge PID Result</summary>
		public NumericSensorEntity GarageFridgePidResult => new(_haContext, "sensor.garage_fridge_pid_result");
		///<summary>Garage Fridge Power</summary>
		public NumericSensorEntity GarageFridgePower => new(_haContext, "sensor.garage_fridge_power");
		///<summary>Garage Fridge Power Frequency</summary>
		public NumericSensorEntity GarageFridgePowerFrequency => new(_haContext, "sensor.garage_fridge_power_frequency");
		///<summary>Garage Fridge Proportional Term</summary>
		public NumericSensorEntity GarageFridgeProportionalTerm => new(_haContext, "sensor.garage_fridge_proportional_term");
		///<summary>Garage Fridge Sensor Battery Level</summary>
		public NumericSensorEntity GarageFridgeSensorBatteryLevel => new(_haContext, "sensor.garage_fridge_sensor_battery_level");
		///<summary>Garage Fridge Temperature</summary>
		public NumericSensorEntity GarageFridgeTemperature => new(_haContext, "sensor.garage_fridge_temperature");
		///<summary>Garage Fridge Uptime</summary>
		public NumericSensorEntity GarageFridgeUptime => new(_haContext, "sensor.garage_fridge_uptime");
		///<summary>Garage Fridge Voltage</summary>
		public NumericSensorEntity GarageFridgeVoltage => new(_haContext, "sensor.garage_fridge_voltage");
		///<summary>Garage Fridge WiFi Signal</summary>
		public NumericSensorEntity GarageFridgeWifiSignal => new(_haContext, "sensor.garage_fridge_wifi_signal");
		///<summary>Garage Lights</summary>
		public NumericSensorEntity GarageLights => new(_haContext, "sensor.garage_lights");
		///<summary>Garage Lights Power</summary>
		public NumericSensorEntity GarageLightsPower => new(_haContext, "sensor.garage_lights_power");
		///<summary>Garage Lights Uptime</summary>
		public NumericSensorEntity GarageLightsUptime => new(_haContext, "sensor.garage_lights_uptime");
		///<summary>Garage Lights Usage</summary>
		public NumericSensorEntity GarageLightsUsage => new(_haContext, "sensor.garage_lights_usage");
		///<summary>Garage Lights WiFi Signal</summary>
		public NumericSensorEntity GarageLightsWifiSignal => new(_haContext, "sensor.garage_lights_wifi_signal");
		///<summary>HA Community Store</summary>
		public NumericSensorEntity Hacs => new(_haContext, "sensor.hacs");
		///<summary>HAProxy RX</summary>
		public NumericSensorEntity HaproxyRx => new(_haContext, "sensor.haproxy_rx");
		///<summary>HAProxy TX</summary>
		public NumericSensorEntity HaproxyTx => new(_haContext, "sensor.haproxy_tx");
		///<summary>Heat 1 Usage</summary>
		public NumericSensorEntity Heat1Usage2 => new(_haContext, "sensor.heat_1_usage_2");
		///<summary>Coffee Maker Usage</summary>
		public NumericSensorEntity Heat2Usage => new(_haContext, "sensor.heat_2_usage");
		///<summary>Heat 3 Usage</summary>
		public NumericSensorEntity Heat3Usage => new(_haContext, "sensor.heat_3_usage");
		///<summary>Heat 4 Usage</summary>
		public NumericSensorEntity Heat4Usage => new(_haContext, "sensor.heat_4_usage");
		///<summary>Heat 5 Usage</summary>
		public NumericSensorEntity Heat5Usage => new(_haContext, "sensor.heat_5_usage");
		///<summary>home-assistant/core Discussions</summary>
		public NumericSensorEntity HomeAssistantCoreDiscussions => new(_haContext, "sensor.home_assistant_core_discussions");
		///<summary>home-assistant/core Forks</summary>
		public NumericSensorEntity HomeAssistantCoreForks => new(_haContext, "sensor.home_assistant_core_forks");
		///<summary>home-assistant/core Issues</summary>
		public NumericSensorEntity HomeAssistantCoreIssues => new(_haContext, "sensor.home_assistant_core_issues");
		///<summary>home-assistant/core Pull Requests</summary>
		public NumericSensorEntity HomeAssistantCorePullRequests => new(_haContext, "sensor.home_assistant_core_pull_requests");
		///<summary>home-assistant/core Stars</summary>
		public NumericSensorEntity HomeAssistantCoreStars => new(_haContext, "sensor.home_assistant_core_stars");
		///<summary>home-assistant/core Watchers</summary>
		public NumericSensorEntity HomeAssistantCoreWatchers => new(_haContext, "sensor.home_assistant_core_watchers");
		///<summary>HP 4000 LaserJet Printer RX</summary>
		public NumericSensorEntity Hp4000LaserjetPrinterRx => new(_haContext, "sensor.hp_4000_laserjet_printer_rx");
		///<summary>HP 4000 LaserJet Printer TX</summary>
		public NumericSensorEntity Hp4000LaserjetPrinterTx => new(_haContext, "sensor.hp_4000_laserjet_printer_tx");
		///<summary>Kitchen Bar Lights</summary>
		public NumericSensorEntity KitchenBarLights => new(_haContext, "sensor.kitchen_bar_lights");
		///<summary>Kitchen Bar Lights Power</summary>
		public NumericSensorEntity KitchenBarLightsPower => new(_haContext, "sensor.kitchen_bar_lights_power");
		///<summary>Kitchen Bar Lights Uptime</summary>
		public NumericSensorEntity KitchenBarLightsUptime => new(_haContext, "sensor.kitchen_bar_lights_uptime");
		///<summary>Kitchen Bar Lights Usage</summary>
		public NumericSensorEntity KitchenBarLightsUsage => new(_haContext, "sensor.kitchen_bar_lights_usage");
		///<summary>Kitchen Bar Lights WiFi Signal</summary>
		public NumericSensorEntity KitchenBarLightsWifiSignal => new(_haContext, "sensor.kitchen_bar_lights_wifi_signal");
		///<summary>Kitchen Echo RX</summary>
		public NumericSensorEntity KitchenEchoRx => new(_haContext, "sensor.kitchen_echo_rx");
		///<summary>Kitchen Echo TX</summary>
		public NumericSensorEntity KitchenEchoTx => new(_haContext, "sensor.kitchen_echo_tx");
		///<summary>Kitchen Fridge</summary>
		public NumericSensorEntity KitchenFridge => new(_haContext, "sensor.kitchen_fridge");
		///<summary>Kitchen Fridge Current</summary>
		public NumericSensorEntity KitchenFridgeCurrent => new(_haContext, "sensor.kitchen_fridge_current");
		///<summary>Kitchen Fridge Power</summary>
		public NumericSensorEntity KitchenFridgePower => new(_haContext, "sensor.kitchen_fridge_power");
		///<summary>Kitchen Fridge Smart Plug RX</summary>
		public NumericSensorEntity KitchenFridgeSmartPlugRx => new(_haContext, "sensor.kitchen_fridge_smart_plug_rx");
		///<summary>Kitchen Fridge Smart Plug TX</summary>
		public NumericSensorEntity KitchenFridgeSmartPlugTx => new(_haContext, "sensor.kitchen_fridge_smart_plug_tx");
		///<summary>Kitchen Fridge Uptime</summary>
		public NumericSensorEntity KitchenFridgeUptime => new(_haContext, "sensor.kitchen_fridge_uptime");
		///<summary>Kitchen Fridge Usage</summary>
		public NumericSensorEntity KitchenFridgeUsage => new(_haContext, "sensor.kitchen_fridge_usage");
		///<summary>Kitchen Fridge WiFi Signal</summary>
		public NumericSensorEntity KitchenFridgeWifiSignal => new(_haContext, "sensor.kitchen_fridge_wifi_signal");
		///<summary>Kitchen Table Light</summary>
		public NumericSensorEntity KitchenTableLight => new(_haContext, "sensor.kitchen_table_light");
		///<summary>Kitchen Table Light Power</summary>
		public NumericSensorEntity KitchenTableLightPower => new(_haContext, "sensor.kitchen_table_light_power");
		///<summary>Kitchen Table Light Uptime</summary>
		public NumericSensorEntity KitchenTableLightUptime => new(_haContext, "sensor.kitchen_table_light_uptime");
		///<summary>Kitchen Table Light Usage</summary>
		public NumericSensorEntity KitchenTableLightUsage => new(_haContext, "sensor.kitchen_table_light_usage");
		///<summary>Kitchen Table Light WiFi Signal</summary>
		public NumericSensorEntity KitchenTableLightWifiSignal => new(_haContext, "sensor.kitchen_table_light_wifi_signal");
		///<summary>Kitchen Tablet RX</summary>
		public NumericSensorEntity KitchenTabletRx => new(_haContext, "sensor.kitchen_tablet_rx");
		///<summary>Kitchen Tablet TX</summary>
		public NumericSensorEntity KitchenTabletTx => new(_haContext, "sensor.kitchen_tablet_tx");
		///<summary>L1 Voltage</summary>
		public NumericSensorEntity L1Voltage => new(_haContext, "sensor.l1_voltage");
		///<summary>L2 Voltage</summary>
		public NumericSensorEntity L2Voltage => new(_haContext, "sensor.l2_voltage");
		///<summary>Light 1 Usage</summary>
		public NumericSensorEntity Light1Usage => new(_haContext, "sensor.light_1_usage");
		///<summary>Living Room Echo RX</summary>
		public NumericSensorEntity LivingRoomEchoRx => new(_haContext, "sensor.living_room_echo_rx");
		///<summary>Living Room Echo TX</summary>
		public NumericSensorEntity LivingRoomEchoTx => new(_haContext, "sensor.living_room_echo_tx");
		///<summary>Living Room Lights</summary>
		public NumericSensorEntity LivingRoomLights => new(_haContext, "sensor.living_room_lights");
		///<summary>Living Room Lights Power</summary>
		public NumericSensorEntity LivingRoomLightsPower => new(_haContext, "sensor.living_room_lights_power");
		///<summary>Living Room Lights Uptime</summary>
		public NumericSensorEntity LivingRoomLightsUptime => new(_haContext, "sensor.living_room_lights_uptime");
		///<summary>Living Room Lights Usage</summary>
		public NumericSensorEntity LivingRoomLightsUsage => new(_haContext, "sensor.living_room_lights_usage");
		///<summary>Living Room Lights WiFi Signal</summary>
		public NumericSensorEntity LivingRoomLightsWifiSignal => new(_haContext, "sensor.living_room_lights_wifi_signal");
		///<summary>Main Floor Bathroom Echo RX</summary>
		public NumericSensorEntity MainFloorBathroomEchoRx => new(_haContext, "sensor.main_floor_bathroom_echo_rx");
		///<summary>Main Floor Bathroom Echo TX</summary>
		public NumericSensorEntity MainFloorBathroomEchoTx => new(_haContext, "sensor.main_floor_bathroom_echo_tx");
		///<summary>Master Bathroom Echo RX</summary>
		public NumericSensorEntity MasterBathroomEchoRx => new(_haContext, "sensor.master_bathroom_echo_rx");
		///<summary>Master Bathroom Echo TX</summary>
		public NumericSensorEntity MasterBathroomEchoTx => new(_haContext, "sensor.master_bathroom_echo_tx");
		///<summary>Master Bathroom Fan</summary>
		public NumericSensorEntity MasterBathroomFan => new(_haContext, "sensor.master_bathroom_fan");
		///<summary>Master Bathroom Fan Power</summary>
		public NumericSensorEntity MasterBathroomFanPower => new(_haContext, "sensor.master_bathroom_fan_power");
		///<summary>Master Bathroom Fan Uptime</summary>
		public NumericSensorEntity MasterBathroomFanUptime => new(_haContext, "sensor.master_bathroom_fan_uptime");
		///<summary>Master Bathroom Fan Usage</summary>
		public NumericSensorEntity MasterBathroomFanUsage => new(_haContext, "sensor.master_bathroom_fan_usage");
		///<summary>Master Bathroom Fan WiFi Signal</summary>
		public NumericSensorEntity MasterBathroomFanWifiSignal => new(_haContext, "sensor.master_bathroom_fan_wifi_signal");
		///<summary>Master Bathroom Lights</summary>
		public NumericSensorEntity MasterBathroomLights => new(_haContext, "sensor.master_bathroom_lights");
		///<summary>Master Bathroom Lights 2 Uptime</summary>
		public NumericSensorEntity MasterBathroomLights2Uptime => new(_haContext, "sensor.master_bathroom_lights_2_uptime");
		///<summary>Master Bathroom Lights 2 WiFi Signal</summary>
		public NumericSensorEntity MasterBathroomLights2WifiSignal => new(_haContext, "sensor.master_bathroom_lights_2_wifi_signal");
		///<summary>Master Bathroom Lights Power</summary>
		public NumericSensorEntity MasterBathroomLightsPower => new(_haContext, "sensor.master_bathroom_lights_power");
		///<summary>Master Bathroom Lights Uptime</summary>
		public NumericSensorEntity MasterBathroomLightsUptime => new(_haContext, "sensor.master_bathroom_lights_uptime");
		///<summary>Master Bathroom Lights Usage</summary>
		public NumericSensorEntity MasterBathroomLightsUsage => new(_haContext, "sensor.master_bathroom_lights_usage");
		///<summary>Master Bathroom Lights WiFi Signal</summary>
		public NumericSensorEntity MasterBathroomLightsWifiSignal => new(_haContext, "sensor.master_bathroom_lights_wifi_signal");
		///<summary>Master Bed Uptime</summary>
		public NumericSensorEntity MasterBedUptime => new(_haContext, "sensor.master_bed_uptime");
		///<summary>Master Bed WiFi Signal</summary>
		public NumericSensorEntity MasterBedWifiSignal => new(_haContext, "sensor.master_bed_wifi_signal");
		///<summary>Master Bedroom Fire TV RX</summary>
		public NumericSensorEntity MasterBedroomFireTvRx => new(_haContext, "sensor.master_bedroom_fire_tv_rx");
		///<summary>Master Bedroom Fire TV TX</summary>
		public NumericSensorEntity MasterBedroomFireTvTx => new(_haContext, "sensor.master_bedroom_fire_tv_tx");
		///<summary>Master Bedroom Nest Protect RX</summary>
		public NumericSensorEntity MasterBedroomNestProtectRx => new(_haContext, "sensor.master_bedroom_nest_protect_rx");
		///<summary>Master Bedroom Nest Protect TX</summary>
		public NumericSensorEntity MasterBedroomNestProtectTx => new(_haContext, "sensor.master_bedroom_nest_protect_tx");
		///<summary>mayson_available_time</summary>
		public NumericSensorEntity MaysonAvailableTime => new(_haContext, "sensor.mayson_available_time");
		///<summary>Mayson Double Used Time</summary>
		public NumericSensorEntity MaysonDoubleUsedTime => new(_haContext, "sensor.mayson_double_used_time");
		///<summary>Mayson's Echo RX</summary>
		public NumericSensorEntity MaysonSEchoRx => new(_haContext, "sensor.mayson_s_echo_rx");
		///<summary>Mayson's Echo TX</summary>
		public NumericSensorEntity MaysonSEchoTx => new(_haContext, "sensor.mayson_s_echo_tx");
		///<summary>Mayson's iPad RX</summary>
		public NumericSensorEntity MaysonSIpadRx => new(_haContext, "sensor.mayson_s_ipad_rx");
		///<summary>Mayson's iPad TX</summary>
		public NumericSensorEntity MaysonSIpadTx => new(_haContext, "sensor.mayson_s_ipad_tx");
		///<summary>Mayson's Phone RX</summary>
		public NumericSensorEntity MaysonSPhoneRx => new(_haContext, "sensor.mayson_s_phone_rx");
		///<summary>Mayson's Phone TX</summary>
		public NumericSensorEntity MaysonSPhoneTx => new(_haContext, "sensor.mayson_s_phone_tx");
		///<summary>Mayson's V350U Active Notification Count</summary>
		public NumericSensorEntity MaysonSV350uActiveNotificationCount => new(_haContext, "sensor.mayson_s_v350u_active_notification_count");
		///<summary>Mayson's V350U App Memory</summary>
		public NumericSensorEntity MaysonSV350uAppMemory => new(_haContext, "sensor.mayson_s_v350u_app_memory");
		///<summary>Mayson's V350U App Rx GB</summary>
		public NumericSensorEntity MaysonSV350uAppRxGb => new(_haContext, "sensor.mayson_s_v350u_app_rx_gb");
		///<summary>Mayson's V350U App Tx GB</summary>
		public NumericSensorEntity MaysonSV350uAppTxGb => new(_haContext, "sensor.mayson_s_v350u_app_tx_gb");
		///<summary>Mayson's V350U Battery Level</summary>
		public NumericSensorEntity MaysonSV350uBatteryLevel => new(_haContext, "sensor.mayson_s_v350u_battery_level");
		///<summary>Mayson's V350U Battery Temperature</summary>
		public NumericSensorEntity MaysonSV350uBatteryTemperature => new(_haContext, "sensor.mayson_s_v350u_battery_temperature");
		///<summary>Mayson's V350U Bluetooth Connection</summary>
		public NumericSensorEntity MaysonSV350uBluetoothConnection => new(_haContext, "sensor.mayson_s_v350u_bluetooth_connection");
		///<summary>Mayson's V350U External Storage</summary>
		public NumericSensorEntity MaysonSV350uExternalStorage => new(_haContext, "sensor.mayson_s_v350u_external_storage");
		///<summary>Mayson's V350U Internal Storage</summary>
		public NumericSensorEntity MaysonSV350uInternalStorage => new(_haContext, "sensor.mayson_s_v350u_internal_storage");
		///<summary>Mayson's V350U Light Sensor</summary>
		public NumericSensorEntity MaysonSV350uLightSensor => new(_haContext, "sensor.mayson_s_v350u_light_sensor");
		///<summary>Mayson's V350U Sleep Confidence</summary>
		public NumericSensorEntity MaysonSV350uSleepConfidence => new(_haContext, "sensor.mayson_s_v350u_sleep_confidence");
		///<summary>Mayson's V350U Sleep Segment</summary>
		public NumericSensorEntity MaysonSV350uSleepSegment => new(_haContext, "sensor.mayson_s_v350u_sleep_segment");
		///<summary>Mayson's V350U Steps Sensor</summary>
		public NumericSensorEntity MaysonSV350uStepsSensor => new(_haContext, "sensor.mayson_s_v350u_steps_sensor");
		///<summary>Mayson's V350U Total Rx GB</summary>
		public NumericSensorEntity MaysonSV350uTotalRxGb => new(_haContext, "sensor.mayson_s_v350u_total_rx_gb");
		///<summary>Mayson's V350U Total Tx GB</summary>
		public NumericSensorEntity MaysonSV350uTotalTxGb => new(_haContext, "sensor.mayson_s_v350u_total_tx_gb");
		///<summary>Mayson's V350U WiFi Frequency</summary>
		public NumericSensorEntity MaysonSV350uWifiFrequency => new(_haContext, "sensor.mayson_s_v350u_wifi_frequency");
		///<summary>Mayson's V350U WiFi Link Speed</summary>
		public NumericSensorEntity MaysonSV350uWifiLinkSpeed => new(_haContext, "sensor.mayson_s_v350u_wifi_link_speed");
		///<summary>Mayson's V350U WiFi Signal Strength</summary>
		public NumericSensorEntity MaysonSV350uWifiSignalStrength => new(_haContext, "sensor.mayson_s_v350u_wifi_signal_strength");
		///<summary>Mayson Used Time</summary>
		public NumericSensorEntity MaysonUsedTime => new(_haContext, "sensor.mayson_used_time");
		///<summary>Mayson's Room Illuminance</summary>
		public NumericSensorEntity MaysonsRoomIlluminance => new(_haContext, "sensor.maysons_room_illuminance");
		///<summary>Mayson's Sensor Battery</summary>
		public NumericSensorEntity MaysonsSensorBatteryLevel => new(_haContext, "sensor.maysons_sensor_battery_level");
		///<summary>Mayson's Tablet Battery Level</summary>
		public NumericSensorEntity MaysonsTabletBatteryLevel => new(_haContext, "sensor.maysons_tablet_battery_level");
		///<summary>Melissa Bed Percent</summary>
		public NumericSensorEntity MelissaBedPercent => new(_haContext, "sensor.melissa_bed_percent");
		///<summary>Phone - Melissa Battery Level</summary>
		public NumericSensorEntity MelissaGalaxyS9BatteryLevel => new(_haContext, "sensor.melissa_galaxy_s9_battery_level");
		///<summary>Melissa's Laptop RX</summary>
		public NumericSensorEntity MelissaSLaptopRx => new(_haContext, "sensor.melissa_s_laptop_rx");
		///<summary>Melissa's Laptop TX</summary>
		public NumericSensorEntity MelissaSLaptopTx => new(_haContext, "sensor.melissa_s_laptop_tx");
		///<summary>Melissa's Work Laptop RX</summary>
		public NumericSensorEntity MelissaSWorkLaptopRx => new(_haContext, "sensor.melissa_s_work_laptop_rx");
		///<summary>Melissa's Work Laptop TX</summary>
		public NumericSensorEntity MelissaSWorkLaptopTx => new(_haContext, "sensor.melissa_s_work_laptop_tx");
		///<summary>Melissa To Home</summary>
		public NumericSensorEntity MelissaToHome => new(_haContext, "sensor.melissa_to_home");
		///<summary>Memory use (percent)</summary>
		public NumericSensorEntity MemoryUsePercent => new(_haContext, "sensor.memory_use_percent");
		///<summary>Microwave Usage</summary>
		public NumericSensorEntity MicrowaveUsage => new(_haContext, "sensor.microwave_usage");
		///<summary>Mid Peak Electric Rate</summary>
		public NumericSensorEntity MidPeakElectricRate => new(_haContext, "sensor.mid_peak_electric_rate");
		///<summary>Monthly Usage</summary>
		public NumericSensorEntity MonthlyUsage => new(_haContext, "sensor.monthly_usage");
		///<summary>Motor 1 Usage</summary>
		public NumericSensorEntity Motor1Usage => new(_haContext, "sensor.motor_1_usage");
		///<summary>Motor 1 Usage</summary>
		public NumericSensorEntity Motor1Usage2 => new(_haContext, "sensor.motor_1_usage_2");
		///<summary>Motor 2 Usage</summary>
		public NumericSensorEntity Motor2Usage3 => new(_haContext, "sensor.motor_2_usage_3");
		///<summary>Motor 3 Usage</summary>
		public NumericSensorEntity Motor3Usage => new(_haContext, "sensor.motor_3_usage");
		///<summary>Motor 4 Usage</summary>
		public NumericSensorEntity Motor4Usage => new(_haContext, "sensor.motor_4_usage");
		///<summary>Motor 5 Usage</summary>
		public NumericSensorEntity Motor5Usage => new(_haContext, "sensor.motor_5_usage");
		///<summary>Motor 6 Usage</summary>
		public NumericSensorEntity Motor6Usage => new(_haContext, "sensor.motor_6_usage");
		///<summary>Motor 7 Usage</summary>
		public NumericSensorEntity Motor7Usage => new(_haContext, "sensor.motor_7_usage");
		///<summary>Motor 8 Usage</summary>
		public NumericSensorEntity Motor8Usage => new(_haContext, "sensor.motor_8_usage");
		///<summary>Motor 8 Usage</summary>
		public NumericSensorEntity Motor8Usage2 => new(_haContext, "sensor.motor_8_usage_2");
		///<summary>Motor 9 Usage</summary>
		public NumericSensorEntity Motor9Usage => new(_haContext, "sensor.motor_9_usage");
		///<summary>MyQ Gateway RX</summary>
		public NumericSensorEntity MyqGatewayRx => new(_haContext, "sensor.myq_gateway_rx");
		///<summary>MyQ Gateway TX</summary>
		public NumericSensorEntity MyqGatewayTx => new(_haContext, "sensor.myq_gateway_tx");
		///<summary>Neato Battery</summary>
		public NumericSensorEntity NeatoBattery => new(_haContext, "sensor.neato_battery");
		///<summary>Network Equipment</summary>
		public NumericSensorEntity NetworkEquipment => new(_haContext, "sensor.network_equipment");
		///<summary>Network Equipment Current</summary>
		public NumericSensorEntity NetworkEquipmentCurrent => new(_haContext, "sensor.network_equipment_current");
		///<summary>Network Equipment Power</summary>
		public NumericSensorEntity NetworkEquipmentPower => new(_haContext, "sensor.network_equipment_power");
		///<summary>Network Equipment Smart Plug RX</summary>
		public NumericSensorEntity NetworkEquipmentSmartPlugRx => new(_haContext, "sensor.network_equipment_smart_plug_rx");
		///<summary>Network Equipment Smart Plug TX</summary>
		public NumericSensorEntity NetworkEquipmentSmartPlugTx => new(_haContext, "sensor.network_equipment_smart_plug_tx");
		///<summary>Network Equipment Uptime</summary>
		public NumericSensorEntity NetworkEquipmentUptime => new(_haContext, "sensor.network_equipment_uptime");
		///<summary>Network Equipment Usage</summary>
		public NumericSensorEntity NetworkEquipmentUsage => new(_haContext, "sensor.network_equipment_usage");
		///<summary>Network Equipment WiFi Signal</summary>
		public NumericSensorEntity NetworkEquipmentWifiSignal => new(_haContext, "sensor.network_equipment_wifi_signal");
		///<summary>NuttyNAS (Volume 2) Average Disk Temp</summary>
		public NumericSensorEntity NuttynasAverageDiskTemp => new(_haContext, "sensor.nuttynas_average_disk_temp");
		///<summary>NuttyNAS (Volume 1) Average Disk Temp</summary>
		public NumericSensorEntity NuttynasAverageDiskTemp2 => new(_haContext, "sensor.nuttynas_average_disk_temp_2");
		///<summary>NuttyNAS CPU Load Average (15 min)</summary>
		public NumericSensorEntity NuttynasCpuLoadAverage15Min => new(_haContext, "sensor.nuttynas_cpu_load_average_15_min");
		///<summary>NuttyNAS CPU Load Average (5 min)</summary>
		public NumericSensorEntity NuttynasCpuLoadAverage5Min => new(_haContext, "sensor.nuttynas_cpu_load_average_5_min");
		///<summary>NuttyNAS CPU Utilization (Total)</summary>
		public NumericSensorEntity NuttynasCpuUtilizationTotal => new(_haContext, "sensor.nuttynas_cpu_utilization_total");
		///<summary>NuttyNAS CPU Utilization (User)</summary>
		public NumericSensorEntity NuttynasCpuUtilizationUser => new(_haContext, "sensor.nuttynas_cpu_utilization_user");
		///<summary>NuttyNAS Download Throughput</summary>
		public NumericSensorEntity NuttynasDownloadThroughput => new(_haContext, "sensor.nuttynas_download_throughput");
		///<summary>NuttyNAS Memory Available (Real)</summary>
		public NumericSensorEntity NuttynasMemoryAvailableReal => new(_haContext, "sensor.nuttynas_memory_available_real");
		///<summary>NuttyNAS Memory Available (Swap)</summary>
		public NumericSensorEntity NuttynasMemoryAvailableSwap => new(_haContext, "sensor.nuttynas_memory_available_swap");
		///<summary>NuttyNAS Memory Total (Real)</summary>
		public NumericSensorEntity NuttynasMemoryTotalReal => new(_haContext, "sensor.nuttynas_memory_total_real");
		///<summary>NuttyNAS Memory Total (Swap)</summary>
		public NumericSensorEntity NuttynasMemoryTotalSwap => new(_haContext, "sensor.nuttynas_memory_total_swap");
		///<summary>NuttyNAS Memory Usage (Real)</summary>
		public NumericSensorEntity NuttynasMemoryUsageReal => new(_haContext, "sensor.nuttynas_memory_usage_real");
		///<summary>NuttyNAS (Drive 1) Temperature</summary>
		public NumericSensorEntity NuttynasTemperature => new(_haContext, "sensor.nuttynas_temperature");
		///<summary>NuttyNAS (Cache device 2) Temperature</summary>
		public NumericSensorEntity NuttynasTemperature10 => new(_haContext, "sensor.nuttynas_temperature_10");
		///<summary>NuttyNAS Temperature</summary>
		public NumericSensorEntity NuttynasTemperature11 => new(_haContext, "sensor.nuttynas_temperature_11");
		///<summary>NuttyNAS (Drive 2) Temperature</summary>
		public NumericSensorEntity NuttynasTemperature2 => new(_haContext, "sensor.nuttynas_temperature_2");
		///<summary>NuttyNAS (Drive 3) Temperature</summary>
		public NumericSensorEntity NuttynasTemperature3 => new(_haContext, "sensor.nuttynas_temperature_3");
		///<summary>NuttyNAS (Drive 4) Temperature</summary>
		public NumericSensorEntity NuttynasTemperature4 => new(_haContext, "sensor.nuttynas_temperature_4");
		///<summary>NuttyNAS (Drive 5) Temperature</summary>
		public NumericSensorEntity NuttynasTemperature5 => new(_haContext, "sensor.nuttynas_temperature_5");
		///<summary>NuttyNAS (Drive 6) Temperature</summary>
		public NumericSensorEntity NuttynasTemperature6 => new(_haContext, "sensor.nuttynas_temperature_6");
		///<summary>NuttyNAS (Drive 7) Temperature</summary>
		public NumericSensorEntity NuttynasTemperature7 => new(_haContext, "sensor.nuttynas_temperature_7");
		///<summary>NuttyNAS (Drive 8) Temperature</summary>
		public NumericSensorEntity NuttynasTemperature8 => new(_haContext, "sensor.nuttynas_temperature_8");
		///<summary>NuttyNAS (Cache device 1) Temperature</summary>
		public NumericSensorEntity NuttynasTemperature9 => new(_haContext, "sensor.nuttynas_temperature_9");
		///<summary>NuttyNAS Upload Throughput</summary>
		public NumericSensorEntity NuttynasUploadThroughput => new(_haContext, "sensor.nuttynas_upload_throughput");
		///<summary>NuttyNAS (Volume 2) Used Space</summary>
		public NumericSensorEntity NuttynasUsedSpace => new(_haContext, "sensor.nuttynas_used_space");
		///<summary>NuttyNAS (Volume 1) Used Space</summary>
		public NumericSensorEntity NuttynasUsedSpace2 => new(_haContext, "sensor.nuttynas_used_space_2");
		///<summary>NuttyNAS (Volume 2) Volume Used</summary>
		public NumericSensorEntity NuttynasVolumeUsed => new(_haContext, "sensor.nuttynas_volume_used");
		///<summary>NuttyNAS (Volume 1) Volume Used</summary>
		public NumericSensorEntity NuttynasVolumeUsed2 => new(_haContext, "sensor.nuttynas_volume_used_2");
		///<summary>nuttytree/ESPHome-Devices Discussions</summary>
		public NumericSensorEntity NuttytreeEsphomeDevicesDiscussions => new(_haContext, "sensor.nuttytree_esphome_devices_discussions");
		///<summary>nuttytree/ESPHome-Devices Forks</summary>
		public NumericSensorEntity NuttytreeEsphomeDevicesForks => new(_haContext, "sensor.nuttytree_esphome_devices_forks");
		///<summary>nuttytree/ESPHome-Devices Issues</summary>
		public NumericSensorEntity NuttytreeEsphomeDevicesIssues => new(_haContext, "sensor.nuttytree_esphome_devices_issues");
		///<summary>nuttytree/ESPHome-Devices Pull Requests</summary>
		public NumericSensorEntity NuttytreeEsphomeDevicesPullRequests => new(_haContext, "sensor.nuttytree_esphome_devices_pull_requests");
		///<summary>nuttytree/ESPHome-Devices Stars</summary>
		public NumericSensorEntity NuttytreeEsphomeDevicesStars => new(_haContext, "sensor.nuttytree_esphome_devices_stars");
		///<summary>nuttytree/ESPHome-Devices Watchers</summary>
		public NumericSensorEntity NuttytreeEsphomeDevicesWatchers => new(_haContext, "sensor.nuttytree_esphome_devices_watchers");
		///<summary>nuttytree/nuttytree-netdaemon Discussions</summary>
		public NumericSensorEntity NuttytreeNuttytreeNetdaemonDiscussions => new(_haContext, "sensor.nuttytree_nuttytree_netdaemon_discussions");
		///<summary>nuttytree/nuttytree-netdaemon Forks</summary>
		public NumericSensorEntity NuttytreeNuttytreeNetdaemonForks => new(_haContext, "sensor.nuttytree_nuttytree_netdaemon_forks");
		///<summary>nuttytree/nuttytree-netdaemon Issues</summary>
		public NumericSensorEntity NuttytreeNuttytreeNetdaemonIssues => new(_haContext, "sensor.nuttytree_nuttytree_netdaemon_issues");
		///<summary>nuttytree/nuttytree-netdaemon Pull Requests</summary>
		public NumericSensorEntity NuttytreeNuttytreeNetdaemonPullRequests => new(_haContext, "sensor.nuttytree_nuttytree_netdaemon_pull_requests");
		///<summary>nuttytree/nuttytree-netdaemon Stars</summary>
		public NumericSensorEntity NuttytreeNuttytreeNetdaemonStars => new(_haContext, "sensor.nuttytree_nuttytree_netdaemon_stars");
		///<summary>nuttytree/nuttytree-netdaemon Watchers</summary>
		public NumericSensorEntity NuttytreeNuttytreeNetdaemonWatchers => new(_haContext, "sensor.nuttytree_nuttytree_netdaemon_watchers");
		///<summary>Off Peak Electric Rate</summary>
		public NumericSensorEntity OffPeakElectricRate => new(_haContext, "sensor.off_peak_electric_rate");
		///<summary>Office Echo RX</summary>
		public NumericSensorEntity OfficeEchoRx => new(_haContext, "sensor.office_echo_rx");
		///<summary>Office Echo TX</summary>
		public NumericSensorEntity OfficeEchoTx => new(_haContext, "sensor.office_echo_tx");
		///<summary>Office Light</summary>
		public NumericSensorEntity OfficeLight => new(_haContext, "sensor.office_light");
		///<summary>Office Light Power</summary>
		public NumericSensorEntity OfficeLightPower => new(_haContext, "sensor.office_light_power");
		///<summary>Office Light Uptime</summary>
		public NumericSensorEntity OfficeLightUptime => new(_haContext, "sensor.office_light_uptime");
		///<summary>Office Light Usage</summary>
		public NumericSensorEntity OfficeLightUsage => new(_haContext, "sensor.office_light_usage");
		///<summary>Office Light WiFi Signal</summary>
		public NumericSensorEntity OfficeLightWifiSignal => new(_haContext, "sensor.office_light_wifi_signal");
		///<summary>Ooma RX</summary>
		public NumericSensorEntity OomaRx => new(_haContext, "sensor.ooma_rx");
		///<summary>Ooma TX</summary>
		public NumericSensorEntity OomaTx => new(_haContext, "sensor.ooma_tx");
		///<summary>OpenWeatherMap Cloud coverage</summary>
		public NumericSensorEntity OpenweathermapCloudCoverage => new(_haContext, "sensor.openweathermap_cloud_coverage");
		///<summary>OpenWeatherMap Dew Point</summary>
		public NumericSensorEntity OpenweathermapDewPoint => new(_haContext, "sensor.openweathermap_dew_point");
		///<summary>OpenWeatherMap Feels like temperature</summary>
		public NumericSensorEntity OpenweathermapFeelsLikeTemperature => new(_haContext, "sensor.openweathermap_feels_like_temperature");
		///<summary>OpenWeatherMap Forecast Cloud coverage</summary>
		public NumericSensorEntity OpenweathermapForecastCloudCoverage => new(_haContext, "sensor.openweathermap_forecast_cloud_coverage");
		///<summary>OpenWeatherMap Forecast Precipitation</summary>
		public NumericSensorEntity OpenweathermapForecastPrecipitation => new(_haContext, "sensor.openweathermap_forecast_precipitation");
		///<summary>OpenWeatherMap Forecast Precipitation probability</summary>
		public NumericSensorEntity OpenweathermapForecastPrecipitationProbability => new(_haContext, "sensor.openweathermap_forecast_precipitation_probability");
		///<summary>OpenWeatherMap Forecast Pressure</summary>
		public NumericSensorEntity OpenweathermapForecastPressure => new(_haContext, "sensor.openweathermap_forecast_pressure");
		///<summary>OpenWeatherMap Forecast Temperature</summary>
		public NumericSensorEntity OpenweathermapForecastTemperature => new(_haContext, "sensor.openweathermap_forecast_temperature");
		///<summary>OpenWeatherMap Forecast Temperature Low</summary>
		public NumericSensorEntity OpenweathermapForecastTemperatureLow => new(_haContext, "sensor.openweathermap_forecast_temperature_low");
		///<summary>OpenWeatherMap Forecast Wind bearing</summary>
		public NumericSensorEntity OpenweathermapForecastWindBearing => new(_haContext, "sensor.openweathermap_forecast_wind_bearing");
		///<summary>OpenWeatherMap Forecast Wind speed</summary>
		public NumericSensorEntity OpenweathermapForecastWindSpeed => new(_haContext, "sensor.openweathermap_forecast_wind_speed");
		///<summary>OpenWeatherMap Humidity</summary>
		public NumericSensorEntity OpenweathermapHumidity => new(_haContext, "sensor.openweathermap_humidity");
		///<summary>OpenWeatherMap Pressure</summary>
		public NumericSensorEntity OpenweathermapPressure => new(_haContext, "sensor.openweathermap_pressure");
		///<summary>OpenWeatherMap Rain</summary>
		public NumericSensorEntity OpenweathermapRain => new(_haContext, "sensor.openweathermap_rain");
		///<summary>OpenWeatherMap Snow</summary>
		public NumericSensorEntity OpenweathermapSnow => new(_haContext, "sensor.openweathermap_snow");
		///<summary>OpenWeatherMap Temperature</summary>
		public NumericSensorEntity OpenweathermapTemperature => new(_haContext, "sensor.openweathermap_temperature");
		///<summary>OpenWeatherMap UV Index</summary>
		public NumericSensorEntity OpenweathermapUvIndex => new(_haContext, "sensor.openweathermap_uv_index");
		///<summary>OpenWeatherMap Visibility</summary>
		public NumericSensorEntity OpenweathermapVisibility => new(_haContext, "sensor.openweathermap_visibility");
		///<summary>OpenWeatherMap Wind bearing</summary>
		public NumericSensorEntity OpenweathermapWindBearing => new(_haContext, "sensor.openweathermap_wind_bearing");
		///<summary>OpenWeatherMap Wind speed</summary>
		public NumericSensorEntity OpenweathermapWindSpeed => new(_haContext, "sensor.openweathermap_wind_speed");
		///<summary>Other Usage</summary>
		public NumericSensorEntity OtherUsage => new(_haContext, "sensor.other_usage");
		///<summary>Oven Usage</summary>
		public NumericSensorEntity OvenUsage => new(_haContext, "sensor.oven_usage");
		///<summary>Oven Usage</summary>
		public NumericSensorEntity OvenUsage2 => new(_haContext, "sensor.oven_usage_2");
		///<summary>Patio Lights</summary>
		public NumericSensorEntity PatioLights => new(_haContext, "sensor.patio_lights");
		///<summary>Patio Lights Power</summary>
		public NumericSensorEntity PatioLightsPower => new(_haContext, "sensor.patio_lights_power");
		///<summary>Patio Lights Uptime</summary>
		public NumericSensorEntity PatioLightsUptime => new(_haContext, "sensor.patio_lights_uptime");
		///<summary>Patio Lights Usage</summary>
		public NumericSensorEntity PatioLightsUsage => new(_haContext, "sensor.patio_lights_usage");
		///<summary>Patio Lights WiFi Signal</summary>
		public NumericSensorEntity PatioLightsWifiSignal => new(_haContext, "sensor.patio_lights_wifi_signal");
		///<summary>Peak Electric Rate</summary>
		public NumericSensorEntity PeakElectricRate => new(_haContext, "sensor.peak_electric_rate");
		///<summary>Phone - Chris Active Notification Count</summary>
		public NumericSensorEntity PhoneChrisActiveNotificationCount => new(_haContext, "sensor.phone_chris_active_notification_count");
		///<summary>Phone - Chris App Memory</summary>
		public NumericSensorEntity PhoneChrisAppMemory => new(_haContext, "sensor.phone_chris_app_memory");
		///<summary>Phone - Chris App Rx GB</summary>
		public NumericSensorEntity PhoneChrisAppRxGb => new(_haContext, "sensor.phone_chris_app_rx_gb");
		///<summary>Phone - Chris App Tx GB</summary>
		public NumericSensorEntity PhoneChrisAppTxGb => new(_haContext, "sensor.phone_chris_app_tx_gb");
		///<summary>Phone - Chris Battery Level</summary>
		public NumericSensorEntity PhoneChrisBatteryLevel => new(_haContext, "sensor.phone_chris_battery_level");
		///<summary>Phone - Chris Battery Temperature</summary>
		public NumericSensorEntity PhoneChrisBatteryTemperature => new(_haContext, "sensor.phone_chris_battery_temperature");
		///<summary>Phone - Chris Bluetooth Connection</summary>
		public NumericSensorEntity PhoneChrisBluetoothConnection => new(_haContext, "sensor.phone_chris_bluetooth_connection");
		///<summary>Phone - Chris Internal Storage</summary>
		public NumericSensorEntity PhoneChrisInternalStorage => new(_haContext, "sensor.phone_chris_internal_storage");
		///<summary>Phone - Chris Light Sensor</summary>
		public NumericSensorEntity PhoneChrisLightSensor => new(_haContext, "sensor.phone_chris_light_sensor");
		///<summary>Phone - Chris Mobile Rx GB</summary>
		public NumericSensorEntity PhoneChrisMobileRxGb => new(_haContext, "sensor.phone_chris_mobile_rx_gb");
		///<summary>Phone - Chris Mobile Tx GB</summary>
		public NumericSensorEntity PhoneChrisMobileTxGb => new(_haContext, "sensor.phone_chris_mobile_tx_gb");
		///<summary>Phone - Chris Sleep Confidence</summary>
		public NumericSensorEntity PhoneChrisSleepConfidence => new(_haContext, "sensor.phone_chris_sleep_confidence");
		///<summary>Phone - Chris Sleep Segment</summary>
		public NumericSensorEntity PhoneChrisSleepSegment => new(_haContext, "sensor.phone_chris_sleep_segment");
		///<summary>Phone - Chris Steps Sensor</summary>
		public NumericSensorEntity PhoneChrisStepsSensor => new(_haContext, "sensor.phone_chris_steps_sensor");
		///<summary>Phone - Chris Total Rx GB</summary>
		public NumericSensorEntity PhoneChrisTotalRxGb => new(_haContext, "sensor.phone_chris_total_rx_gb");
		///<summary>Phone - Chris Total Tx GB</summary>
		public NumericSensorEntity PhoneChrisTotalTxGb => new(_haContext, "sensor.phone_chris_total_tx_gb");
		///<summary>Phone - Chris WiFi Frequency</summary>
		public NumericSensorEntity PhoneChrisWifiFrequency => new(_haContext, "sensor.phone_chris_wifi_frequency");
		///<summary>Phone - Chris WiFi Link Speed</summary>
		public NumericSensorEntity PhoneChrisWifiLinkSpeed => new(_haContext, "sensor.phone_chris_wifi_link_speed");
		///<summary>Phone - Chris WiFi Signal Strength</summary>
		public NumericSensorEntity PhoneChrisWifiSignalStrength => new(_haContext, "sensor.phone_chris_wifi_signal_strength");
		///<summary>Phone - Melissa Battery Temperature</summary>
		public NumericSensorEntity PhoneMelissaBatteryTemperature => new(_haContext, "sensor.phone_melissa_battery_temperature");
		///<summary>Phone - Melissa Bluetooth Connection</summary>
		public NumericSensorEntity PhoneMelissaBluetoothConnection => new(_haContext, "sensor.phone_melissa_bluetooth_connection");
		///<summary>Phone - Melissa Light Sensor</summary>
		public NumericSensorEntity PhoneMelissaLightSensor => new(_haContext, "sensor.phone_melissa_light_sensor");
		///<summary>Phone - Melissa Pressure Sensor</summary>
		public NumericSensorEntity PhoneMelissaPressureSensor => new(_haContext, "sensor.phone_melissa_pressure_sensor");
		///<summary>Phone - Melissa Storage Sensor</summary>
		public NumericSensorEntity PhoneMelissaStorageSensor => new(_haContext, "sensor.phone_melissa_storage_sensor");
		///<summary>Pi-Hole Ads Blocked Today</summary>
		public NumericSensorEntity PiHoleAdsBlockedToday => new(_haContext, "sensor.pi_hole_ads_blocked_today");
		///<summary>Pi-Hole Ads Percentage Blocked Today</summary>
		public NumericSensorEntity PiHoleAdsPercentageBlockedToday => new(_haContext, "sensor.pi_hole_ads_percentage_blocked_today");
		///<summary>Pi-Hole DNS Queries Cached</summary>
		public NumericSensorEntity PiHoleDnsQueriesCached => new(_haContext, "sensor.pi_hole_dns_queries_cached");
		///<summary>Pi-Hole DNS Queries Forwarded</summary>
		public NumericSensorEntity PiHoleDnsQueriesForwarded => new(_haContext, "sensor.pi_hole_dns_queries_forwarded");
		///<summary>Pi-Hole DNS Queries Today</summary>
		public NumericSensorEntity PiHoleDnsQueriesToday => new(_haContext, "sensor.pi_hole_dns_queries_today");
		///<summary>Pi-Hole DNS Unique Clients</summary>
		public NumericSensorEntity PiHoleDnsUniqueClients => new(_haContext, "sensor.pi_hole_dns_unique_clients");
		///<summary>Pi-Hole DNS Unique Domains</summary>
		public NumericSensorEntity PiHoleDnsUniqueDomains => new(_haContext, "sensor.pi_hole_dns_unique_domains");
		///<summary>Pi-Hole Domains Blocked</summary>
		public NumericSensorEntity PiHoleDomainsBlocked => new(_haContext, "sensor.pi_hole_domains_blocked");
		///<summary>Pi-Hole Seen Clients</summary>
		public NumericSensorEntity PiHoleSeenClients => new(_haContext, "sensor.pi_hole_seen_clients");
		///<summary>Pool and Patio Lights Uptime</summary>
		public NumericSensorEntity PoolAndPatioLightsUptime => new(_haContext, "sensor.pool_and_patio_lights_uptime");
		///<summary>Pool and Patio Lights WiFi Signal</summary>
		public NumericSensorEntity PoolAndPatioLightsWifiSignal => new(_haContext, "sensor.pool_and_patio_lights_wifi_signal");
		///<summary>Pool Cleaner Current</summary>
		public NumericSensorEntity PoolCleanerCurrent => new(_haContext, "sensor.pool_cleaner_current");
		///<summary>Pool Cleaner Power</summary>
		public NumericSensorEntity PoolCleanerPower => new(_haContext, "sensor.pool_cleaner_power");
		///<summary>Pool Cleaner Total Daily Energy</summary>
		public NumericSensorEntity PoolCleanerTotalDailyEnergy => new(_haContext, "sensor.pool_cleaner_total_daily_energy");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity PoolCleanerUsage => new(_haContext, "sensor.pool_cleaner_usage");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity PoolCleanerUsage10 => new(_haContext, "sensor.pool_cleaner_usage_10");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity PoolCleanerUsage11 => new(_haContext, "sensor.pool_cleaner_usage_11");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity PoolCleanerUsage12 => new(_haContext, "sensor.pool_cleaner_usage_12");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity PoolCleanerUsage13 => new(_haContext, "sensor.pool_cleaner_usage_13");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity PoolCleanerUsage14 => new(_haContext, "sensor.pool_cleaner_usage_14");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity PoolCleanerUsage15 => new(_haContext, "sensor.pool_cleaner_usage_15");
		///<summary>Pool Cleaner Usage</summary>
		public NumericSensorEntity PoolCleanerUsage16 => new(_haContext, "sensor.pool_cleaner_usage_16");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity PoolCleanerUsage2 => new(_haContext, "sensor.pool_cleaner_usage_2");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity PoolCleanerUsage3 => new(_haContext, "sensor.pool_cleaner_usage_3");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity PoolCleanerUsage4 => new(_haContext, "sensor.pool_cleaner_usage_4");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity PoolCleanerUsage5 => new(_haContext, "sensor.pool_cleaner_usage_5");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity PoolCleanerUsage6 => new(_haContext, "sensor.pool_cleaner_usage_6");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity PoolCleanerUsage7 => new(_haContext, "sensor.pool_cleaner_usage_7");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity PoolCleanerUsage8 => new(_haContext, "sensor.pool_cleaner_usage_8");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity PoolCleanerUsage9 => new(_haContext, "sensor.pool_cleaner_usage_9");
		///<summary>Pool Lights</summary>
		public NumericSensorEntity PoolLights => new(_haContext, "sensor.pool_lights");
		///<summary>Pool Lights Power</summary>
		public NumericSensorEntity PoolLightsPower => new(_haContext, "sensor.pool_lights_power");
		///<summary>Pool Lights Usage</summary>
		public NumericSensorEntity PoolLightsUsage => new(_haContext, "sensor.pool_lights_usage");
		///<summary>Pool Pump Current</summary>
		public NumericSensorEntity PoolPumpCurrent => new(_haContext, "sensor.pool_pump_current");
		///<summary>Pool Pump Power</summary>
		public NumericSensorEntity PoolPumpPower => new(_haContext, "sensor.pool_pump_power");
		///<summary>Pool Pump Total Daily Energy</summary>
		public NumericSensorEntity PoolPumpTotalDailyEnergy => new(_haContext, "sensor.pool_pump_total_daily_energy");
		///<summary>Pool Pump Usage</summary>
		public NumericSensorEntity PoolPumpUsage3 => new(_haContext, "sensor.pool_pump_usage_3");
		///<summary>Pool Pump Usage</summary>
		public NumericSensorEntity PoolPumpUsage6 => new(_haContext, "sensor.pool_pump_usage_6");
		///<summary>Pool Pumps Temperature</summary>
		public NumericSensorEntity PoolPumpsTemperature => new(_haContext, "sensor.pool_pumps_temperature");
		///<summary>Pool Pumps Uptime</summary>
		public NumericSensorEntity PoolPumpsUptime => new(_haContext, "sensor.pool_pumps_uptime");
		///<summary>Pool Pumps Voltage</summary>
		public NumericSensorEntity PoolPumpsVoltage => new(_haContext, "sensor.pool_pumps_voltage");
		///<summary>Pool Pumps WiFi Signal</summary>
		public NumericSensorEntity PoolPumpsWifiSignal => new(_haContext, "sensor.pool_pumps_wifi_signal");
		///<summary>Amcrest Processor Usage</summary>
		public NumericSensorEntity ProcessorUsage => new(_haContext, "sensor.processor_usage");
		///<summary>Pump 2 Usage</summary>
		public NumericSensorEntity Pump2Usage => new(_haContext, "sensor.pump_2_usage");
		///<summary>Pump 2 Usage</summary>
		public NumericSensorEntity Pump2Usage2 => new(_haContext, "sensor.pump_2_usage_2");
		///<summary>Pump Usage</summary>
		public NumericSensorEntity PumpUsage => new(_haContext, "sensor.pump_usage");
		///<summary>Relative Marginal Emissions Intensity (MISO_MINNEAPOLIS)</summary>
		public NumericSensorEntity RelativeMarginalEmissionsIntensityMisoMinneapolis => new(_haContext, "sensor.relative_marginal_emissions_intensity_miso_minneapolis");
		///<summary>Ring Doorbell RX</summary>
		public NumericSensorEntity RingDoorbellRx => new(_haContext, "sensor.ring_doorbell_rx");
		///<summary>Ring Doorbell TX</summary>
		public NumericSensorEntity RingDoorbellTx => new(_haContext, "sensor.ring_doorbell_tx");
		///<summary>Master Bath Lights RX</summary>
		public NumericSensorEntity Rx => new(_haContext, "sensor.rx");
		///<summary> RX</summary>
		public NumericSensorEntity Rx10 => new(_haContext, "sensor.rx_10");
		///<summary>Garage Fridge RX</summary>
		public NumericSensorEntity Rx11 => new(_haContext, "sensor.rx_11");
		///<summary>Family Room Light RX</summary>
		public NumericSensorEntity Rx12 => new(_haContext, "sensor.rx_12");
		///<summary>Living Room Lights RX</summary>
		public NumericSensorEntity Rx13 => new(_haContext, "sensor.rx_13");
		///<summary>Front Entry Lights 2 RX</summary>
		public NumericSensorEntity Rx14 => new(_haContext, "sensor.rx_14");
		///<summary>Computer Light RX</summary>
		public NumericSensorEntity Rx15 => new(_haContext, "sensor.rx_15");
		///<summary>Fire Pit and Fountain RX</summary>
		public NumericSensorEntity Rx16 => new(_haContext, "sensor.rx_16");
		///<summary>Master Bath Lights 2 RX</summary>
		public NumericSensorEntity Rx17 => new(_haContext, "sensor.rx_17");
		///<summary>Family Room TV Smart Plug RX</summary>
		public NumericSensorEntity Rx18 => new(_haContext, "sensor.rx_18");
		///<summary>Dining Room Light RX</summary>
		public NumericSensorEntity Rx19 => new(_haContext, "sensor.rx_19");
		///<summary>Pool Camera RX</summary>
		public NumericSensorEntity Rx2 => new(_haContext, "sensor.rx_2");
		///<summary>Basement Stairs Lights RX</summary>
		public NumericSensorEntity Rx20 => new(_haContext, "sensor.rx_20");
		///<summary>Office Lights RX</summary>
		public NumericSensorEntity Rx21 => new(_haContext, "sensor.rx_21");
		///<summary>Garage Lights RX</summary>
		public NumericSensorEntity Rx22 => new(_haContext, "sensor.rx_22");
		///<summary>NuttyNAS RX</summary>
		public NumericSensorEntity Rx23 => new(_haContext, "sensor.rx_23");
		///<summary>VacuumRobot RX</summary>
		public NumericSensorEntity Rx24 => new(_haContext, "sensor.rx_24");
		///<summary>Front Lights RX</summary>
		public NumericSensorEntity Rx25 => new(_haContext, "sensor.rx_25");
		///<summary> RX</summary>
		public NumericSensorEntity Rx26 => new(_haContext, "sensor.rx_26");
		///<summary>Pool Pumps RX</summary>
		public NumericSensorEntity Rx27 => new(_haContext, "sensor.rx_27");
		///<summary>Kitchen Bar Lights RX</summary>
		public NumericSensorEntity Rx28 => new(_haContext, "sensor.rx_28");
		///<summary>Gate Camera RX</summary>
		public NumericSensorEntity Rx29 => new(_haContext, "sensor.rx_29");
		///<summary>Kitchen Table Light RX</summary>
		public NumericSensorEntity Rx3 => new(_haContext, "sensor.rx_3");
		///<summary>Pool and Patio Lights RX</summary>
		public NumericSensorEntity Rx30 => new(_haContext, "sensor.rx_30");
		///<summary>DS1821+ (eth4) RX</summary>
		public NumericSensorEntity Rx31 => new(_haContext, "sensor.rx_31");
		///<summary>DS1821+ (eth1) RX</summary>
		public NumericSensorEntity Rx32 => new(_haContext, "sensor.rx_32");
		///<summary>Master Bed Sensor RX</summary>
		public NumericSensorEntity Rx33 => new(_haContext, "sensor.rx_33");
		///<summary>Xbox One RX</summary>
		public NumericSensorEntity Rx34 => new(_haContext, "sensor.rx_34");
		///<summary> RX</summary>
		public NumericSensorEntity Rx35 => new(_haContext, "sensor.rx_35");
		///<summary> RX</summary>
		public NumericSensorEntity Rx36 => new(_haContext, "sensor.rx_36");
		///<summary> RX</summary>
		public NumericSensorEntity Rx37 => new(_haContext, "sensor.rx_37");
		///<summary> RX</summary>
		public NumericSensorEntity Rx38 => new(_haContext, "sensor.rx_38");
		///<summary> RX</summary>
		public NumericSensorEntity Rx39 => new(_haContext, "sensor.rx_39");
		///<summary>Basement Stairs Lights 2 RX</summary>
		public NumericSensorEntity Rx4 => new(_haContext, "sensor.rx_4");
		///<summary> RX</summary>
		public NumericSensorEntity Rx40 => new(_haContext, "sensor.rx_40");
		///<summary>v350u RX</summary>
		public NumericSensorEntity Rx41 => new(_haContext, "sensor.rx_41");
		///<summary> RX</summary>
		public NumericSensorEntity Rx42 => new(_haContext, "sensor.rx_42");
		///<summary> RX</summary>
		public NumericSensorEntity Rx43 => new(_haContext, "sensor.rx_43");
		///<summary> RX</summary>
		public NumericSensorEntity Rx44 => new(_haContext, "sensor.rx_44");
		///<summary>Master Bath Fan RX</summary>
		public NumericSensorEntity Rx5 => new(_haContext, "sensor.rx_5");
		///<summary>Patio Lights RX</summary>
		public NumericSensorEntity Rx6 => new(_haContext, "sensor.rx_6");
		///<summary>Whirlpool RX</summary>
		public NumericSensorEntity Rx7 => new(_haContext, "sensor.rx_7");
		///<summary>Front Entry Lights RX</summary>
		public NumericSensorEntity Rx8 => new(_haContext, "sensor.rx_8");
		///<summary>Second Garage Door RX</summary>
		public NumericSensorEntity Rx9 => new(_haContext, "sensor.rx_9");
		///<summary>Second Garage Door Last Close Time</summary>
		public NumericSensorEntity SecondGarageDoorLastCloseTime => new(_haContext, "sensor.second_garage_door_last_close_time");
		///<summary>Second Garage Door Last Open Time</summary>
		public NumericSensorEntity SecondGarageDoorLastOpenTime => new(_haContext, "sensor.second_garage_door_last_open_time");
		///<summary>Second Garage Door Uptime</summary>
		public NumericSensorEntity SecondGarageDoorUptime => new(_haContext, "sensor.second_garage_door_uptime");
		///<summary>Second Garage Door WiFi Signal</summary>
		public NumericSensorEntity SecondGarageDoorWifiSignal => new(_haContext, "sensor.second_garage_door_wifi_signal");
		///<summary>Sense RX</summary>
		public NumericSensorEntity SenseRx => new(_haContext, "sensor.sense_rx");
		///<summary>Sense TX</summary>
		public NumericSensorEntity SenseTx => new(_haContext, "sensor.sense_tx");
		///<summary>SM-G965U1 Active Notification Count</summary>
		public NumericSensorEntity SmG965u1ActiveNotificationCount => new(_haContext, "sensor.sm_g965u1_active_notification_count");
		///<summary>SM-G965U1 App Memory</summary>
		public NumericSensorEntity SmG965u1AppMemory => new(_haContext, "sensor.sm_g965u1_app_memory");
		///<summary>SM-G965U1 App Rx GB</summary>
		public NumericSensorEntity SmG965u1AppRxGb => new(_haContext, "sensor.sm_g965u1_app_rx_gb");
		///<summary>SM-G965U1 App Tx GB</summary>
		public NumericSensorEntity SmG965u1AppTxGb => new(_haContext, "sensor.sm_g965u1_app_tx_gb");
		///<summary>SM-G965U1 External Storage</summary>
		public NumericSensorEntity SmG965u1ExternalStorage => new(_haContext, "sensor.sm_g965u1_external_storage");
		///<summary>SM-G965U1 Mobile Rx GB</summary>
		public NumericSensorEntity SmG965u1MobileRxGb => new(_haContext, "sensor.sm_g965u1_mobile_rx_gb");
		///<summary>SM-G965U1 Mobile Tx GB</summary>
		public NumericSensorEntity SmG965u1MobileTxGb => new(_haContext, "sensor.sm_g965u1_mobile_tx_gb");
		///<summary>SM-G965U1 Sleep Confidence</summary>
		public NumericSensorEntity SmG965u1SleepConfidence => new(_haContext, "sensor.sm_g965u1_sleep_confidence");
		///<summary>SM-G965U1 Sleep Segment</summary>
		public NumericSensorEntity SmG965u1SleepSegment => new(_haContext, "sensor.sm_g965u1_sleep_segment");
		///<summary>SM-G965U1 Steps Sensor</summary>
		public NumericSensorEntity SmG965u1StepsSensor => new(_haContext, "sensor.sm_g965u1_steps_sensor");
		///<summary>SM-G965U1 Total Rx GB</summary>
		public NumericSensorEntity SmG965u1TotalRxGb => new(_haContext, "sensor.sm_g965u1_total_rx_gb");
		///<summary>SM-G965U1 Total Tx GB</summary>
		public NumericSensorEntity SmG965u1TotalTxGb => new(_haContext, "sensor.sm_g965u1_total_tx_gb");
		///<summary>SM-G965U1 WiFi Frequency</summary>
		public NumericSensorEntity SmG965u1WifiFrequency => new(_haContext, "sensor.sm_g965u1_wifi_frequency");
		///<summary>SM-G965U1 WiFi Link Speed</summary>
		public NumericSensorEntity SmG965u1WifiLinkSpeed => new(_haContext, "sensor.sm_g965u1_wifi_link_speed");
		///<summary>SM-G965U1 WiFi Signal Strength</summary>
		public NumericSensorEntity SmG965u1WifiSignalStrength => new(_haContext, "sensor.sm_g965u1_wifi_signal_strength");
		///<summary>SmartThings Hub RX</summary>
		public NumericSensorEntity SmartthingsHubRx => new(_haContext, "sensor.smartthings_hub_rx");
		///<summary>SmartThings Hub TX</summary>
		public NumericSensorEntity SmartthingsHubTx => new(_haContext, "sensor.smartthings_hub_tx");
		///<summary>SpeedTest Download</summary>
		public NumericSensorEntity SpeedtestDownload => new(_haContext, "sensor.speedtest_download");
		///<summary>SpeedTest Ping</summary>
		public NumericSensorEntity SpeedtestPing => new(_haContext, "sensor.speedtest_ping");
		///<summary>SpeedTest Upload</summary>
		public NumericSensorEntity SpeedtestUpload => new(_haContext, "sensor.speedtest_upload");
		///<summary>Sump Pump</summary>
		public NumericSensorEntity SumpPump => new(_haContext, "sensor.sump_pump");
		///<summary>Sump Pump Current</summary>
		public NumericSensorEntity SumpPumpCurrent => new(_haContext, "sensor.sump_pump_current");
		///<summary>Sump Pump Power</summary>
		public NumericSensorEntity SumpPumpPower => new(_haContext, "sensor.sump_pump_power");
		///<summary>Sump Pump Smart Plug RX</summary>
		public NumericSensorEntity SumpPumpSmartPlugRx => new(_haContext, "sensor.sump_pump_smart_plug_rx");
		///<summary>Sump Pump Smart Plug TX</summary>
		public NumericSensorEntity SumpPumpSmartPlugTx => new(_haContext, "sensor.sump_pump_smart_plug_tx");
		///<summary>Sump Pump Uptime</summary>
		public NumericSensorEntity SumpPumpUptime => new(_haContext, "sensor.sump_pump_uptime");
		///<summary>Sump Pump Usage</summary>
		public NumericSensorEntity SumpPumpUsage => new(_haContext, "sensor.sump_pump_usage");
		///<summary>Sump Pump WiFi Signal</summary>
		public NumericSensorEntity SumpPumpWifiSignal => new(_haContext, "sensor.sump_pump_wifi_signal");
		///<summary>Thermostat RX</summary>
		public NumericSensorEntity ThermostatRx => new(_haContext, "sensor.thermostat_rx");
		///<summary>Thermostat TX</summary>
		public NumericSensorEntity ThermostatTx => new(_haContext, "sensor.thermostat_tx");
		///<summary>Thermostat WiFi Signal</summary>
		public NumericSensorEntity ThermostatWifiSignal => new(_haContext, "sensor.thermostat_wifi_signal");
		///<summary>To Chris' Office</summary>
		public NumericSensorEntity ToChrisOffice => new(_haContext, "sensor.to_chris_office");
		///<summary>Master Bath Lights TX</summary>
		public NumericSensorEntity Tx => new(_haContext, "sensor.tx");
		///<summary> TX</summary>
		public NumericSensorEntity Tx10 => new(_haContext, "sensor.tx_10");
		///<summary>Garage Fridge TX</summary>
		public NumericSensorEntity Tx11 => new(_haContext, "sensor.tx_11");
		///<summary>Family Room Light TX</summary>
		public NumericSensorEntity Tx12 => new(_haContext, "sensor.tx_12");
		///<summary>Living Room Lights TX</summary>
		public NumericSensorEntity Tx13 => new(_haContext, "sensor.tx_13");
		///<summary>Front Entry Lights 2 TX</summary>
		public NumericSensorEntity Tx14 => new(_haContext, "sensor.tx_14");
		///<summary>Computer Light TX</summary>
		public NumericSensorEntity Tx15 => new(_haContext, "sensor.tx_15");
		///<summary>Fire Pit and Fountain TX</summary>
		public NumericSensorEntity Tx16 => new(_haContext, "sensor.tx_16");
		///<summary>Master Bath Lights 2 TX</summary>
		public NumericSensorEntity Tx17 => new(_haContext, "sensor.tx_17");
		///<summary>Family Room TV Smart Plug TX</summary>
		public NumericSensorEntity Tx18 => new(_haContext, "sensor.tx_18");
		///<summary>Dining Room Light TX</summary>
		public NumericSensorEntity Tx19 => new(_haContext, "sensor.tx_19");
		///<summary>Pool Camera TX</summary>
		public NumericSensorEntity Tx2 => new(_haContext, "sensor.tx_2");
		///<summary>Basement Stairs Lights TX</summary>
		public NumericSensorEntity Tx20 => new(_haContext, "sensor.tx_20");
		///<summary>Office Lights TX</summary>
		public NumericSensorEntity Tx21 => new(_haContext, "sensor.tx_21");
		///<summary>Garage Lights TX</summary>
		public NumericSensorEntity Tx22 => new(_haContext, "sensor.tx_22");
		///<summary>NuttyNAS TX</summary>
		public NumericSensorEntity Tx23 => new(_haContext, "sensor.tx_23");
		///<summary>VacuumRobot TX</summary>
		public NumericSensorEntity Tx24 => new(_haContext, "sensor.tx_24");
		///<summary>Front Lights TX</summary>
		public NumericSensorEntity Tx25 => new(_haContext, "sensor.tx_25");
		///<summary> TX</summary>
		public NumericSensorEntity Tx26 => new(_haContext, "sensor.tx_26");
		///<summary>Pool Pumps TX</summary>
		public NumericSensorEntity Tx27 => new(_haContext, "sensor.tx_27");
		///<summary>Kitchen Bar Lights TX</summary>
		public NumericSensorEntity Tx28 => new(_haContext, "sensor.tx_28");
		///<summary>Gate Camera TX</summary>
		public NumericSensorEntity Tx29 => new(_haContext, "sensor.tx_29");
		///<summary>Kitchen Table Light TX</summary>
		public NumericSensorEntity Tx3 => new(_haContext, "sensor.tx_3");
		///<summary>Pool and Patio Lights TX</summary>
		public NumericSensorEntity Tx30 => new(_haContext, "sensor.tx_30");
		///<summary>DS1821+ (eth4) TX</summary>
		public NumericSensorEntity Tx31 => new(_haContext, "sensor.tx_31");
		///<summary>DS1821+ (eth1) TX</summary>
		public NumericSensorEntity Tx32 => new(_haContext, "sensor.tx_32");
		///<summary>Master Bed Sensor TX</summary>
		public NumericSensorEntity Tx33 => new(_haContext, "sensor.tx_33");
		///<summary>Xbox One TX</summary>
		public NumericSensorEntity Tx34 => new(_haContext, "sensor.tx_34");
		///<summary> TX</summary>
		public NumericSensorEntity Tx35 => new(_haContext, "sensor.tx_35");
		///<summary> TX</summary>
		public NumericSensorEntity Tx36 => new(_haContext, "sensor.tx_36");
		///<summary> TX</summary>
		public NumericSensorEntity Tx37 => new(_haContext, "sensor.tx_37");
		///<summary> TX</summary>
		public NumericSensorEntity Tx38 => new(_haContext, "sensor.tx_38");
		///<summary> TX</summary>
		public NumericSensorEntity Tx39 => new(_haContext, "sensor.tx_39");
		///<summary>Basement Stairs Lights 2 TX</summary>
		public NumericSensorEntity Tx4 => new(_haContext, "sensor.tx_4");
		///<summary> TX</summary>
		public NumericSensorEntity Tx40 => new(_haContext, "sensor.tx_40");
		///<summary>v350u TX</summary>
		public NumericSensorEntity Tx41 => new(_haContext, "sensor.tx_41");
		///<summary> TX</summary>
		public NumericSensorEntity Tx42 => new(_haContext, "sensor.tx_42");
		///<summary> TX</summary>
		public NumericSensorEntity Tx43 => new(_haContext, "sensor.tx_43");
		///<summary> TX</summary>
		public NumericSensorEntity Tx44 => new(_haContext, "sensor.tx_44");
		///<summary>Master Bath Fan TX</summary>
		public NumericSensorEntity Tx5 => new(_haContext, "sensor.tx_5");
		///<summary>Patio Lights TX</summary>
		public NumericSensorEntity Tx6 => new(_haContext, "sensor.tx_6");
		///<summary>Whirlpool TX</summary>
		public NumericSensorEntity Tx7 => new(_haContext, "sensor.tx_7");
		///<summary>Front Entry Lights TX</summary>
		public NumericSensorEntity Tx8 => new(_haContext, "sensor.tx_8");
		///<summary>Second Garage Door TX</summary>
		public NumericSensorEntity Tx9 => new(_haContext, "sensor.tx_9");
		///<summary>Ups Battery Charge</summary>
		public NumericSensorEntity UpsBatteryCharge => new(_haContext, "sensor.ups_battery_charge");
		///<summary>Ups Battery Runtime</summary>
		public NumericSensorEntity UpsBatteryRuntime => new(_haContext, "sensor.ups_battery_runtime");
		///<summary>Ups Battery Voltage</summary>
		public NumericSensorEntity UpsBatteryVoltage => new(_haContext, "sensor.ups_battery_voltage");
		///<summary>Ups Input Voltage</summary>
		public NumericSensorEntity UpsInputVoltage => new(_haContext, "sensor.ups_input_voltage");
		///<summary>Ups Load</summary>
		public NumericSensorEntity UpsLoad => new(_haContext, "sensor.ups_load");
		///<summary>Ups Nominal Battery Voltage</summary>
		public NumericSensorEntity UpsNominalBatteryVoltage => new(_haContext, "sensor.ups_nominal_battery_voltage");
		///<summary>Ups Battery Runtime in Minutes</summary>
		public NumericSensorEntity UpsRuntimeMinutes => new(_haContext, "sensor.ups_runtime_minutes");
		///<summary>Upstairs Bathroom Average Humidity</summary>
		public NumericSensorEntity UpstairsBathroomAverageHumidity => new(_haContext, "sensor.upstairs_bathroom_average_humidity");
		///<summary>Upstairs Bathroom Humidity</summary>
		public NumericSensorEntity UpstairsBathroomHumidity => new(_haContext, "sensor.upstairs_bathroom_humidity");
		///<summary>Upstairs Bathroom Luminance</summary>
		public NumericSensorEntity UpstairsBathroomLuminance => new(_haContext, "sensor.upstairs_bathroom_luminance");
		///<summary>Upstairs Bathroom Minimum Luminance</summary>
		public NumericSensorEntity UpstairsBathroomMinimumLuminance => new(_haContext, "sensor.upstairs_bathroom_minimum_luminance");
		///<summary>Upstairs Bathroom Sensor Battery</summary>
		public NumericSensorEntity UpstairsBathroomSensorBatteryLevel => new(_haContext, "sensor.upstairs_bathroom_sensor_battery_level");
		///<summary>Upstairs Bathroom Temperature</summary>
		public NumericSensorEntity UpstairsBathroomTemperature => new(_haContext, "sensor.upstairs_bathroom_temperature");
		///<summary>Upstairs Nest Protect RX</summary>
		public NumericSensorEntity UpstairsNestProtectRx => new(_haContext, "sensor.upstairs_nest_protect_rx");
		///<summary>Upstairs Nest Protect TX</summary>
		public NumericSensorEntity UpstairsNestProtectTx => new(_haContext, "sensor.upstairs_nest_protect_tx");
		///<summary>v350u RX</summary>
		public NumericSensorEntity V350uRx => new(_haContext, "sensor.v350u_rx");
		///<summary>v350u TX</summary>
		public NumericSensorEntity V350uTx => new(_haContext, "sensor.v350u_tx");
		///<summary>Vacuum 3 Usage</summary>
		public NumericSensorEntity Vacuum3Usage => new(_haContext, "sensor.vacuum_3_usage");
		///<summary>Vacuum 4 Usage</summary>
		public NumericSensorEntity Vacuum4Usage => new(_haContext, "sensor.vacuum_4_usage");
		///<summary>Washer Usage</summary>
		public NumericSensorEntity WasherUsage => new(_haContext, "sensor.washer_usage");
		///<summary>Washing Machine</summary>
		public NumericSensorEntity WashingMachine => new(_haContext, "sensor.washing_machine");
		///<summary>Washing Machine Current</summary>
		public NumericSensorEntity WashingMachineCurrent => new(_haContext, "sensor.washing_machine_current");
		///<summary>Washing Machine Power</summary>
		public NumericSensorEntity WashingMachinePower => new(_haContext, "sensor.washing_machine_power");
		///<summary>Washing Machine Smart Plug RX</summary>
		public NumericSensorEntity WashingMachineSmartPlugRx => new(_haContext, "sensor.washing_machine_smart_plug_rx");
		///<summary>Washing Machine Smart Plug TX</summary>
		public NumericSensorEntity WashingMachineSmartPlugTx => new(_haContext, "sensor.washing_machine_smart_plug_tx");
		///<summary>Washing Machine Uptime</summary>
		public NumericSensorEntity WashingMachineUptime => new(_haContext, "sensor.washing_machine_uptime");
		///<summary>Washing Machine Usage</summary>
		public NumericSensorEntity WashingMachineUsage => new(_haContext, "sensor.washing_machine_usage");
		///<summary>Washing Machine WiFi Signal</summary>
		public NumericSensorEntity WashingMachineWifiSignal => new(_haContext, "sensor.washing_machine_wifi_signal");
		///<summary>Water Heater_available_hot_water</summary>
		public NumericSensorEntity WaterHeaterAvailableHotWater => new(_haContext, "sensor.water_heater_available_hot_water");
		///<summary>Water Heater_availible_hot_water</summary>
		public NumericSensorEntity WaterHeaterAvailibleHotWater => new(_haContext, "sensor.water_heater_availible_hot_water");
		///<summary>Water Heater_compressor_health</summary>
		public NumericSensorEntity WaterHeaterCompressorHealth => new(_haContext, "sensor.water_heater_compressor_health");
		///<summary>Water Heater</summary>
		public NumericSensorEntity WaterHeaterPowerUsageToday => new(_haContext, "sensor.water_heater_power_usage_today");
		///<summary>Water Heater RX</summary>
		public NumericSensorEntity WaterHeaterRx => new(_haContext, "sensor.water_heater_rx");
		///<summary>Water Heater_tank_health</summary>
		public NumericSensorEntity WaterHeaterTankHealth => new(_haContext, "sensor.water_heater_tank_health");
		///<summary>Water Heater TX</summary>
		public NumericSensorEntity WaterHeaterTx => new(_haContext, "sensor.water_heater_tx");
		///<summary>Water Heater_water_usage_today</summary>
		public NumericSensorEntity WaterHeaterWaterUsageToday => new(_haContext, "sensor.water_heater_water_usage_today");
		///<summary>Water Heater WiFi Signal</summary>
		public NumericSensorEntity WaterHeaterWifiSignal => new(_haContext, "sensor.water_heater_wifi_signal");
		///<summary>Weekly Usage</summary>
		public NumericSensorEntity WeeklyUsage => new(_haContext, "sensor.weekly_usage");
		///<summary>Whirlpool Device Temperature</summary>
		public NumericSensorEntity WhirlpoolDeviceTemperature => new(_haContext, "sensor.whirlpool_device_temperature");
		///<summary>Whirlpool</summary>
		public NumericSensorEntity WhirlpoolEnergy => new(_haContext, "sensor.whirlpool_energy");
		///<summary>Whirlpool Power</summary>
		public NumericSensorEntity WhirlpoolPower => new(_haContext, "sensor.whirlpool_power");
		///<summary>Whirlpool RSSI</summary>
		public NumericSensorEntity WhirlpoolRssi => new(_haContext, "sensor.whirlpool_rssi");
		///<summary>Yearly Usage</summary>
		public NumericSensorEntity YearlyUsage => new(_haContext, "sensor.yearly_usage");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity ZzOldSmartPlugUsage => new(_haContext, "sensor.zz_old_smart_plug_usage");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity ZzOldSmartPlugUsage2 => new(_haContext, "sensor.zz_old_smart_plug_usage_2");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity ZzOldSmartPlugUsage3 => new(_haContext, "sensor.zz_old_smart_plug_usage_3");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity ZzOldSmartPlugUsage4 => new(_haContext, "sensor.zz_old_smart_plug_usage_4");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity ZzOldSmartPlugUsage5 => new(_haContext, "sensor.zz_old_smart_plug_usage_5");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity ZzOldSmartPlugUsage6 => new(_haContext, "sensor.zz_old_smart_plug_usage_6");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity ZzOldSmartPlugUsage7 => new(_haContext, "sensor.zz_old_smart_plug_usage_7");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity ZzOldSmartPlugUsage8 => new(_haContext, "sensor.zz_old_smart_plug_usage_8");
		///<summary>ZZ OLD SMART PLUG Usage</summary>
		public NumericSensorEntity ZzOldSmartPlugUsage9 => new(_haContext, "sensor.zz_old_smart_plug_usage_9");
		///<summary>Back Light: Node Status</summary>
		public SensorEntity BackLightNodeStatus3 => new(_haContext, "sensor.back_light_node_status_3");
		///<summary>Bar Light: Node Status</summary>
		public SensorEntity BarLightNodeStatus2 => new(_haContext, "sensor.bar_light_node_status_2");
		///<summary>Basement Alert Count</summary>
		public SensorEntity BasementAlertCount => new(_haContext, "sensor.basement_alert_count");
		///<summary>Basement Bathroom Echo next Alarm</summary>
		public SensorEntity BasementBathroomEchoNextAlarm => new(_haContext, "sensor.basement_bathroom_echo_next_alarm");
		///<summary>Basement Bathroom Echo next Reminder</summary>
		public SensorEntity BasementBathroomEchoNextReminder => new(_haContext, "sensor.basement_bathroom_echo_next_reminder");
		///<summary>Basement Bathroom Echo next Timer</summary>
		public SensorEntity BasementBathroomEchoNextTimer => new(_haContext, "sensor.basement_bathroom_echo_next_timer");
		///<summary>Basement Bathroom Light and Fan IP Address</summary>
		public SensorEntity BasementBathroomLightAndFanIpAddress => new(_haContext, "sensor.basement_bathroom_light_and_fan_ip_address");
		///<summary>Basement Bathroom Light and Fan Version</summary>
		public SensorEntity BasementBathroomLightAndFanVersion => new(_haContext, "sensor.basement_bathroom_light_and_fan_version");
		///<summary>Basement Bathroom Sensor IP Address</summary>
		public SensorEntity BasementBathroomSensorIpAddress => new(_haContext, "sensor.basement_bathroom_sensor_ip_address");
		///<summary>Basement Bathroom Sensor Version</summary>
		public SensorEntity BasementBathroomSensorVersion => new(_haContext, "sensor.basement_bathroom_sensor_version");
		///<summary>Basement Bathroom Shower Light and Heater IP Address</summary>
		public SensorEntity BasementBathroomShowerLightAndHeaterIpAddress => new(_haContext, "sensor.basement_bathroom_shower_light_and_heater_ip_address");
		///<summary>Basement Bathroom Shower Light and Heater Version</summary>
		public SensorEntity BasementBathroomShowerLightAndHeaterVersion => new(_haContext, "sensor.basement_bathroom_shower_light_and_heater_version");
		///<summary>Basement Echo next Alarm</summary>
		public SensorEntity BasementEchoNextAlarm => new(_haContext, "sensor.basement_echo_next_alarm");
		///<summary>Basement Echo next Reminder</summary>
		public SensorEntity BasementEchoNextReminder => new(_haContext, "sensor.basement_echo_next_reminder");
		///<summary>Basement Echo next Timer</summary>
		public SensorEntity BasementEchoNextTimer => new(_haContext, "sensor.basement_echo_next_timer");
		///<summary>Basement Fire TV next Alarm</summary>
		public SensorEntity BasementFireTvNextAlarm => new(_haContext, "sensor.basement_fire_tv_next_alarm");
		///<summary>Basement Fire TV next Reminder</summary>
		public SensorEntity BasementFireTvNextReminder => new(_haContext, "sensor.basement_fire_tv_next_reminder");
		///<summary>Basement Fire TV next Timer</summary>
		public SensorEntity BasementFireTvNextTimer => new(_haContext, "sensor.basement_fire_tv_next_timer");
		///<summary>Basement Fridge IP Address</summary>
		public SensorEntity BasementFridgeIpAddress => new(_haContext, "sensor.basement_fridge_ip_address");
		///<summary>Basement Fridge Version</summary>
		public SensorEntity BasementFridgeVersion => new(_haContext, "sensor.basement_fridge_version");
		///<summary>Basement Lights: Node Status</summary>
		public SensorEntity BasementLightsNodeStatus => new(_haContext, "sensor.basement_lights_node_status");
		///<summary>Basement Stair Lights 2 IP Address</summary>
		public SensorEntity BasementStairLights2IpAddress => new(_haContext, "sensor.basement_stair_lights_2_ip_address");
		///<summary>Basement Stair Lights 2 Version</summary>
		public SensorEntity BasementStairLights2Version => new(_haContext, "sensor.basement_stair_lights_2_version");
		///<summary>Basement Stair Lights IP Address</summary>
		public SensorEntity BasementStairLightsIpAddress => new(_haContext, "sensor.basement_stair_lights_ip_address");
		///<summary>Basement Stair Lights Version</summary>
		public SensorEntity BasementStairLightsVersion => new(_haContext, "sensor.basement_stair_lights_version");
		///<summary>Basement TV IP Address</summary>
		public SensorEntity BasementTvIpAddress => new(_haContext, "sensor.basement_tv_ip_address");
		///<summary>Basement TV Lights: Node Status</summary>
		public SensorEntity BasementTvLightsNodeStatus2 => new(_haContext, "sensor.basement_tv_lights_node_status_2");
		///<summary>Basement TV Version</summary>
		public SensorEntity BasementTvVersion => new(_haContext, "sensor.basement_tv_version");
		///<summary>Bird Bath: Node Status</summary>
		public SensorEntity BirdBathNodeStatus => new(_haContext, "sensor.bird_bath_node_status");
		public SensorEntity Browser05099cdfAcf0a078 => new(_haContext, "sensor.browser_05099cdf_acf0a078");
		public SensorEntity Browser0af4f53c346abf41 => new(_haContext, "sensor.browser_0af4f53c_346abf41");
		public SensorEntity Browser1e9f03981fd3d3a3 => new(_haContext, "sensor.browser_1e9f0398_1fd3d3a3");
		public SensorEntity Browser1e9f039865167b95 => new(_haContext, "sensor.browser_1e9f0398_65167b95");
		public SensorEntity Browser2220f842D725ec7f => new(_haContext, "sensor.browser_2220f842_d725ec7f");
		public SensorEntity Browser2431620f021ade0a => new(_haContext, "sensor.browser_2431620f_021ade0a");
		public SensorEntity Browser50104499441cf777 => new(_haContext, "sensor.browser_50104499_441cf777");
		public SensorEntity Browser5401738cE708562d => new(_haContext, "sensor.browser_5401738c_e708562d");
		public SensorEntity Browser5735537b88639214 => new(_haContext, "sensor.browser_5735537b_88639214");
		public SensorEntity Browser700407555e760f23 => new(_haContext, "sensor.browser_70040755_5e760f23");
		public SensorEntity Browser847e14670c0b0054 => new(_haContext, "sensor.browser_847e1467_0c0b0054");
		public SensorEntity Browser872beea142ecd4e4 => new(_haContext, "sensor.browser_872beea1_42ecd4e4");
		public SensorEntity Browser89202ac9F783f676 => new(_haContext, "sensor.browser_89202ac9_f783f676");
		public SensorEntity Browser8f6598ac878a6eef => new(_haContext, "sensor.browser_8f6598ac_878a6eef");
		public SensorEntity Browser924ecf7eCe81f2dd => new(_haContext, "sensor.browser_924ecf7e_ce81f2dd");
		public SensorEntity BrowserA66d1949Ef5df9d8 => new(_haContext, "sensor.browser_a66d1949_ef5df9d8");
		public SensorEntity BrowserA9d49a81E5c0a795 => new(_haContext, "sensor.browser_a9d49a81_e5c0a795");
		public SensorEntity BrowserBc73bd275f074836 => new(_haContext, "sensor.browser_bc73bd27_5f074836");
		public SensorEntity BrowserBcb440e17c4bb54d => new(_haContext, "sensor.browser_bcb440e1_7c4bb54d");
		public SensorEntity BrowserC21dc6808ca704c1 => new(_haContext, "sensor.browser_c21dc680_8ca704c1");
		public SensorEntity BrowserD6825c1dC26af1c4 => new(_haContext, "sensor.browser_d6825c1d_c26af1c4");
		public SensorEntity BrowserDab8d308Db5f3697 => new(_haContext, "sensor.browser_dab8d308_db5f3697");
		public SensorEntity BrowserE00a1d720251a39f => new(_haContext, "sensor.browser_e00a1d72_0251a39f");
		public SensorEntity BrowserE06ded894138e7af => new(_haContext, "sensor.browser_e06ded89_4138e7af");
		public SensorEntity BrowserE95eea912411007a => new(_haContext, "sensor.browser_e95eea91_2411007a");
		public SensorEntity BrowserF5bf6e71De5fd3ec => new(_haContext, "sensor.browser_f5bf6e71_de5fd3ec");
		public SensorEntity BrowserF8b3d7a1E09f5d18 => new(_haContext, "sensor.browser_f8b3d7a1_e09f5d18");
		public SensorEntity BrowserFfe73d5fC6e4b921 => new(_haContext, "sensor.browser_ffe73d5f_c6e4b921");
		///<summary>cbpowell/ESPSense Latest Commit</summary>
		public SensorEntity CbpowellEspsenseLatestCommit => new(_haContext, "sensor.cbpowell_espsense_latest_commit");
		///<summary>cbpowell/ESPSense Latest Discussion</summary>
		public SensorEntity CbpowellEspsenseLatestDiscussion => new(_haContext, "sensor.cbpowell_espsense_latest_discussion");
		///<summary>cbpowell/ESPSense Latest Issue</summary>
		public SensorEntity CbpowellEspsenseLatestIssue => new(_haContext, "sensor.cbpowell_espsense_latest_issue");
		///<summary>cbpowell/ESPSense Latest Pull Request</summary>
		public SensorEntity CbpowellEspsenseLatestPullRequest => new(_haContext, "sensor.cbpowell_espsense_latest_pull_request");
		///<summary>cbpowell/ESPSense Latest Release</summary>
		public SensorEntity CbpowellEspsenseLatestRelease => new(_haContext, "sensor.cbpowell_espsense_latest_release");
		///<summary>cbpowell/ESPSense Latest Tag</summary>
		public SensorEntity CbpowellEspsenseLatestTag => new(_haContext, "sensor.cbpowell_espsense_latest_tag");
		///<summary>Chris Bed Sensor</summary>
		public SensorEntity ChrisBedSensor => new(_haContext, "sensor.chris_bed_sensor");
		///<summary>Chris Status</summary>
		public SensorEntity ChrisStatus => new(_haContext, "sensor.chris_status");
		///<summary>Garage Echo next Alarm</summary>
		public SensorEntity ChristopherS6thEchoDotNextAlarm => new(_haContext, "sensor.christopher_s_6th_echo_dot_next_alarm");
		///<summary>Garage Echo next Reminder</summary>
		public SensorEntity ChristopherS6thEchoDotNextReminder => new(_haContext, "sensor.christopher_s_6th_echo_dot_next_reminder");
		///<summary>Garage Echo next Timer</summary>
		public SensorEntity ChristopherS6thEchoDotNextTimer => new(_haContext, "sensor.christopher_s_6th_echo_dot_next_timer");
		///<summary>G35 Echo next Reminder</summary>
		public SensorEntity ChristopherSEchoAutoNextReminder => new(_haContext, "sensor.christopher_s_echo_auto_next_reminder");
		///<summary>Master Bathroom Echo next Alarm</summary>
		public SensorEntity ChristopherSEchoDotNextAlarm => new(_haContext, "sensor.christopher_s_echo_dot_next_alarm");
		///<summary>Master Bathroom Echo next Reminder</summary>
		public SensorEntity ChristopherSEchoDotNextReminder => new(_haContext, "sensor.christopher_s_echo_dot_next_reminder");
		///<summary>Master Bathroom Echo next Timer</summary>
		public SensorEntity ChristopherSEchoDotNextTimer => new(_haContext, "sensor.christopher_s_echo_dot_next_timer");
		///<summary>Kitchen Echo next Alarm</summary>
		public SensorEntity ChristopherSEchoFlexNextAlarm => new(_haContext, "sensor.christopher_s_echo_flex_next_alarm");
		///<summary>Kitchen Echo next Reminder</summary>
		public SensorEntity ChristopherSEchoFlexNextReminder => new(_haContext, "sensor.christopher_s_echo_flex_next_reminder");
		///<summary>Kitchen Echo next Timer</summary>
		public SensorEntity ChristopherSEchoFlexNextTimer => new(_haContext, "sensor.christopher_s_echo_flex_next_timer");
		///<summary>Backyard next Alarm</summary>
		public SensorEntity ChristopherSEchoLinkAmpNextAlarm => new(_haContext, "sensor.christopher_s_echo_link_amp_next_alarm");
		///<summary>Backyard next Reminder</summary>
		public SensorEntity ChristopherSEchoLinkAmpNextReminder => new(_haContext, "sensor.christopher_s_echo_link_amp_next_reminder");
		///<summary>Backyard next Timer</summary>
		public SensorEntity ChristopherSEchoLinkAmpNextTimer => new(_haContext, "sensor.christopher_s_echo_link_amp_next_timer");
		///<summary>Kitchen Tablet next Alarm</summary>
		public SensorEntity ChristopherSFireNextAlarm => new(_haContext, "sensor.christopher_s_fire_next_alarm");
		///<summary>Kitchen Tablet next Reminder</summary>
		public SensorEntity ChristopherSFireNextReminder => new(_haContext, "sensor.christopher_s_fire_next_reminder");
		///<summary>Kitchen Tablet next Timer</summary>
		public SensorEntity ChristopherSFireNextTimer => new(_haContext, "sensor.christopher_s_fire_next_timer");
		///<summary>Coffee Maker IP Address</summary>
		public SensorEntity CoffeeMakerIpAddress => new(_haContext, "sensor.coffee_maker_ip_address");
		///<summary>Coffee Maker Version</summary>
		public SensorEntity CoffeeMakerVersion => new(_haContext, "sensor.coffee_maker_version");
		///<summary>Computer Light IP Address</summary>
		public SensorEntity ComputerLightIpAddress => new(_haContext, "sensor.computer_light_ip_address");
		///<summary>Computer Light Version</summary>
		public SensorEntity ComputerLightVersion => new(_haContext, "sensor.computer_light_version");
		///<summary>Current Version</summary>
		public SensorEntity CurrentVersion => new(_haContext, "sensor.current_version");
		///<summary>Date</summary>
		public SensorEntity Date => new(_haContext, "sensor.date");
		///<summary>Date & Time</summary>
		public SensorEntity DateTime => new(_haContext, "sensor.date_time");
		///<summary>Date & Time (ISO)</summary>
		public SensorEntity DateTimeIso => new(_haContext, "sensor.date_time_iso");
		///<summary>Date & Time (UTC)</summary>
		public SensorEntity DateTimeUtc => new(_haContext, "sensor.date_time_utc");
		///<summary>Day/Night</summary>
		public SensorEntity DayNight => new(_haContext, "sensor.day_night");
		///<summary>Deck Light: Node Status</summary>
		public SensorEntity DeckLightNodeStatus4 => new(_haContext, "sensor.deck_light_node_status_4");
		///<summary>Dining Room Light IP Address</summary>
		public SensorEntity DiningRoomLightIpAddress => new(_haContext, "sensor.dining_room_light_ip_address");
		///<summary>Dining Room Light Version</summary>
		public SensorEntity DiningRoomLightVersion => new(_haContext, "sensor.dining_room_light_version");
		///<summary>esphome/esphome Latest Commit</summary>
		public SensorEntity EsphomeEsphomeLatestCommit => new(_haContext, "sensor.esphome_esphome_latest_commit");
		///<summary>esphome/esphome Latest Discussion</summary>
		public SensorEntity EsphomeEsphomeLatestDiscussion => new(_haContext, "sensor.esphome_esphome_latest_discussion");
		///<summary>esphome/esphome Latest Issue</summary>
		public SensorEntity EsphomeEsphomeLatestIssue => new(_haContext, "sensor.esphome_esphome_latest_issue");
		///<summary>esphome/esphome Latest Pull Request</summary>
		public SensorEntity EsphomeEsphomeLatestPullRequest => new(_haContext, "sensor.esphome_esphome_latest_pull_request");
		///<summary>esphome/esphome Latest Release</summary>
		public SensorEntity EsphomeEsphomeLatestRelease => new(_haContext, "sensor.esphome_esphome_latest_release");
		///<summary>esphome/esphome Latest Tag</summary>
		public SensorEntity EsphomeEsphomeLatestTag => new(_haContext, "sensor.esphome_esphome_latest_tag");
		///<summary>Family Room Light IP Address</summary>
		public SensorEntity FamilyRoomLightIpAddress => new(_haContext, "sensor.family_room_light_ip_address");
		///<summary>Family Room Light Version</summary>
		public SensorEntity FamilyRoomLightVersion => new(_haContext, "sensor.family_room_light_version");
		///<summary>Family Room TV IP Address</summary>
		public SensorEntity FamilyRoomTvIpAddress => new(_haContext, "sensor.family_room_tv_ip_address");
		///<summary>Family Room Fire TV next Alarm</summary>
		public SensorEntity FamilyRoomTvNextAlarm => new(_haContext, "sensor.family_room_tv_next_alarm");
		///<summary>Family Room Fire TV next Reminder</summary>
		public SensorEntity FamilyRoomTvNextReminder => new(_haContext, "sensor.family_room_tv_next_reminder");
		///<summary>Family Room Fire TV next Timer</summary>
		public SensorEntity FamilyRoomTvNextTimer => new(_haContext, "sensor.family_room_tv_next_timer");
		///<summary>Family Room TV Version</summary>
		public SensorEntity FamilyRoomTvVersion => new(_haContext, "sensor.family_room_tv_version");
		///<summary>Fire Pit and Fountain IP Address</summary>
		public SensorEntity FirePitAndFountainIpAddress => new(_haContext, "sensor.fire_pit_and_fountain_ip_address");
		///<summary>Fire Pit and Fountain Version</summary>
		public SensorEntity FirePitAndFountainVersion => new(_haContext, "sensor.fire_pit_and_fountain_version");
		///<summary>Front Door Last Activity</summary>
		public SensorEntity FrontDoorLastActivity => new(_haContext, "sensor.front_door_last_activity");
		///<summary>Front Door Last Ding</summary>
		public SensorEntity FrontDoorLastDing => new(_haContext, "sensor.front_door_last_ding");
		///<summary>Front Door Last Motion</summary>
		public SensorEntity FrontDoorLastMotion => new(_haContext, "sensor.front_door_last_motion");
		///<summary>Front Door Volume</summary>
		public SensorEntity FrontDoorVolume => new(_haContext, "sensor.front_door_volume");
		///<summary>Front Entry Lights 2 IP Address</summary>
		public SensorEntity FrontEntryLights2IpAddress => new(_haContext, "sensor.front_entry_lights_2_ip_address");
		///<summary>Front Entry Lights 2 Version</summary>
		public SensorEntity FrontEntryLights2Version => new(_haContext, "sensor.front_entry_lights_2_version");
		///<summary>Front Entry Lights IP Address</summary>
		public SensorEntity FrontEntryLightsIpAddress => new(_haContext, "sensor.front_entry_lights_ip_address");
		///<summary>Front Entry Lights Version</summary>
		public SensorEntity FrontEntryLightsVersion => new(_haContext, "sensor.front_entry_lights_version");
		///<summary>Front Lights IP Address</summary>
		public SensorEntity FrontLightsIpAddress => new(_haContext, "sensor.front_lights_ip_address");
		///<summary>Front Lights Version</summary>
		public SensorEntity FrontLightsVersion => new(_haContext, "sensor.front_lights_version");
		///<summary>Garage Fridge IP Address</summary>
		public SensorEntity GarageFridgeIpAddress => new(_haContext, "sensor.garage_fridge_ip_address");
		///<summary>Garage Fridge Power Factor</summary>
		public SensorEntity GarageFridgePowerFactor => new(_haContext, "sensor.garage_fridge_power_factor");
		///<summary>Garage Fridge Version</summary>
		public SensorEntity GarageFridgeVersion => new(_haContext, "sensor.garage_fridge_version");
		///<summary>Garage Lights IP Address</summary>
		public SensorEntity GarageLightsIpAddress => new(_haContext, "sensor.garage_lights_ip_address");
		///<summary>Garage Lights Version</summary>
		public SensorEntity GarageLightsVersion => new(_haContext, "sensor.garage_lights_version");
		///<summary>Garbage Names</summary>
		public SensorEntity GarbageNames => new(_haContext, "sensor.garbage_names");
		///<summary>Guest Bedroom Fire TV next Alarm</summary>
		public SensorEntity GuestBedroomFireTvNextAlarm => new(_haContext, "sensor.guest_bedroom_fire_tv_next_alarm");
		///<summary>Guest Bedroom Fire TV next Reminder</summary>
		public SensorEntity GuestBedroomFireTvNextReminder => new(_haContext, "sensor.guest_bedroom_fire_tv_next_reminder");
		///<summary>Guest Bedroom Fire TV next Timer</summary>
		public SensorEntity GuestBedroomFireTvNextTimer => new(_haContext, "sensor.guest_bedroom_fire_tv_next_timer");
		///<summary>Guest Bedroom Light: Node Status</summary>
		public SensorEntity GuestBedroomLightNodeStatus => new(_haContext, "sensor.guest_bedroom_light_node_status");
		///<summary>home-assistant/core Latest Commit</summary>
		public SensorEntity HomeAssistantCoreLatestCommit => new(_haContext, "sensor.home_assistant_core_latest_commit");
		///<summary>home-assistant/core Latest Discussion</summary>
		public SensorEntity HomeAssistantCoreLatestDiscussion => new(_haContext, "sensor.home_assistant_core_latest_discussion");
		///<summary>home-assistant/core Latest Issue</summary>
		public SensorEntity HomeAssistantCoreLatestIssue => new(_haContext, "sensor.home_assistant_core_latest_issue");
		///<summary>home-assistant/core Latest Pull Request</summary>
		public SensorEntity HomeAssistantCoreLatestPullRequest => new(_haContext, "sensor.home_assistant_core_latest_pull_request");
		///<summary>home-assistant/core Latest Release</summary>
		public SensorEntity HomeAssistantCoreLatestRelease => new(_haContext, "sensor.home_assistant_core_latest_release");
		///<summary>home-assistant/core Latest Tag</summary>
		public SensorEntity HomeAssistantCoreLatestTag => new(_haContext, "sensor.home_assistant_core_latest_tag");
		///<summary>Upstairs Bathroom Main Light: Node Status</summary>
		public SensorEntity InWallDimmerNodeStatus => new(_haContext, "sensor.in_wall_dimmer_node_status");
		///<summary>Internet Time</summary>
		public SensorEntity InternetTime => new(_haContext, "sensor.internet_time");
		///<summary>Kitchen Bar Lights IP Address</summary>
		public SensorEntity KitchenBarLightsIpAddress => new(_haContext, "sensor.kitchen_bar_lights_ip_address");
		///<summary>Kitchen Bar Lights Version</summary>
		public SensorEntity KitchenBarLightsVersion => new(_haContext, "sensor.kitchen_bar_lights_version");
		///<summary>Kitchen Fridge IP Address</summary>
		public SensorEntity KitchenFridgeIpAddress => new(_haContext, "sensor.kitchen_fridge_ip_address");
		///<summary>Kitchen Fridge Version</summary>
		public SensorEntity KitchenFridgeVersion => new(_haContext, "sensor.kitchen_fridge_version");
		///<summary>Kitchen Table Light IP Address</summary>
		public SensorEntity KitchenTableLightIpAddress => new(_haContext, "sensor.kitchen_table_light_ip_address");
		///<summary>Kitchen Table Light Version</summary>
		public SensorEntity KitchenTableLightVersion => new(_haContext, "sensor.kitchen_table_light_version");
		///<summary>Amcrest Last Reboot</summary>
		public SensorEntity LastReboot => new(_haContext, "sensor.last_reboot");
		///<summary>Last Vehicle Tracker States</summary>
		public SensorEntity LastVehicleTrackerStates => new(_haContext, "sensor.last_vehicle_tracker_states");
		///<summary>Latest Version</summary>
		public SensorEntity LatestVersion => new(_haContext, "sensor.latest_version");
		///<summary>Living Room Lights IP Address</summary>
		public SensorEntity LivingRoomLightsIpAddress => new(_haContext, "sensor.living_room_lights_ip_address");
		///<summary>Living Room Lights Version</summary>
		public SensorEntity LivingRoomLightsVersion => new(_haContext, "sensor.living_room_lights_version");
		///<summary>Living Room next Alarm</summary>
		public SensorEntity LivingRoomNextAlarm => new(_haContext, "sensor.living_room_next_alarm");
		///<summary>Living Room next Reminder</summary>
		public SensorEntity LivingRoomNextReminder => new(_haContext, "sensor.living_room_next_reminder");
		///<summary>Living Room next Timer</summary>
		public SensorEntity LivingRoomNextTimer => new(_haContext, "sensor.living_room_next_timer");
		///<summary>Load (15m)</summary>
		public SensorEntity Load15m => new(_haContext, "sensor.load_15m");
		///<summary>Load (1m)</summary>
		public SensorEntity Load1m => new(_haContext, "sensor.load_1m");
		///<summary>Load (5m)</summary>
		public SensorEntity Load5m => new(_haContext, "sensor.load_5m");
		///<summary>Main Floor Alert Count</summary>
		public SensorEntity MainFloorAlertCount => new(_haContext, "sensor.main_floor_alert_count");
		///<summary>Main Floor Running State</summary>
		public SensorEntity MainFloorRunningState => new(_haContext, "sensor.main_floor_running_state");
		///<summary>Master Bathroom Battery</summary>
		public SensorEntity MasterBathBattery => new(_haContext, "sensor.master_bath_battery");
		///<summary>Master Bath Outlet: Node Status</summary>
		public SensorEntity MasterBathOutletNodeStatus => new(_haContext, "sensor.master_bath_outlet_node_status");
		///<summary>Main Floor Bathroom Echo next Alarm</summary>
		public SensorEntity MasterBathroomEchoNextAlarm => new(_haContext, "sensor.master_bathroom_echo_next_alarm");
		///<summary>Main Floor Bathroom Echo next Reminder</summary>
		public SensorEntity MasterBathroomEchoNextReminder => new(_haContext, "sensor.master_bathroom_echo_next_reminder");
		///<summary>Main Floor Bathroom Echo next Timer</summary>
		public SensorEntity MasterBathroomEchoNextTimer => new(_haContext, "sensor.master_bathroom_echo_next_timer");
		///<summary>Master Bathroom Fan IP Address</summary>
		public SensorEntity MasterBathroomFanIpAddress => new(_haContext, "sensor.master_bathroom_fan_ip_address");
		///<summary>Master Bathroom Fan Version</summary>
		public SensorEntity MasterBathroomFanVersion => new(_haContext, "sensor.master_bathroom_fan_version");
		///<summary>Master Bathroom Lights 2 IP Address</summary>
		public SensorEntity MasterBathroomLights2IpAddress => new(_haContext, "sensor.master_bathroom_lights_2_ip_address");
		///<summary>Master Bathroom Lights 2 Version</summary>
		public SensorEntity MasterBathroomLights2Version => new(_haContext, "sensor.master_bathroom_lights_2_version");
		///<summary>Master Bathroom Lights IP Address</summary>
		public SensorEntity MasterBathroomLightsIpAddress => new(_haContext, "sensor.master_bathroom_lights_ip_address");
		///<summary>Master Bathroom Lights Version</summary>
		public SensorEntity MasterBathroomLightsVersion => new(_haContext, "sensor.master_bathroom_lights_version");
		///<summary>Master Bed Count</summary>
		public SensorEntity MasterBedCount => new(_haContext, "sensor.master_bed_count");
		///<summary>Master Bed IP Address</summary>
		public SensorEntity MasterBedIpAddress => new(_haContext, "sensor.master_bed_ip_address");
		///<summary>Master Bed Status</summary>
		public SensorEntity MasterBedStatus => new(_haContext, "sensor.master_bed_status");
		///<summary>Master Bed Version</summary>
		public SensorEntity MasterBedVersion => new(_haContext, "sensor.master_bed_version");
		///<summary>Master Bedroom Fire TV next Alarm</summary>
		public SensorEntity MasterBedroomFireTvNextAlarm => new(_haContext, "sensor.master_bedroom_fire_tv_next_alarm");
		///<summary>Master Bedroom Fire TV next Reminder</summary>
		public SensorEntity MasterBedroomFireTvNextReminder => new(_haContext, "sensor.master_bedroom_fire_tv_next_reminder");
		///<summary>Master Bedroom Fire TV next Timer</summary>
		public SensorEntity MasterBedroomFireTvNextTimer => new(_haContext, "sensor.master_bedroom_fire_tv_next_timer");
		///<summary>Master Count</summary>
		public SensorEntity MasterCount => new(_haContext, "sensor.master_count");
		///<summary>Mayson's Echo next Alarm</summary>
		public SensorEntity MaysonSEchoNextAlarm => new(_haContext, "sensor.mayson_s_echo_next_alarm");
		///<summary>Mayson's Echo next Reminder</summary>
		public SensorEntity MaysonSEchoNextReminder => new(_haContext, "sensor.mayson_s_echo_next_reminder");
		///<summary>Mayson's Echo next Timer</summary>
		public SensorEntity MaysonSEchoNextTimer => new(_haContext, "sensor.mayson_s_echo_next_timer");
		///<summary>Mayson's V350U App Importance</summary>
		public SensorEntity MaysonSV350uAppImportance => new(_haContext, "sensor.mayson_s_v350u_app_importance");
		///<summary>Mayson's V350U App Standby Bucket</summary>
		public SensorEntity MaysonSV350uAppStandbyBucket => new(_haContext, "sensor.mayson_s_v350u_app_standby_bucket");
		///<summary>Mayson's V350U Audio Mode</summary>
		public SensorEntity MaysonSV350uAudioMode => new(_haContext, "sensor.mayson_s_v350u_audio_mode");
		///<summary>Mayson's V350U Battery Health</summary>
		public SensorEntity MaysonSV350uBatteryHealth => new(_haContext, "sensor.mayson_s_v350u_battery_health");
		///<summary>Mayson's V350U Battery State</summary>
		public SensorEntity MaysonSV350uBatteryState => new(_haContext, "sensor.mayson_s_v350u_battery_state");
		///<summary>Mayson's V350U Charger Type</summary>
		public SensorEntity MaysonSV350uChargerType => new(_haContext, "sensor.mayson_s_v350u_charger_type");
		///<summary>Mayson's V350U Current Time Zone</summary>
		public SensorEntity MaysonSV350uCurrentTimeZone => new(_haContext, "sensor.mayson_s_v350u_current_time_zone");
		///<summary>Mayson's V350U Current Version</summary>
		public SensorEntity MaysonSV350uCurrentVersion => new(_haContext, "sensor.mayson_s_v350u_current_version");
		///<summary>Mayson's V350U Detected Activity</summary>
		public SensorEntity MaysonSV350uDetectedActivity => new(_haContext, "sensor.mayson_s_v350u_detected_activity");
		///<summary>Mayson's V350U Do Not Disturb Sensor</summary>
		public SensorEntity MaysonSV350uDoNotDisturbSensor => new(_haContext, "sensor.mayson_s_v350u_do_not_disturb_sensor");
		///<summary>Mayson's V350U Geocoded Location</summary>
		public SensorEntity MaysonSV350uGeocodedLocation => new(_haContext, "sensor.mayson_s_v350u_geocoded_location");
		///<summary>Mayson's V350U Last Notification</summary>
		public SensorEntity MaysonSV350uLastNotification => new(_haContext, "sensor.mayson_s_v350u_last_notification");
		///<summary>Mayson's V350U Last Reboot</summary>
		public SensorEntity MaysonSV350uLastReboot => new(_haContext, "sensor.mayson_s_v350u_last_reboot");
		///<summary>Mayson's V350U Last Removed Notification</summary>
		public SensorEntity MaysonSV350uLastRemovedNotification => new(_haContext, "sensor.mayson_s_v350u_last_removed_notification");
		///<summary>Mayson's V350U Last Update Trigger</summary>
		public SensorEntity MaysonSV350uLastUpdateTrigger => new(_haContext, "sensor.mayson_s_v350u_last_update_trigger");
		///<summary>Mayson's V350U Media Session</summary>
		public SensorEntity MaysonSV350uMediaSession => new(_haContext, "sensor.mayson_s_v350u_media_session");
		///<summary>Mayson's V350U Next Alarm</summary>
		public SensorEntity MaysonSV350uNextAlarm => new(_haContext, "sensor.mayson_s_v350u_next_alarm");
		///<summary>Mayson's V350U Phone State</summary>
		public SensorEntity MaysonSV350uPhoneState => new(_haContext, "sensor.mayson_s_v350u_phone_state");
		///<summary>Mayson's V350U Proximity Sensor</summary>
		public SensorEntity MaysonSV350uProximitySensor => new(_haContext, "sensor.mayson_s_v350u_proximity_sensor");
		///<summary>Mayson's V350U Public IP Address</summary>
		public SensorEntity MaysonSV350uPublicIpAddress => new(_haContext, "sensor.mayson_s_v350u_public_ip_address");
		///<summary>Mayson's V350U Ringer Mode</summary>
		public SensorEntity MaysonSV350uRingerMode => new(_haContext, "sensor.mayson_s_v350u_ringer_mode");
		///<summary>Mayson's V350U SIM 1</summary>
		public SensorEntity MaysonSV350uSim1 => new(_haContext, "sensor.mayson_s_v350u_sim_1");
		///<summary>Mayson's V350U SIM 2</summary>
		public SensorEntity MaysonSV350uSim2 => new(_haContext, "sensor.mayson_s_v350u_sim_2");
		///<summary>Mayson's V350U Volume Level Alarm</summary>
		public SensorEntity MaysonSV350uVolumeLevelAlarm => new(_haContext, "sensor.mayson_s_v350u_volume_level_alarm");
		///<summary>Mayson's V350U Volume Level Call</summary>
		public SensorEntity MaysonSV350uVolumeLevelCall => new(_haContext, "sensor.mayson_s_v350u_volume_level_call");
		///<summary>Mayson's V350U Volume Level Music</summary>
		public SensorEntity MaysonSV350uVolumeLevelMusic => new(_haContext, "sensor.mayson_s_v350u_volume_level_music");
		///<summary>Mayson's V350U Volume Level Ringer</summary>
		public SensorEntity MaysonSV350uVolumeLevelRinger => new(_haContext, "sensor.mayson_s_v350u_volume_level_ringer");
		///<summary>Mayson's V350U WiFi BSSID</summary>
		public SensorEntity MaysonSV350uWifiBssid => new(_haContext, "sensor.mayson_s_v350u_wifi_bssid");
		///<summary>Mayson's V350U WiFi Connection</summary>
		public SensorEntity MaysonSV350uWifiConnection => new(_haContext, "sensor.mayson_s_v350u_wifi_connection");
		///<summary>Mayson's V350U WiFi IP Address</summary>
		public SensorEntity MaysonSV350uWifiIpAddress => new(_haContext, "sensor.mayson_s_v350u_wifi_ip_address");
		///<summary>Mayson Status</summary>
		public SensorEntity MaysonStatus => new(_haContext, "sensor.mayson_status");
		///<summary>Mayson's Sensor Battery</summary>
		public SensorEntity MaysonsBattery => new(_haContext, "sensor.maysons_battery");
		///<summary>Mayson's Fan: Node Status</summary>
		public SensorEntity MaysonsFanNodeStatus => new(_haContext, "sensor.maysons_fan_node_status");
		///<summary>Mayson's Lights (Outlet): Node Status</summary>
		public SensorEntity MaysonsLightsOutletNodeStatus => new(_haContext, "sensor.maysons_lights_outlet_node_status");
		///<summary>Mayson's Lights (Switch): Node Status</summary>
		public SensorEntity MaysonsLightsSwitchNodeStatus3 => new(_haContext, "sensor.maysons_lights_switch_node_status_3");
		///<summary>Mayson's Room Motion: Node Status</summary>
		public SensorEntity MaysonsRoomMotionNodeStatus => new(_haContext, "sensor.maysons_room_motion_node_status");
		///<summary>Mayson's Tablet Battery Health</summary>
		public SensorEntity MaysonsTabletBatteryHealth => new(_haContext, "sensor.maysons_tablet_battery_health");
		///<summary>Mayson's Tablet Battery State</summary>
		public SensorEntity MaysonsTabletBatteryState => new(_haContext, "sensor.maysons_tablet_battery_state");
		///<summary>Mayson's Tablet Charger Type</summary>
		public SensorEntity MaysonsTabletChargerType => new(_haContext, "sensor.maysons_tablet_charger_type");
		///<summary>Mayson's Tablet Detected Activity</summary>
		public SensorEntity MaysonsTabletDetectedActivity => new(_haContext, "sensor.maysons_tablet_detected_activity");
		///<summary>Mayson's Tablet Geocoded Location</summary>
		public SensorEntity MaysonsTabletGeocodedLocation => new(_haContext, "sensor.maysons_tablet_geocoded_location");
		///<summary>Mayson's Tablet Last Reboot</summary>
		public SensorEntity MaysonsTabletLastReboot => new(_haContext, "sensor.maysons_tablet_last_reboot");
		///<summary>Mayson's Tablet WiFi Connection</summary>
		public SensorEntity MaysonsTabletWifiConnection => new(_haContext, "sensor.maysons_tablet_wifi_connection");
		///<summary>Melissa Bed Sensor</summary>
		public SensorEntity MelissaBedSensor => new(_haContext, "sensor.melissa_bed_sensor");
		///<summary>Phone - Melissa Battery State</summary>
		public SensorEntity MelissaGalaxyS9BatteryState => new(_haContext, "sensor.melissa_galaxy_s9_battery_state");
		///<summary>Phone - Melissa Geocoded Location</summary>
		public SensorEntity MelissaGalaxyS9GeocodedLocation => new(_haContext, "sensor.melissa_galaxy_s9_geocoded_location");
		///<summary>Phone - Melissa Wifi Connection</summary>
		public SensorEntity MelissaGalaxyS9WifiConnection => new(_haContext, "sensor.melissa_galaxy_s9_wifi_connection");
		///<summary>Melissa Status</summary>
		public SensorEntity MelissaStatus => new(_haContext, "sensor.melissa_status");
		///<summary>Network Equipment IP Address</summary>
		public SensorEntity NetworkEquipmentIpAddress => new(_haContext, "sensor.network_equipment_ip_address");
		///<summary>Network Equipment Version</summary>
		public SensorEntity NetworkEquipmentVersion => new(_haContext, "sensor.network_equipment_version");
		///<summary>NuttyNAS (Volume 2) Status</summary>
		public SensorEntity NuttynasStatus => new(_haContext, "sensor.nuttynas_status");
		///<summary>NuttyNAS (Drive 8) Status</summary>
		public SensorEntity NuttynasStatus10 => new(_haContext, "sensor.nuttynas_status_10");
		///<summary>NuttyNAS (Cache device 1) Status</summary>
		public SensorEntity NuttynasStatus11 => new(_haContext, "sensor.nuttynas_status_11");
		///<summary>NuttyNAS (Cache device 2) Status</summary>
		public SensorEntity NuttynasStatus12 => new(_haContext, "sensor.nuttynas_status_12");
		///<summary>NuttyNAS (Volume 1) Status</summary>
		public SensorEntity NuttynasStatus2 => new(_haContext, "sensor.nuttynas_status_2");
		///<summary>NuttyNAS (Drive 1) Status</summary>
		public SensorEntity NuttynasStatus3 => new(_haContext, "sensor.nuttynas_status_3");
		///<summary>NuttyNAS (Drive 2) Status</summary>
		public SensorEntity NuttynasStatus4 => new(_haContext, "sensor.nuttynas_status_4");
		///<summary>NuttyNAS (Drive 3) Status</summary>
		public SensorEntity NuttynasStatus5 => new(_haContext, "sensor.nuttynas_status_5");
		///<summary>NuttyNAS (Drive 4) Status</summary>
		public SensorEntity NuttynasStatus6 => new(_haContext, "sensor.nuttynas_status_6");
		///<summary>NuttyNAS (Drive 5) Status</summary>
		public SensorEntity NuttynasStatus7 => new(_haContext, "sensor.nuttynas_status_7");
		///<summary>NuttyNAS (Drive 6) Status</summary>
		public SensorEntity NuttynasStatus8 => new(_haContext, "sensor.nuttynas_status_8");
		///<summary>NuttyNAS (Drive 7) Status</summary>
		public SensorEntity NuttynasStatus9 => new(_haContext, "sensor.nuttynas_status_9");
		///<summary>nuttytree/ESPHome-Devices Latest Commit</summary>
		public SensorEntity NuttytreeEsphomeDevicesLatestCommit => new(_haContext, "sensor.nuttytree_esphome_devices_latest_commit");
		///<summary>nuttytree/ESPHome-Devices Latest Discussion</summary>
		public SensorEntity NuttytreeEsphomeDevicesLatestDiscussion => new(_haContext, "sensor.nuttytree_esphome_devices_latest_discussion");
		///<summary>nuttytree/ESPHome-Devices Latest Issue</summary>
		public SensorEntity NuttytreeEsphomeDevicesLatestIssue => new(_haContext, "sensor.nuttytree_esphome_devices_latest_issue");
		///<summary>nuttytree/ESPHome-Devices Latest Pull Request</summary>
		public SensorEntity NuttytreeEsphomeDevicesLatestPullRequest => new(_haContext, "sensor.nuttytree_esphome_devices_latest_pull_request");
		///<summary>nuttytree/ESPHome-Devices Latest Release</summary>
		public SensorEntity NuttytreeEsphomeDevicesLatestRelease => new(_haContext, "sensor.nuttytree_esphome_devices_latest_release");
		///<summary>nuttytree/ESPHome-Devices Latest Tag</summary>
		public SensorEntity NuttytreeEsphomeDevicesLatestTag => new(_haContext, "sensor.nuttytree_esphome_devices_latest_tag");
		///<summary>nuttytree/nuttytree-netdaemon Latest Commit</summary>
		public SensorEntity NuttytreeNuttytreeNetdaemonLatestCommit => new(_haContext, "sensor.nuttytree_nuttytree_netdaemon_latest_commit");
		///<summary>nuttytree/nuttytree-netdaemon Latest Discussion</summary>
		public SensorEntity NuttytreeNuttytreeNetdaemonLatestDiscussion => new(_haContext, "sensor.nuttytree_nuttytree_netdaemon_latest_discussion");
		///<summary>nuttytree/nuttytree-netdaemon Latest Issue</summary>
		public SensorEntity NuttytreeNuttytreeNetdaemonLatestIssue => new(_haContext, "sensor.nuttytree_nuttytree_netdaemon_latest_issue");
		///<summary>nuttytree/nuttytree-netdaemon Latest Pull Request</summary>
		public SensorEntity NuttytreeNuttytreeNetdaemonLatestPullRequest => new(_haContext, "sensor.nuttytree_nuttytree_netdaemon_latest_pull_request");
		///<summary>nuttytree/nuttytree-netdaemon Latest Release</summary>
		public SensorEntity NuttytreeNuttytreeNetdaemonLatestRelease => new(_haContext, "sensor.nuttytree_nuttytree_netdaemon_latest_release");
		///<summary>nuttytree/nuttytree-netdaemon Latest Tag</summary>
		public SensorEntity NuttytreeNuttytreeNetdaemonLatestTag => new(_haContext, "sensor.nuttytree_nuttytree_netdaemon_latest_tag");
		///<summary>Office Echo Show next Alarm</summary>
		public SensorEntity OfficeEchoShowNextAlarm => new(_haContext, "sensor.office_echo_show_next_alarm");
		///<summary>Office Echo Show next Reminder</summary>
		public SensorEntity OfficeEchoShowNextReminder => new(_haContext, "sensor.office_echo_show_next_reminder");
		///<summary>Office Echo Show next Timer</summary>
		public SensorEntity OfficeEchoShowNextTimer => new(_haContext, "sensor.office_echo_show_next_timer");
		///<summary>Office Light IP Address</summary>
		public SensorEntity OfficeLightIpAddress => new(_haContext, "sensor.office_light_ip_address");
		///<summary>Office Light Version</summary>
		public SensorEntity OfficeLightVersion => new(_haContext, "sensor.office_light_version");
		///<summary>OpenWeatherMap Condition</summary>
		public SensorEntity OpenweathermapCondition => new(_haContext, "sensor.openweathermap_condition");
		///<summary>OpenWeatherMap Forecast Condition</summary>
		public SensorEntity OpenweathermapForecastCondition => new(_haContext, "sensor.openweathermap_forecast_condition");
		///<summary>OpenWeatherMap Forecast Time</summary>
		public SensorEntity OpenweathermapForecastTime => new(_haContext, "sensor.openweathermap_forecast_time");
		///<summary>OpenWeatherMap Precipitation kind</summary>
		public SensorEntity OpenweathermapPrecipitationKind => new(_haContext, "sensor.openweathermap_precipitation_kind");
		///<summary>OpenWeatherMap Weather</summary>
		public SensorEntity OpenweathermapWeather => new(_haContext, "sensor.openweathermap_weather");
		///<summary>OpenWeatherMap Weather Code</summary>
		public SensorEntity OpenweathermapWeatherCode => new(_haContext, "sensor.openweathermap_weather_code");
		///<summary>Patio Lights IP Address</summary>
		public SensorEntity PatioLightsIpAddress => new(_haContext, "sensor.patio_lights_ip_address");
		///<summary>Patio Lights Version</summary>
		public SensorEntity PatioLightsVersion => new(_haContext, "sensor.patio_lights_version");
		///<summary>Total Person Count at Home</summary>
		public SensorEntity PersonCount => new(_haContext, "sensor.person_count");
		///<summary>Phone - Chris App Importance</summary>
		public SensorEntity PhoneChrisAppImportance => new(_haContext, "sensor.phone_chris_app_importance");
		///<summary>Phone - Chris App Standby Bucket</summary>
		public SensorEntity PhoneChrisAppStandbyBucket => new(_haContext, "sensor.phone_chris_app_standby_bucket");
		///<summary>Phone - Chris Audio Mode</summary>
		public SensorEntity PhoneChrisAudioMode => new(_haContext, "sensor.phone_chris_audio_mode");
		///<summary>Phone - Chris Battery Health</summary>
		public SensorEntity PhoneChrisBatteryHealth => new(_haContext, "sensor.phone_chris_battery_health");
		///<summary>Phone - Chris Battery State</summary>
		public SensorEntity PhoneChrisBatteryState => new(_haContext, "sensor.phone_chris_battery_state");
		///<summary>Phone - Chris Charger Type</summary>
		public SensorEntity PhoneChrisChargerType => new(_haContext, "sensor.phone_chris_charger_type");
		///<summary>Phone - Chris Current Time Zone</summary>
		public SensorEntity PhoneChrisCurrentTimeZone => new(_haContext, "sensor.phone_chris_current_time_zone");
		///<summary>Phone - Chris Current Version</summary>
		public SensorEntity PhoneChrisCurrentVersion => new(_haContext, "sensor.phone_chris_current_version");
		///<summary>Phone - Chris Detected Activity</summary>
		public SensorEntity PhoneChrisDetectedActivity => new(_haContext, "sensor.phone_chris_detected_activity");
		///<summary>Phone - Chris Do Not Disturb Sensor</summary>
		public SensorEntity PhoneChrisDoNotDisturbSensor => new(_haContext, "sensor.phone_chris_do_not_disturb_sensor");
		///<summary>Phone - Chris Geocoded Location</summary>
		public SensorEntity PhoneChrisGeocodedLocation => new(_haContext, "sensor.phone_chris_geocoded_location");
		///<summary>Phone - Chris Last Reboot</summary>
		public SensorEntity PhoneChrisLastReboot => new(_haContext, "sensor.phone_chris_last_reboot");
		///<summary>Phone - Chris Last Update Trigger</summary>
		public SensorEntity PhoneChrisLastUpdateTrigger => new(_haContext, "sensor.phone_chris_last_update_trigger");
		///<summary>Phone - Chris Last Used App</summary>
		public SensorEntity PhoneChrisLastUsedApp => new(_haContext, "sensor.phone_chris_last_used_app");
		///<summary>Phone - Chris Media Session</summary>
		public SensorEntity PhoneChrisMediaSession => new(_haContext, "sensor.phone_chris_media_session");
		///<summary>Phone - Chris Next Alarm</summary>
		public SensorEntity PhoneChrisNextAlarm => new(_haContext, "sensor.phone_chris_next_alarm");
		///<summary>Phone - Chris Phone State</summary>
		public SensorEntity PhoneChrisPhoneState => new(_haContext, "sensor.phone_chris_phone_state");
		///<summary>Phone - Chris Proximity Sensor</summary>
		public SensorEntity PhoneChrisProximitySensor => new(_haContext, "sensor.phone_chris_proximity_sensor");
		///<summary>Phone - Chris Public IP Address</summary>
		public SensorEntity PhoneChrisPublicIpAddress => new(_haContext, "sensor.phone_chris_public_ip_address");
		///<summary>Phone - Chris Ringer Mode</summary>
		public SensorEntity PhoneChrisRingerMode => new(_haContext, "sensor.phone_chris_ringer_mode");
		///<summary>Phone - Chris SIM 1</summary>
		public SensorEntity PhoneChrisSim1 => new(_haContext, "sensor.phone_chris_sim_1");
		///<summary>Phone - Chris Volume Level Alarm</summary>
		public SensorEntity PhoneChrisVolumeLevelAlarm => new(_haContext, "sensor.phone_chris_volume_level_alarm");
		///<summary>Phone - Chris Volume Level Call</summary>
		public SensorEntity PhoneChrisVolumeLevelCall => new(_haContext, "sensor.phone_chris_volume_level_call");
		///<summary>Phone - Chris Volume Level Music</summary>
		public SensorEntity PhoneChrisVolumeLevelMusic => new(_haContext, "sensor.phone_chris_volume_level_music");
		///<summary>Phone - Chris Volume Level Ringer</summary>
		public SensorEntity PhoneChrisVolumeLevelRinger => new(_haContext, "sensor.phone_chris_volume_level_ringer");
		///<summary>Phone - Chris WiFi BSSID</summary>
		public SensorEntity PhoneChrisWifiBssid => new(_haContext, "sensor.phone_chris_wifi_bssid");
		///<summary>Phone - Chris WiFi Connection</summary>
		public SensorEntity PhoneChrisWifiConnection => new(_haContext, "sensor.phone_chris_wifi_connection");
		///<summary>Phone - Chris WiFi IP Address</summary>
		public SensorEntity PhoneChrisWifiIpAddress => new(_haContext, "sensor.phone_chris_wifi_ip_address");
		///<summary>Phone - Melissa Audio Sensor</summary>
		public SensorEntity PhoneMelissaAudioSensor => new(_haContext, "sensor.phone_melissa_audio_sensor");
		///<summary>Phone - Melissa Battery Health</summary>
		public SensorEntity PhoneMelissaBatteryHealth => new(_haContext, "sensor.phone_melissa_battery_health");
		///<summary>Phone - Melissa Charger Type</summary>
		public SensorEntity PhoneMelissaChargerType => new(_haContext, "sensor.phone_melissa_charger_type");
		///<summary>Phone - Melissa Do Not Disturb Sensor</summary>
		public SensorEntity PhoneMelissaDoNotDisturbSensor => new(_haContext, "sensor.phone_melissa_do_not_disturb_sensor");
		///<summary>Phone - Melissa Last Reboot</summary>
		public SensorEntity PhoneMelissaLastReboot => new(_haContext, "sensor.phone_melissa_last_reboot");
		///<summary>Phone - Melissa Next Alarm</summary>
		public SensorEntity PhoneMelissaNextAlarm => new(_haContext, "sensor.phone_melissa_next_alarm");
		///<summary>Phone - Melissa Proximity Sensor</summary>
		public SensorEntity PhoneMelissaProximitySensor => new(_haContext, "sensor.phone_melissa_proximity_sensor");
		///<summary>Pool and Patio Lights IP Address</summary>
		public SensorEntity PoolAndPatioLightsIpAddress => new(_haContext, "sensor.pool_and_patio_lights_ip_address");
		///<summary>Pool and Patio Lights Version</summary>
		public SensorEntity PoolAndPatioLightsVersion => new(_haContext, "sensor.pool_and_patio_lights_version");
		///<summary>Pool Pumps IP Address</summary>
		public SensorEntity PoolPumpsIpAddress => new(_haContext, "sensor.pool_pumps_ip_address");
		///<summary>Pool Pumps Version</summary>
		public SensorEntity PoolPumpsVersion => new(_haContext, "sensor.pool_pumps_version");
		///<summary>Pool Table Light: Node Status</summary>
		public SensorEntity PoolTableLightNodeStatus => new(_haContext, "sensor.pool_table_light_node_status");
		///<summary>Second Garage Door IP Address</summary>
		public SensorEntity SecondGarageDoorIpAddress => new(_haContext, "sensor.second_garage_door_ip_address");
		///<summary>Second Garage Door Version</summary>
		public SensorEntity SecondGarageDoorVersion => new(_haContext, "sensor.second_garage_door_version");
		///<summary>SM-G965U1 App Importance</summary>
		public SensorEntity SmG965u1AppImportance => new(_haContext, "sensor.sm_g965u1_app_importance");
		///<summary>SM-G965U1 App Standby Bucket</summary>
		public SensorEntity SmG965u1AppStandbyBucket => new(_haContext, "sensor.sm_g965u1_app_standby_bucket");
		///<summary>SM-G965U1 Audio Mode</summary>
		public SensorEntity SmG965u1AudioMode => new(_haContext, "sensor.sm_g965u1_audio_mode");
		///<summary>SM-G965U1 Current Time Zone</summary>
		public SensorEntity SmG965u1CurrentTimeZone => new(_haContext, "sensor.sm_g965u1_current_time_zone");
		///<summary>SM-G965U1 Current Version</summary>
		public SensorEntity SmG965u1CurrentVersion => new(_haContext, "sensor.sm_g965u1_current_version");
		///<summary>SM-G965U1 Detected Activity</summary>
		public SensorEntity SmG965u1DetectedActivity => new(_haContext, "sensor.sm_g965u1_detected_activity");
		///<summary>SM-G965U1 Last Notification</summary>
		public SensorEntity SmG965u1LastNotification => new(_haContext, "sensor.sm_g965u1_last_notification");
		///<summary>SM-G965U1 Last Removed Notification</summary>
		public SensorEntity SmG965u1LastRemovedNotification => new(_haContext, "sensor.sm_g965u1_last_removed_notification");
		///<summary>SM-G965U1 Last Update Trigger</summary>
		public SensorEntity SmG965u1LastUpdateTrigger => new(_haContext, "sensor.sm_g965u1_last_update_trigger");
		///<summary>SM-G965U1 Media Session</summary>
		public SensorEntity SmG965u1MediaSession => new(_haContext, "sensor.sm_g965u1_media_session");
		///<summary>SM-G965U1 Phone State</summary>
		public SensorEntity SmG965u1PhoneState => new(_haContext, "sensor.sm_g965u1_phone_state");
		///<summary>SM-G965U1 Public IP Address</summary>
		public SensorEntity SmG965u1PublicIpAddress => new(_haContext, "sensor.sm_g965u1_public_ip_address");
		///<summary>SM-G965U1 SIM 1</summary>
		public SensorEntity SmG965u1Sim1 => new(_haContext, "sensor.sm_g965u1_sim_1");
		///<summary>SM-G965U1 SIM 2</summary>
		public SensorEntity SmG965u1Sim2 => new(_haContext, "sensor.sm_g965u1_sim_2");
		///<summary>SM-G965U1 Volume Level Alarm</summary>
		public SensorEntity SmG965u1VolumeLevelAlarm => new(_haContext, "sensor.sm_g965u1_volume_level_alarm");
		///<summary>SM-G965U1 Volume Level Call</summary>
		public SensorEntity SmG965u1VolumeLevelCall => new(_haContext, "sensor.sm_g965u1_volume_level_call");
		///<summary>SM-G965U1 Volume Level Music</summary>
		public SensorEntity SmG965u1VolumeLevelMusic => new(_haContext, "sensor.sm_g965u1_volume_level_music");
		///<summary>SM-G965U1 Volume Level Ringer</summary>
		public SensorEntity SmG965u1VolumeLevelRinger => new(_haContext, "sensor.sm_g965u1_volume_level_ringer");
		///<summary>SM-G965U1 WiFi BSSID</summary>
		public SensorEntity SmG965u1WifiBssid => new(_haContext, "sensor.sm_g965u1_wifi_bssid");
		///<summary>SM-G965U1 WiFi IP Address</summary>
		public SensorEntity SmG965u1WifiIpAddress => new(_haContext, "sensor.sm_g965u1_wifi_ip_address");
		///<summary>Sump Pump IP Address</summary>
		public SensorEntity SumpPumpIpAddress => new(_haContext, "sensor.sump_pump_ip_address");
		///<summary>Sump Pump Version</summary>
		public SensorEntity SumpPumpVersion => new(_haContext, "sensor.sump_pump_version");
		///<summary>This Device next Alarm</summary>
		public SensorEntity ThisDeviceNextAlarm => new(_haContext, "sensor.this_device_next_alarm");
		///<summary>This Device next Reminder</summary>
		public SensorEntity ThisDeviceNextReminder => new(_haContext, "sensor.this_device_next_reminder");
		///<summary>This Device next Timer</summary>
		public SensorEntity ThisDeviceNextTimer => new(_haContext, "sensor.this_device_next_timer");
		///<summary>Time</summary>
		public SensorEntity Time => new(_haContext, "sensor.time");
		///<summary>Time & Date</summary>
		public SensorEntity TimeDate => new(_haContext, "sensor.time_date");
		///<summary>Time (UTC)</summary>
		public SensorEntity TimeUtc => new(_haContext, "sensor.time_utc");
		///<summary>Trash</summary>
		public SensorEntity Trash => new(_haContext, "sensor.trash");
		///<summary>Ups Battery Date</summary>
		public SensorEntity UpsBatteryDate => new(_haContext, "sensor.ups_battery_date");
		///<summary>Ups Battery Manuf. Date</summary>
		public SensorEntity UpsBatteryManufDate => new(_haContext, "sensor.ups_battery_manuf_date");
		///<summary>Ups Beeper Status</summary>
		public SensorEntity UpsBeeperStatus => new(_haContext, "sensor.ups_beeper_status");
		///<summary>Ups Self-Test Result</summary>
		public SensorEntity UpsSelfTestResult => new(_haContext, "sensor.ups_self_test_result");
		///<summary>Ups Status</summary>
		public SensorEntity UpsStatus => new(_haContext, "sensor.ups_status");
		///<summary>Ups Status Data</summary>
		public SensorEntity UpsStatusData => new(_haContext, "sensor.ups_status_data");
		///<summary>Upstairs Alert Count</summary>
		public SensorEntity UpstairsAlertCount => new(_haContext, "sensor.upstairs_alert_count");
		///<summary>Upstairs Bathroom Battery</summary>
		public SensorEntity UpstairsBathroomBattery => new(_haContext, "sensor.upstairs_bathroom_battery");
		///<summary>Upstairs Bathroom Fan: Node Status</summary>
		public SensorEntity UpstairsBathroomFanNodeStatus2 => new(_haContext, "sensor.upstairs_bathroom_fan_node_status_2");
		///<summary>Upstairs Bathroom Sensor: Node Status</summary>
		public SensorEntity UpstairsBathroomSensorNodeStatus => new(_haContext, "sensor.upstairs_bathroom_sensor_node_status");
		///<summary>Upstairs Bathroom Vanity Light: Node Status</summary>
		public SensorEntity UpstairsBathroomVanityLightNodeStatus => new(_haContext, "sensor.upstairs_bathroom_vanity_light_node_status");
		///<summary>Washing Machine IP Address</summary>
		public SensorEntity WashingMachineIpAddress => new(_haContext, "sensor.washing_machine_ip_address");
		///<summary>Washing Machine Version</summary>
		public SensorEntity WashingMachineVersion => new(_haContext, "sensor.washing_machine_version");
		///<summary>Water Heater_alert_count</summary>
		public SensorEntity WaterHeaterAlertCount => new(_haContext, "sensor.water_heater_alert_count");
		///<summary>Water Heater_oveerride_status</summary>
		public SensorEntity WaterHeaterOveerrideStatus => new(_haContext, "sensor.water_heater_oveerride_status");
		///<summary>Water Heater_override_status</summary>
		public SensorEntity WaterHeaterOverrideStatus => new(_haContext, "sensor.water_heater_override_status");
		///<summary>Water Heater_running_state</summary>
		public SensorEntity WaterHeaterRunningState => new(_haContext, "sensor.water_heater_running_state");
	}

	public partial class SunEntities
	{
		private readonly IHaContext _haContext;
		public SunEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Sun</summary>
		public SunEntity Sun => new(_haContext, "sun.sun");
	}

	public partial class SwitchEntities
	{
		private readonly IHaContext _haContext;
		public SwitchEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Basement Bathroom Echo do not disturb switch</summary>
		public SwitchEntity BasementBathroomEchoDoNotDisturbSwitch => new(_haContext, "switch.basement_bathroom_echo_do_not_disturb_switch");
		///<summary>Basement Bathroom Echo repeat switch</summary>
		public SwitchEntity BasementBathroomEchoRepeatSwitch => new(_haContext, "switch.basement_bathroom_echo_repeat_switch");
		///<summary>Basement Bathroom Echo shuffle switch</summary>
		public SwitchEntity BasementBathroomEchoShuffleSwitch => new(_haContext, "switch.basement_bathroom_echo_shuffle_switch");
		///<summary>Basement Bathroom Heater</summary>
		public SwitchEntity BasementBathroomHeater => new(_haContext, "switch.basement_bathroom_heater");
		///<summary>Basement Echo do not disturb switch</summary>
		public SwitchEntity BasementEchoDoNotDisturbSwitch => new(_haContext, "switch.basement_echo_do_not_disturb_switch");
		///<summary>Basement Echo repeat switch</summary>
		public SwitchEntity BasementEchoRepeatSwitch => new(_haContext, "switch.basement_echo_repeat_switch");
		///<summary>Basement Echo shuffle switch</summary>
		public SwitchEntity BasementEchoShuffleSwitch => new(_haContext, "switch.basement_echo_shuffle_switch");
		///<summary>Basement Fire TV do not disturb switch</summary>
		public SwitchEntity BasementFireTvDoNotDisturbSwitch => new(_haContext, "switch.basement_fire_tv_do_not_disturb_switch");
		///<summary>Basement Fridge Power Switch</summary>
		public SwitchEntity BasementFridgePowerSwitch => new(_haContext, "switch.basement_fridge_power_switch");
		///<summary>Basement TV</summary>
		public SwitchEntity BasementTv => new(_haContext, "switch.basement_tv");
		///<summary>Basement TV Power Switch</summary>
		public SwitchEntity BasementTvPowerSwitch => new(_haContext, "switch.basement_tv_power_switch");
		///<summary>Bird Bath</summary>
		public SwitchEntity BirdBath => new(_haContext, "switch.bird_bath");
		///<summary>Garage Echo do not disturb switch</summary>
		public SwitchEntity ChristopherS6thEchoDotDoNotDisturbSwitch => new(_haContext, "switch.christopher_s_6th_echo_dot_do_not_disturb_switch");
		///<summary>Garage Echo repeat switch</summary>
		public SwitchEntity ChristopherS6thEchoDotRepeatSwitch => new(_haContext, "switch.christopher_s_6th_echo_dot_repeat_switch");
		///<summary>Garage Echo shuffle switch</summary>
		public SwitchEntity ChristopherS6thEchoDotShuffleSwitch => new(_haContext, "switch.christopher_s_6th_echo_dot_shuffle_switch");
		///<summary>G35 Echo do not disturb switch</summary>
		public SwitchEntity ChristopherSEchoAutoDoNotDisturbSwitch => new(_haContext, "switch.christopher_s_echo_auto_do_not_disturb_switch");
		///<summary>Master Bathroom Echo do not disturb switch</summary>
		public SwitchEntity ChristopherSEchoDotDoNotDisturbSwitch => new(_haContext, "switch.christopher_s_echo_dot_do_not_disturb_switch");
		///<summary>Master Bathroom Echo repeat switch</summary>
		public SwitchEntity ChristopherSEchoDotRepeatSwitch => new(_haContext, "switch.christopher_s_echo_dot_repeat_switch");
		///<summary>Master Bathroom Echo shuffle switch</summary>
		public SwitchEntity ChristopherSEchoDotShuffleSwitch => new(_haContext, "switch.christopher_s_echo_dot_shuffle_switch");
		///<summary>Kitchen Echo do not disturb switch</summary>
		public SwitchEntity ChristopherSEchoFlexDoNotDisturbSwitch => new(_haContext, "switch.christopher_s_echo_flex_do_not_disturb_switch");
		///<summary>Kitchen Echo repeat switch</summary>
		public SwitchEntity ChristopherSEchoFlexRepeatSwitch => new(_haContext, "switch.christopher_s_echo_flex_repeat_switch");
		///<summary>Kitchen Echo shuffle switch</summary>
		public SwitchEntity ChristopherSEchoFlexShuffleSwitch => new(_haContext, "switch.christopher_s_echo_flex_shuffle_switch");
		///<summary>Backyard do not disturb switch</summary>
		public SwitchEntity ChristopherSEchoLinkAmpDoNotDisturbSwitch => new(_haContext, "switch.christopher_s_echo_link_amp_do_not_disturb_switch");
		///<summary>Backyard repeat switch</summary>
		public SwitchEntity ChristopherSEchoLinkAmpRepeatSwitch => new(_haContext, "switch.christopher_s_echo_link_amp_repeat_switch");
		///<summary>Backyard shuffle switch</summary>
		public SwitchEntity ChristopherSEchoLinkAmpShuffleSwitch => new(_haContext, "switch.christopher_s_echo_link_amp_shuffle_switch");
		///<summary>Kitchen Tablet do not disturb switch</summary>
		public SwitchEntity ChristopherSFireDoNotDisturbSwitch => new(_haContext, "switch.christopher_s_fire_do_not_disturb_switch");
		///<summary>Coffee Maker</summary>
		public SwitchEntity CoffeeMaker => new(_haContext, "switch.coffee_maker");
		///<summary>Coffee Maker Bold Setting</summary>
		public SwitchEntity CoffeeMakerBoldSetting => new(_haContext, "switch.coffee_maker_bold_setting");
		///<summary>Devices - Everywhere do not disturb switch</summary>
		public SwitchEntity DevicesEverywhereDoNotDisturbSwitch => new(_haContext, "switch.devices_everywhere_do_not_disturb_switch");
		///<summary>Devices - Everywhere repeat switch</summary>
		public SwitchEntity DevicesEverywhereRepeatSwitch => new(_haContext, "switch.devices_everywhere_repeat_switch");
		///<summary>Devices - Everywhere shuffle switch</summary>
		public SwitchEntity DevicesEverywhereShuffleSwitch => new(_haContext, "switch.devices_everywhere_shuffle_switch");
		///<summary>Devices - Inside do not disturb switch</summary>
		public SwitchEntity DevicesInsideDoNotDisturbSwitch => new(_haContext, "switch.devices_inside_do_not_disturb_switch");
		///<summary>Devices - Inside repeat switch</summary>
		public SwitchEntity DevicesInsideRepeatSwitch => new(_haContext, "switch.devices_inside_repeat_switch");
		///<summary>Devices - Inside shuffle switch</summary>
		public SwitchEntity DevicesInsideShuffleSwitch => new(_haContext, "switch.devices_inside_shuffle_switch");
		///<summary>Dining room do not disturb switch</summary>
		public SwitchEntity DiningRoomDoNotDisturbSwitch => new(_haContext, "switch.dining_room_do_not_disturb_switch");
		///<summary>Dining room repeat switch</summary>
		public SwitchEntity DiningRoomRepeatSwitch => new(_haContext, "switch.dining_room_repeat_switch");
		///<summary>Dining room shuffle switch</summary>
		public SwitchEntity DiningRoomShuffleSwitch => new(_haContext, "switch.dining_room_shuffle_switch");
		///<summary>Family room do not disturb switch</summary>
		public SwitchEntity FamilyRoomDoNotDisturbSwitch => new(_haContext, "switch.family_room_do_not_disturb_switch");
		///<summary>Family room repeat switch</summary>
		public SwitchEntity FamilyRoomRepeatSwitch => new(_haContext, "switch.family_room_repeat_switch");
		///<summary>Family room shuffle switch</summary>
		public SwitchEntity FamilyRoomShuffleSwitch => new(_haContext, "switch.family_room_shuffle_switch");
		///<summary>Family Room TV</summary>
		public SwitchEntity FamilyRoomTv => new(_haContext, "switch.family_room_tv");
		///<summary>Family Room Fire TV do not disturb switch</summary>
		public SwitchEntity FamilyRoomTvDoNotDisturbSwitch => new(_haContext, "switch.family_room_tv_do_not_disturb_switch");
		///<summary>Family Room TV Power Switch</summary>
		public SwitchEntity FamilyRoomTvPowerSwitch => new(_haContext, "switch.family_room_tv_power_switch");
		///<summary>Family Room Fire TV repeat switch</summary>
		public SwitchEntity FamilyRoomTvRepeatSwitch2 => new(_haContext, "switch.family_room_tv_repeat_switch_2");
		///<summary>Family Room Fire TV shuffle switch</summary>
		public SwitchEntity FamilyRoomTvShuffleSwitch2 => new(_haContext, "switch.family_room_tv_shuffle_switch_2");
		///<summary>Fire Pit</summary>
		public SwitchEntity FirePit => new(_haContext, "switch.fire_pit");
		///<summary>Fountain</summary>
		public SwitchEntity Fountain => new(_haContext, "switch.fountain");
		///<summary>Front entry do not disturb switch</summary>
		public SwitchEntity FrontEntryDoNotDisturbSwitch => new(_haContext, "switch.front_entry_do_not_disturb_switch");
		///<summary>Front entry repeat switch</summary>
		public SwitchEntity FrontEntryRepeatSwitch => new(_haContext, "switch.front_entry_repeat_switch");
		///<summary>Front entry shuffle switch</summary>
		public SwitchEntity FrontEntryShuffleSwitch => new(_haContext, "switch.front_entry_shuffle_switch");
		///<summary>Guest Bedroom Fire TV do not disturb switch</summary>
		public SwitchEntity GuestBedroomFireTvDoNotDisturbSwitch => new(_haContext, "switch.guest_bedroom_fire_tv_do_not_disturb_switch");
		///<summary>Guest Bedroom Fire TV repeat switch</summary>
		public SwitchEntity GuestBedroomFireTvRepeatSwitch => new(_haContext, "switch.guest_bedroom_fire_tv_repeat_switch");
		///<summary>Guest Bedroom Fire TV shuffle switch</summary>
		public SwitchEntity GuestBedroomFireTvShuffleSwitch => new(_haContext, "switch.guest_bedroom_fire_tv_shuffle_switch");
		///<summary>Kitchen do not disturb switch</summary>
		public SwitchEntity KitchenDoNotDisturbSwitch => new(_haContext, "switch.kitchen_do_not_disturb_switch");
		///<summary>Kitchen Fridge Power Switch</summary>
		public SwitchEntity KitchenFridgePowerSwitch => new(_haContext, "switch.kitchen_fridge_power_switch");
		///<summary>Kitchen repeat switch</summary>
		public SwitchEntity KitchenRepeatSwitch => new(_haContext, "switch.kitchen_repeat_switch");
		///<summary>Kitchen shuffle switch</summary>
		public SwitchEntity KitchenShuffleSwitch => new(_haContext, "switch.kitchen_shuffle_switch");
		///<summary>Living Room do not disturb switch</summary>
		public SwitchEntity LivingRoomDoNotDisturbSwitch => new(_haContext, "switch.living_room_do_not_disturb_switch");
		///<summary>Living room do not disturb switch</summary>
		public SwitchEntity LivingRoomDoNotDisturbSwitch2 => new(_haContext, "switch.living_room_do_not_disturb_switch_2");
		///<summary>Living Room repeat switch</summary>
		public SwitchEntity LivingRoomRepeatSwitch => new(_haContext, "switch.living_room_repeat_switch");
		///<summary>Living room repeat switch</summary>
		public SwitchEntity LivingRoomRepeatSwitch2 => new(_haContext, "switch.living_room_repeat_switch_2");
		///<summary>Living Room shuffle switch</summary>
		public SwitchEntity LivingRoomShuffleSwitch => new(_haContext, "switch.living_room_shuffle_switch");
		///<summary>Living room shuffle switch</summary>
		public SwitchEntity LivingRoomShuffleSwitch2 => new(_haContext, "switch.living_room_shuffle_switch_2");
		///<summary>Main floor do not disturb switch</summary>
		public SwitchEntity MainFloorDoNotDisturbSwitch => new(_haContext, "switch.main_floor_do_not_disturb_switch");
		///<summary>Main floor repeat switch</summary>
		public SwitchEntity MainFloorRepeatSwitch => new(_haContext, "switch.main_floor_repeat_switch");
		///<summary>Main floor shuffle switch</summary>
		public SwitchEntity MainFloorShuffleSwitch => new(_haContext, "switch.main_floor_shuffle_switch");
		///<summary>Master Bath Outlet</summary>
		public SwitchEntity MasterBathOutlet => new(_haContext, "switch.master_bath_outlet");
		///<summary>Main Floor Bathroom Echo do not disturb switch</summary>
		public SwitchEntity MasterBathroomEchoDoNotDisturbSwitch => new(_haContext, "switch.master_bathroom_echo_do_not_disturb_switch");
		///<summary>Main Floor Bathroom Echo repeat switch</summary>
		public SwitchEntity MasterBathroomEchoRepeatSwitch => new(_haContext, "switch.master_bathroom_echo_repeat_switch");
		///<summary>Main Floor Bathroom Echo shuffle switch</summary>
		public SwitchEntity MasterBathroomEchoShuffleSwitch => new(_haContext, "switch.master_bathroom_echo_shuffle_switch");
		///<summary>Master Bedroom Fire TV do not disturb switch</summary>
		public SwitchEntity MasterBedroomFireTvDoNotDisturbSwitch => new(_haContext, "switch.master_bedroom_fire_tv_do_not_disturb_switch");
		///<summary>Mayson's Echo do not disturb switch</summary>
		public SwitchEntity MaysonSEchoDoNotDisturbSwitch => new(_haContext, "switch.mayson_s_echo_do_not_disturb_switch");
		///<summary>Mayson's Echo repeat switch</summary>
		public SwitchEntity MaysonSEchoRepeatSwitch => new(_haContext, "switch.mayson_s_echo_repeat_switch");
		///<summary>Mayson's Echo shuffle switch</summary>
		public SwitchEntity MaysonSEchoShuffleSwitch => new(_haContext, "switch.mayson_s_echo_shuffle_switch");
		///<summary>Mayson's iPad</summary>
		public SwitchEntity MaysonSIpad => new(_haContext, "switch.mayson_s_ipad");
		///<summary>Mayson's Fan</summary>
		public SwitchEntity MaysonsFan => new(_haContext, "switch.maysons_fan");
		///<summary>Neato Schedule</summary>
		public SwitchEntity NeatoSchedule => new(_haContext, "switch.neato_schedule");
		///<summary>Network Equipment Power Switch</summary>
		public SwitchEntity NetworkEquipmentPowerSwitch => new(_haContext, "switch.network_equipment_power_switch");
		///<summary>NuttyNAS Surveillance Station Home Mode</summary>
		public SwitchEntity NuttynasHomeMode => new(_haContext, "switch.nuttynas_home_mode");
		///<summary>Office Echo Show do not disturb switch</summary>
		public SwitchEntity OfficeEchoShowDoNotDisturbSwitch => new(_haContext, "switch.office_echo_show_do_not_disturb_switch");
		///<summary>Office Echo Show repeat switch</summary>
		public SwitchEntity OfficeEchoShowRepeatSwitch => new(_haContext, "switch.office_echo_show_repeat_switch");
		///<summary>Office Echo Show shuffle switch</summary>
		public SwitchEntity OfficeEchoShowShuffleSwitch => new(_haContext, "switch.office_echo_show_shuffle_switch");
		///<summary>Pi-Hole</summary>
		public SwitchEntity PiHole => new(_haContext, "switch.pi_hole");
		///<summary>Pool Cleaner</summary>
		public SwitchEntity PoolCleaner => new(_haContext, "switch.pool_cleaner");
		///<summary>Pool Pump</summary>
		public SwitchEntity PoolPump => new(_haContext, "switch.pool_pump");
		///<summary>Pool Table Light</summary>
		public SwitchEntity PoolTableLight => new(_haContext, "switch.pool_table_light");
		///<summary>Suburban</summary>
		public SwitchEntity Smartstart1695751 => new(_haContext, "switch.smartstart_1695751");
		///<summary>MKX</summary>
		public SwitchEntity Smartstart90947 => new(_haContext, "switch.smartstart_90947");
		///<summary>Speakers - Everywhere do not disturb switch</summary>
		public SwitchEntity SpeakersEverywhereDoNotDisturbSwitch => new(_haContext, "switch.speakers_everywhere_do_not_disturb_switch");
		///<summary>Speakers - Everywhere repeat switch</summary>
		public SwitchEntity SpeakersEverywhereRepeatSwitch => new(_haContext, "switch.speakers_everywhere_repeat_switch");
		///<summary>Speakers - Everywhere shuffle switch</summary>
		public SwitchEntity SpeakersEverywhereShuffleSwitch => new(_haContext, "switch.speakers_everywhere_shuffle_switch");
		///<summary>Speakers - Main Floor do not disturb switch</summary>
		public SwitchEntity SpeakersMainFloorDoNotDisturbSwitch => new(_haContext, "switch.speakers_main_floor_do_not_disturb_switch");
		///<summary>Speakers - Main Floor repeat switch</summary>
		public SwitchEntity SpeakersMainFloorRepeatSwitch => new(_haContext, "switch.speakers_main_floor_repeat_switch");
		///<summary>Speakers - Main Floor shuffle switch</summary>
		public SwitchEntity SpeakersMainFloorShuffleSwitch => new(_haContext, "switch.speakers_main_floor_shuffle_switch");
		///<summary>Sump Pump Power Switch</summary>
		public SwitchEntity SumpPumpPowerSwitch => new(_haContext, "switch.sump_pump_power_switch");
		///<summary>This Device do not disturb switch</summary>
		public SwitchEntity ThisDeviceDoNotDisturbSwitch => new(_haContext, "switch.this_device_do_not_disturb_switch");
		///<summary>Pool Camera</summary>
		public SwitchEntity UnifiPoe9c8eCd206fD5 => new(_haContext, "switch.unifi_poe_9c_8e_cd_20_6f_d5");
		///<summary>Gate Camera</summary>
		public SwitchEntity UnifiPoeF0000032Be4d => new(_haContext, "switch.unifi_poe_f0_00_00_32_be_4d");
		///<summary>Upstairs Bathroom Fan</summary>
		public SwitchEntity UpstairsBathroomFan => new(_haContext, "switch.upstairs_bathroom_fan");
		///<summary>Washing Machine Power Switch</summary>
		public SwitchEntity WashingMachinePowerSwitch => new(_haContext, "switch.washing_machine_power_switch");
		///<summary>Whirlpool</summary>
		public SwitchEntity Whirlpool => new(_haContext, "switch.whirlpool");
		///<summary>Xbox</summary>
		public SwitchEntity Xbox => new(_haContext, "switch.xbox");
	}

	public partial class UpdateEntities
	{
		private readonly IHaContext _haContext;
		public UpdateEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Basement AP</summary>
		public UpdateEntity BasementAp => new(_haContext, "update.basement_ap");
		///<summary>Basement Switch</summary>
		public UpdateEntity BasementSwitch => new(_haContext, "update.basement_switch");
		///<summary>East AP</summary>
		public UpdateEntity EastAp => new(_haContext, "update.east_ap");
		///<summary>NuttyNAS DSM Update</summary>
		public UpdateEntity NuttynasDsmUpdate => new(_haContext, "update.nuttynas_dsm_update");
		///<summary>Office AP</summary>
		public UpdateEntity OfficeAp => new(_haContext, "update.office_ap");
		///<summary>Office Switch</summary>
		public UpdateEntity OfficeSwitch => new(_haContext, "update.office_switch");
		///<summary>Pi-Hole Core Update Available</summary>
		public UpdateEntity PiHoleCoreUpdateAvailable => new(_haContext, "update.pi_hole_core_update_available");
		///<summary>Pi-Hole FTL Update Available</summary>
		public UpdateEntity PiHoleFtlUpdateAvailable => new(_haContext, "update.pi_hole_ftl_update_available");
		///<summary>Pi-Hole Web Update Available</summary>
		public UpdateEntity PiHoleWebUpdateAvailable => new(_haContext, "update.pi_hole_web_update_available");
		///<summary>UDM Pro</summary>
		public UpdateEntity UdmPro => new(_haContext, "update.udm_pro");
	}

	public partial class UtilityMeterEntities
	{
		private readonly IHaContext _haContext;
		public UtilityMeterEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>daily_electric</summary>
		public UtilityMeterEntity DailyElectric => new(_haContext, "utility_meter.daily_electric");
	}

	public partial class VacuumEntities
	{
		private readonly IHaContext _haContext;
		public VacuumEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Neato</summary>
		public VacuumEntity Neato => new(_haContext, "vacuum.neato");
	}

	public partial class WaterHeaterEntities
	{
		private readonly IHaContext _haContext;
		public WaterHeaterEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Water Heater</summary>
		public WaterHeaterEntity WaterHeater => new(_haContext, "water_heater.water_heater");
	}

	public partial class WeatherEntities
	{
		private readonly IHaContext _haContext;
		public WeatherEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>OpenWeatherMap</summary>
		public WeatherEntity Openweathermap => new(_haContext, "weather.openweathermap");
	}

	public partial class ZoneEntities
	{
		private readonly IHaContext _haContext;
		public ZoneEntities(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Chris' Work</summary>
		public ZoneEntity ChrisWork => new(_haContext, "zone.chris_work");
		///<summary>Church</summary>
		public ZoneEntity Church => new(_haContext, "zone.church");
		///<summary>Home</summary>
		public ZoneEntity Home => new(_haContext, "zone.home");
		///<summary>Mayson's School</summary>
		public ZoneEntity MaysonSchool => new(_haContext, "zone.mayson_school");
	}

	public partial record AlarmControlPanelEntity : Entity<AlarmControlPanelEntity, EntityState<AlarmControlPanelAttributes>, AlarmControlPanelAttributes>
	{
		public AlarmControlPanelEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public AlarmControlPanelEntity(Entity entity) : base(entity)
		{
		}
	}

	public record AlarmControlPanelAttributes
	{
		[JsonPropertyName("changed_by")]
		public object? ChangedBy { get; init; }

		[JsonPropertyName("code_arm_required")]
		public bool? CodeArmRequired { get; init; }

		[JsonPropertyName("code_format")]
		public object? CodeFormat { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("supported_features")]
		public double? SupportedFeatures { get; init; }
	}

	public partial record AlertEntity : Entity<AlertEntity, EntityState<AlertAttributes>, AlertAttributes>
	{
		public AlertEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public AlertEntity(Entity entity) : base(entity)
		{
		}
	}

	public record AlertAttributes
	{
		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }
	}

	public partial record AutomationEntity : Entity<AutomationEntity, EntityState<AutomationAttributes>, AutomationAttributes>
	{
		public AutomationEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public AutomationEntity(Entity entity) : base(entity)
		{
		}
	}

	public record AutomationAttributes
	{
		[JsonPropertyName("current")]
		public double? Current { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("id")]
		public string? Id { get; init; }

		[JsonPropertyName("last_triggered")]
		public string? LastTriggered { get; init; }

		[JsonPropertyName("max")]
		public double? Max { get; init; }

		[JsonPropertyName("mode")]
		public string? Mode { get; init; }

		[JsonPropertyName("restored")]
		public bool? Restored { get; init; }

		[JsonPropertyName("supported_features")]
		public double? SupportedFeatures { get; init; }
	}

	public partial record BinarySensorEntity : Entity<BinarySensorEntity, EntityState<BinarySensorAttributes>, BinarySensorAttributes>
	{
		public BinarySensorEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public BinarySensorEntity(Entity entity) : base(entity)
		{
		}
	}

	public record BinarySensorAttributes
	{
		[JsonPropertyName("attribution")]
		public string? Attribution { get; init; }

		[JsonPropertyName("beta_version")]
		public string? BetaVersion { get; init; }

		[JsonPropertyName("current_version")]
		public string? CurrentVersion { get; init; }

		[JsonPropertyName("device_class")]
		public string? DeviceClass { get; init; }

		[JsonPropertyName("entity_picture")]
		public string? EntityPicture { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("icon")]
		public string? Icon { get; init; }

		[JsonPropertyName("ignoring_battery_optimizations")]
		public bool? IgnoringBatteryOptimizations { get; init; }

		[JsonPropertyName("installed_version")]
		public string? InstalledVersion { get; init; }

		[JsonPropertyName("latest_available_version")]
		public object? LatestAvailableVersion { get; init; }

		[JsonPropertyName("latest_stable_version")]
		public string? LatestStableVersion { get; init; }

		[JsonPropertyName("latest_version")]
		public string? LatestVersion { get; init; }

		[JsonPropertyName("malware")]
		public string? Malware { get; init; }

		[JsonPropertyName("network")]
		public string? Network { get; init; }

		[JsonPropertyName("restored")]
		public bool? Restored { get; init; }

		[JsonPropertyName("securitySetting")]
		public string? SecuritySetting { get; init; }

		[JsonPropertyName("supported_features")]
		public double? SupportedFeatures { get; init; }

		[JsonPropertyName("systemCheck")]
		public string? SystemCheck { get; init; }

		[JsonPropertyName("update")]
		public string? Update { get; init; }

		[JsonPropertyName("userInfo")]
		public string? UserInfo { get; init; }
	}

	public partial record ButtonEntity : Entity<ButtonEntity, EntityState<ButtonAttributes>, ButtonAttributes>
	{
		public ButtonEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public ButtonEntity(Entity entity) : base(entity)
		{
		}
	}

	public record ButtonAttributes
	{
		[JsonPropertyName("device_class")]
		public string? DeviceClass { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("icon")]
		public string? Icon { get; init; }
	}

	public partial record CalendarEntity : Entity<CalendarEntity, EntityState<CalendarAttributes>, CalendarAttributes>
	{
		public CalendarEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public CalendarEntity(Entity entity) : base(entity)
		{
		}
	}

	public record CalendarAttributes
	{
		[JsonPropertyName("all_day")]
		public bool? AllDay { get; init; }

		[JsonPropertyName("description")]
		public string? Description { get; init; }

		[JsonPropertyName("end_time")]
		public string? EndTime { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("location")]
		public string? Location { get; init; }

		[JsonPropertyName("message")]
		public string? Message { get; init; }

		[JsonPropertyName("offset_reached")]
		public bool? OffsetReached { get; init; }

		[JsonPropertyName("start_time")]
		public string? StartTime { get; init; }
	}

	public partial record CameraEntity : Entity<CameraEntity, EntityState<CameraAttributes>, CameraAttributes>
	{
		public CameraEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public CameraEntity(Entity entity) : base(entity)
		{
		}
	}

	public record CameraAttributes
	{
		[JsonPropertyName("access_token")]
		public string? AccessToken { get; init; }

		[JsonPropertyName("attribution")]
		public string? Attribution { get; init; }

		[JsonPropertyName("entity_picture")]
		public string? EntityPicture { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("frontend_stream_type")]
		public string? FrontendStreamType { get; init; }

		[JsonPropertyName("generated_at")]
		public string? GeneratedAt { get; init; }

		[JsonPropertyName("last_video_id")]
		public double? LastVideoId { get; init; }

		[JsonPropertyName("motion_detection")]
		public bool? MotionDetection { get; init; }

		[JsonPropertyName("supported_features")]
		public double? SupportedFeatures { get; init; }

		[JsonPropertyName("video_url")]
		public string? VideoUrl { get; init; }
	}

	public partial record ClimateEntity : Entity<ClimateEntity, EntityState<ClimateAttributes>, ClimateAttributes>
	{
		public ClimateEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public ClimateEntity(Entity entity) : base(entity)
		{
		}
	}

	public record ClimateAttributes
	{
		[JsonPropertyName("aux_heat")]
		public string? AuxHeat { get; init; }

		[JsonPropertyName("current_humidity")]
		public double? CurrentHumidity { get; init; }

		[JsonPropertyName("current_temperature")]
		public double? CurrentTemperature { get; init; }

		[JsonPropertyName("fan_mode")]
		public string? FanMode { get; init; }

		[JsonPropertyName("fan_modes")]
		public object? FanModes { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("humidity")]
		public double? Humidity { get; init; }

		[JsonPropertyName("hvac_modes")]
		public object? HvacModes { get; init; }

		[JsonPropertyName("max_humidity")]
		public double? MaxHumidity { get; init; }

		[JsonPropertyName("max_temp")]
		public double? MaxTemp { get; init; }

		[JsonPropertyName("min_humidity")]
		public double? MinHumidity { get; init; }

		[JsonPropertyName("min_temp")]
		public double? MinTemp { get; init; }

		[JsonPropertyName("supported_features")]
		public double? SupportedFeatures { get; init; }

		[JsonPropertyName("target_temp_high")]
		public object? TargetTempHigh { get; init; }

		[JsonPropertyName("target_temp_low")]
		public object? TargetTempLow { get; init; }

		[JsonPropertyName("target_temp_step")]
		public double? TargetTempStep { get; init; }

		[JsonPropertyName("temperature")]
		public double? Temperature { get; init; }
	}

	public partial record CounterEntity : Entity<CounterEntity, EntityState<CounterAttributes>, CounterAttributes>
	{
		public CounterEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public CounterEntity(Entity entity) : base(entity)
		{
		}
	}

	public record CounterAttributes
	{
		[JsonPropertyName("editable")]
		public bool? Editable { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("icon")]
		public string? Icon { get; init; }

		[JsonPropertyName("initial")]
		public double? Initial { get; init; }

		[JsonPropertyName("maximum")]
		public double? Maximum { get; init; }

		[JsonPropertyName("minimum")]
		public double? Minimum { get; init; }

		[JsonPropertyName("step")]
		public double? Step { get; init; }
	}

	public partial record CoverEntity : Entity<CoverEntity, EntityState<CoverAttributes>, CoverAttributes>
	{
		public CoverEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public CoverEntity(Entity entity) : base(entity)
		{
		}
	}

	public record CoverAttributes
	{
		[JsonPropertyName("current_position")]
		public double? CurrentPosition { get; init; }

		[JsonPropertyName("device_class")]
		public string? DeviceClass { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("supported_features")]
		public double? SupportedFeatures { get; init; }
	}

	public partial record DeviceTrackerEntity : Entity<DeviceTrackerEntity, EntityState<DeviceTrackerAttributes>, DeviceTrackerAttributes>
	{
		public DeviceTrackerEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public DeviceTrackerEntity(Entity entity) : base(entity)
		{
		}
	}

	public record DeviceTrackerAttributes
	{
		[JsonPropertyName("altitude")]
		public double? Altitude { get; init; }

		[JsonPropertyName("ap_mac")]
		public string? ApMac { get; init; }

		[JsonPropertyName("course")]
		public double? Course { get; init; }

		[JsonPropertyName("essid")]
		public string? Essid { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("gps_accuracy")]
		public double? GpsAccuracy { get; init; }

		[JsonPropertyName("hostname")]
		public string? Hostname { get; init; }

		[JsonPropertyName("host_name")]
		public string? HostName { get; init; }

		[JsonPropertyName("icon")]
		public string? Icon { get; init; }

		[JsonPropertyName("ip")]
		public string? Ip { get; init; }

		[JsonPropertyName("is_11r")]
		public bool? Is11r { get; init; }

		[JsonPropertyName("is_guest")]
		public bool? IsGuest { get; init; }

		[JsonPropertyName("_is_guest_by_uap")]
		public bool? IsGuestByUap { get; init; }

		[JsonPropertyName("is_lost")]
		public bool? IsLost { get; init; }

		[JsonPropertyName("is_wired")]
		public bool? IsWired { get; init; }

		[JsonPropertyName("last_lost_timestamp")]
		public string? LastLostTimestamp { get; init; }

		[JsonPropertyName("latitude")]
		public double? Latitude { get; init; }

		[JsonPropertyName("longitude")]
		public double? Longitude { get; init; }

		[JsonPropertyName("mac")]
		public string? Mac { get; init; }

		[JsonPropertyName("MAC")]
		public string? MAC { get; init; }

		[JsonPropertyName("name")]
		public string? Name { get; init; }

		[JsonPropertyName("oui")]
		public string? Oui { get; init; }

		[JsonPropertyName("qos_policy_applied")]
		public bool? QosPolicyApplied { get; init; }

		[JsonPropertyName("radio")]
		public string? Radio { get; init; }

		[JsonPropertyName("radio_proto")]
		public string? RadioProto { get; init; }

		[JsonPropertyName("ring_state")]
		public string? RingState { get; init; }

		[JsonPropertyName("source_type")]
		public string? SourceType { get; init; }

		[JsonPropertyName("speed")]
		public double? Speed { get; init; }

		[JsonPropertyName("vertical_accuracy")]
		public double? VerticalAccuracy { get; init; }

		[JsonPropertyName("vlan")]
		public double? Vlan { get; init; }

		[JsonPropertyName("voip_state")]
		public string? VoipState { get; init; }
	}

	public partial record FanEntity : Entity<FanEntity, EntityState<FanAttributes>, FanAttributes>
	{
		public FanEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public FanEntity(Entity entity) : base(entity)
		{
		}
	}

	public record FanAttributes
	{
		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("supported_features")]
		public double? SupportedFeatures { get; init; }
	}

	public partial record InputBooleanEntity : Entity<InputBooleanEntity, EntityState<InputBooleanAttributes>, InputBooleanAttributes>
	{
		public InputBooleanEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public InputBooleanEntity(Entity entity) : base(entity)
		{
		}
	}

	public record InputBooleanAttributes
	{
		[JsonPropertyName("editable")]
		public bool? Editable { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }
	}

	public partial record InputDatetimeEntity : Entity<InputDatetimeEntity, EntityState<InputDatetimeAttributes>, InputDatetimeAttributes>
	{
		public InputDatetimeEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public InputDatetimeEntity(Entity entity) : base(entity)
		{
		}
	}

	public record InputDatetimeAttributes
	{
		[JsonPropertyName("day")]
		public double? Day { get; init; }

		[JsonPropertyName("editable")]
		public bool? Editable { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("has_date")]
		public bool? HasDate { get; init; }

		[JsonPropertyName("has_time")]
		public bool? HasTime { get; init; }

		[JsonPropertyName("hour")]
		public double? Hour { get; init; }

		[JsonPropertyName("minute")]
		public double? Minute { get; init; }

		[JsonPropertyName("month")]
		public double? Month { get; init; }

		[JsonPropertyName("second")]
		public double? Second { get; init; }

		[JsonPropertyName("timestamp")]
		public double? Timestamp { get; init; }

		[JsonPropertyName("year")]
		public double? Year { get; init; }
	}

	public partial record InputNumberEntity : NumericEntity<InputNumberEntity, NumericEntityState<InputNumberAttributes>, InputNumberAttributes>
	{
		public InputNumberEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public InputNumberEntity(Entity entity) : base(entity)
		{
		}
	}

	public record InputNumberAttributes
	{
		[JsonPropertyName("editable")]
		public bool? Editable { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("icon")]
		public string? Icon { get; init; }

		[JsonPropertyName("initial")]
		public object? Initial { get; init; }

		[JsonPropertyName("max")]
		public double? Max { get; init; }

		[JsonPropertyName("min")]
		public double? Min { get; init; }

		[JsonPropertyName("mode")]
		public string? Mode { get; init; }

		[JsonPropertyName("step")]
		public double? Step { get; init; }

		[JsonPropertyName("unit_of_measurement")]
		public string? UnitOfMeasurement { get; init; }
	}

	public partial record InputSelectEntity : Entity<InputSelectEntity, EntityState<InputSelectAttributes>, InputSelectAttributes>
	{
		public InputSelectEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public InputSelectEntity(Entity entity) : base(entity)
		{
		}
	}

	public record InputSelectAttributes
	{
		[JsonPropertyName("editable")]
		public bool? Editable { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("icon")]
		public string? Icon { get; init; }

		[JsonPropertyName("options")]
		public object? Options { get; init; }
	}

	public partial record InputTextEntity : Entity<InputTextEntity, EntityState<InputTextAttributes>, InputTextAttributes>
	{
		public InputTextEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public InputTextEntity(Entity entity) : base(entity)
		{
		}
	}

	public record InputTextAttributes
	{
		[JsonPropertyName("editable")]
		public bool? Editable { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("max")]
		public double? Max { get; init; }

		[JsonPropertyName("min")]
		public double? Min { get; init; }

		[JsonPropertyName("mode")]
		public string? Mode { get; init; }

		[JsonPropertyName("pattern")]
		public object? Pattern { get; init; }
	}

	public partial record LightEntity : Entity<LightEntity, EntityState<LightAttributes>, LightAttributes>
	{
		public LightEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public LightEntity(Entity entity) : base(entity)
		{
		}
	}

	public record LightAttributes
	{
		[JsonPropertyName("brightness")]
		public double? Brightness { get; init; }

		[JsonPropertyName("color_mode")]
		public string? ColorMode { get; init; }

		[JsonPropertyName("deviceID")]
		public string? DeviceID { get; init; }

		[JsonPropertyName("effect_list")]
		public object? EffectList { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("last_seen")]
		public string? LastSeen { get; init; }

		[JsonPropertyName("restored")]
		public bool? Restored { get; init; }

		[JsonPropertyName("supported_color_modes")]
		public object? SupportedColorModes { get; init; }

		[JsonPropertyName("supported_features")]
		public double? SupportedFeatures { get; init; }

		[JsonPropertyName("type")]
		public string? Type { get; init; }
	}

	public partial record LockEntity : Entity<LockEntity, EntityState<LockAttributes>, LockAttributes>
	{
		public LockEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public LockEntity(Entity entity) : base(entity)
		{
		}
	}

	public record LockAttributes
	{
		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("restored")]
		public bool? Restored { get; init; }

		[JsonPropertyName("supported_features")]
		public double? SupportedFeatures { get; init; }
	}

	public partial record MediaPlayerEntity : Entity<MediaPlayerEntity, EntityState<MediaPlayerAttributes>, MediaPlayerAttributes>
	{
		public MediaPlayerEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public MediaPlayerEntity(Entity entity) : base(entity)
		{
		}
	}

	public record MediaPlayerAttributes
	{
		[JsonPropertyName("adb_response")]
		public object? AdbResponse { get; init; }

		[JsonPropertyName("app_id")]
		public string? AppId { get; init; }

		[JsonPropertyName("available")]
		public bool? Available { get; init; }

		[JsonPropertyName("bluetooth_list")]
		public object? BluetoothList { get; init; }

		[JsonPropertyName("connected_bluetooth")]
		public object? ConnectedBluetooth { get; init; }

		[JsonPropertyName("deviceID")]
		public string? DeviceID { get; init; }

		[JsonPropertyName("entity_picture")]
		public string? EntityPicture { get; init; }

		[JsonPropertyName("entity_picture_local")]
		public string? EntityPictureLocal { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("hdmi_input")]
		public object? HdmiInput { get; init; }

		[JsonPropertyName("is_volume_muted")]
		public bool? IsVolumeMuted { get; init; }

		[JsonPropertyName("last_called")]
		public bool? LastCalled { get; init; }

		[JsonPropertyName("last_called_summary")]
		public string? LastCalledSummary { get; init; }

		[JsonPropertyName("last_called_timestamp")]
		public double? LastCalledTimestamp { get; init; }

		[JsonPropertyName("media_album_name")]
		public string? MediaAlbumName { get; init; }

		[JsonPropertyName("media_artist")]
		public string? MediaArtist { get; init; }

		[JsonPropertyName("media_content_id")]
		public string? MediaContentId { get; init; }

		[JsonPropertyName("media_content_type")]
		public string? MediaContentType { get; init; }

		[JsonPropertyName("media_duration")]
		public double? MediaDuration { get; init; }

		[JsonPropertyName("media_position")]
		public double? MediaPosition { get; init; }

		[JsonPropertyName("media_position_updated_at")]
		public string? MediaPositionUpdatedAt { get; init; }

		[JsonPropertyName("media_title")]
		public string? MediaTitle { get; init; }

		[JsonPropertyName("restored")]
		public bool? Restored { get; init; }

		[JsonPropertyName("shuffle")]
		public bool? Shuffle { get; init; }

		[JsonPropertyName("source")]
		public string? Source { get; init; }

		[JsonPropertyName("source_list")]
		public object? SourceList { get; init; }

		[JsonPropertyName("supported_features")]
		public double? SupportedFeatures { get; init; }

		[JsonPropertyName("type")]
		public string? Type { get; init; }

		[JsonPropertyName("volume_level")]
		public double? VolumeLevel { get; init; }
	}

	public partial record PersonEntity : Entity<PersonEntity, EntityState<PersonAttributes>, PersonAttributes>
	{
		public PersonEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public PersonEntity(Entity entity) : base(entity)
		{
		}
	}

	public record PersonAttributes
	{
		[JsonPropertyName("editable")]
		public bool? Editable { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("gps_accuracy")]
		public double? GpsAccuracy { get; init; }

		[JsonPropertyName("id")]
		public string? Id { get; init; }

		[JsonPropertyName("latitude")]
		public double? Latitude { get; init; }

		[JsonPropertyName("longitude")]
		public double? Longitude { get; init; }

		[JsonPropertyName("source")]
		public string? Source { get; init; }

		[JsonPropertyName("user_id")]
		public string? UserId { get; init; }
	}

	public partial record ProximityEntity : Entity<ProximityEntity, EntityState<ProximityAttributes>, ProximityAttributes>
	{
		public ProximityEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public ProximityEntity(Entity entity) : base(entity)
		{
		}
	}

	public record ProximityAttributes
	{
		[JsonPropertyName("dir_of_travel")]
		public string? DirOfTravel { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("nearest")]
		public string? Nearest { get; init; }

		[JsonPropertyName("unit_of_measurement")]
		public string? UnitOfMeasurement { get; init; }
	}

	public partial record RemoteEntity : Entity<RemoteEntity, EntityState<RemoteAttributes>, RemoteAttributes>
	{
		public RemoteEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public RemoteEntity(Entity entity) : base(entity)
		{
		}
	}

	public record RemoteAttributes
	{
		[JsonPropertyName("activity_list")]
		public object? ActivityList { get; init; }

		[JsonPropertyName("activity_starting")]
		public object? ActivityStarting { get; init; }

		[JsonPropertyName("current_activity")]
		public string? CurrentActivity { get; init; }

		[JsonPropertyName("devices_list")]
		public object? DevicesList { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("last_activity")]
		public string? LastActivity { get; init; }

		[JsonPropertyName("supported_features")]
		public double? SupportedFeatures { get; init; }
	}

	public partial record ScriptEntity : Entity<ScriptEntity, EntityState<ScriptAttributes>, ScriptAttributes>
	{
		public ScriptEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public ScriptEntity(Entity entity) : base(entity)
		{
		}
	}

	public record ScriptAttributes
	{
		[JsonPropertyName("current")]
		public double? Current { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("icon")]
		public string? Icon { get; init; }

		[JsonPropertyName("last_triggered")]
		public string? LastTriggered { get; init; }

		[JsonPropertyName("max")]
		public double? Max { get; init; }

		[JsonPropertyName("mode")]
		public string? Mode { get; init; }
	}

	public partial record SelectEntity : Entity<SelectEntity, EntityState<SelectAttributes>, SelectAttributes>
	{
		public SelectEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public SelectEntity(Entity entity) : base(entity)
		{
		}
	}

	public record SelectAttributes
	{
		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("icon")]
		public string? Icon { get; init; }

		[JsonPropertyName("options")]
		public object? Options { get; init; }

		[JsonPropertyName("restored")]
		public bool? Restored { get; init; }

		[JsonPropertyName("supported_features")]
		public double? SupportedFeatures { get; init; }
	}

	public partial record NumericSensorEntity : NumericEntity<NumericSensorEntity, NumericEntityState<NumericSensorAttributes>, NumericSensorAttributes>
	{
		public NumericSensorEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public NumericSensorEntity(Entity entity) : base(entity)
		{
		}
	}

	public record NumericSensorAttributes
	{
		[JsonPropertyName("age_coverage_ratio")]
		public double? AgeCoverageRatio { get; init; }

		[JsonPropertyName("alert_com.fandango")]
		public string? AlertComfandango { get; init; }

		[JsonPropertyName("android.appInfo_com.amazon.dee.app")]
		public string? AndroidappInfoComamazondeeapp { get; init; }

		[JsonPropertyName("android.appInfo_com.amazon.mShop.android.shopping")]
		public string? AndroidappInfoComamazonmShopandroidshopping { get; init; }

		[JsonPropertyName("android.appInfo_com.android.chrome")]
		public string? AndroidappInfoComandroidchrome { get; init; }

		[JsonPropertyName("android.appInfo_com.directed.android.viper")]
		public string? AndroidappInfoComdirectedandroidviper { get; init; }

		[JsonPropertyName("android.appInfo_com.facebook.katana")]
		public string? AndroidappInfoComfacebookkatana { get; init; }

		[JsonPropertyName("android.appInfo_com.fandango")]
		public string? AndroidappInfoComfandango { get; init; }

		[JsonPropertyName("android.appInfo_com.google.android.apps.docs")]
		public string? AndroidappInfoComgoogleandroidappsdocs { get; init; }

		[JsonPropertyName("android.appInfo_com.google.android.apps.googlevoice")]
		public string? AndroidappInfoComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.appInfo_com.google.android.apps.magazines")]
		public string? AndroidappInfoComgoogleandroidappsmagazines { get; init; }

		[JsonPropertyName("android.appInfo_com.google.android.apps.photos")]
		public string? AndroidappInfoComgoogleandroidappsphotos { get; init; }

		[JsonPropertyName("android.appInfo_com.google.android.calendar")]
		public string? AndroidappInfoComgoogleandroidcalendar { get; init; }

		[JsonPropertyName("android.appInfo_com.google.android.gm")]
		public string? AndroidappInfoComgoogleandroidgm { get; init; }

		[JsonPropertyName("android.appInfo_com.google.android.gms")]
		public string? AndroidappInfoComgoogleandroidgms { get; init; }

		[JsonPropertyName("android.appInfo_com.google.android.googlequicksearchbox")]
		public string? AndroidappInfoComgoogleandroidgooglequicksearchbox { get; init; }

		[JsonPropertyName("android.appInfo_com.home.bible.verse.prayer")]
		public string? AndroidappInfoComhomebibleverseprayer { get; init; }

		[JsonPropertyName("android.appInfo_com.imdb.mobile")]
		public string? AndroidappInfoComimdbmobile { get; init; }

		[JsonPropertyName("android.appInfo_com.joaomgcd.autolocation")]
		public string? AndroidappInfoComjoaomgcdautolocation { get; init; }

		[JsonPropertyName("android.appInfo_com.linkedin.android")]
		public string? AndroidappInfoComlinkedinandroid { get; init; }

		[JsonPropertyName("android.appInfo_com.microsoft.skydrive")]
		public string? AndroidappInfoCommicrosoftskydrive { get; init; }

		[JsonPropertyName("android.appInfo_com.nianticlabs.pokemongo")]
		public string? AndroidappInfoComnianticlabspokemongo { get; init; }

		[JsonPropertyName("android.appInfo_com.particlenews.newsbreak")]
		public string? AndroidappInfoComparticlenewsnewsbreak { get; init; }

		[JsonPropertyName("android.appInfo_com.reddit.frontpage")]
		public string? AndroidappInfoComredditfrontpage { get; init; }

		[JsonPropertyName("android.appInfo_com.samsung.android.app.reminder")]
		public string? AndroidappInfoComsamsungandroidappreminder { get; init; }

		[JsonPropertyName("android.appInfo_com.samsung.android.email.provider")]
		public string? AndroidappInfoComsamsungandroidemailprovider { get; init; }

		[JsonPropertyName("android.appInfo_com.snapchat.android")]
		public string? AndroidappInfoComsnapchatandroid { get; init; }

		[JsonPropertyName("android.appInfo_com.thumbtack.consumer")]
		public string? AndroidappInfoComthumbtackconsumer { get; init; }

		[JsonPropertyName("android.appInfo_com.vinsmart.android.dialer.att")]
		public string? AndroidappInfoComvinsmartandroiddialeratt { get; init; }

		[JsonPropertyName("android.appInfo_com.ziprecruiter.android.release")]
		public string? AndroidappInfoComziprecruiterandroidrelease { get; init; }

		[JsonPropertyName("android.appInfo_io.homeassistant.companion.android")]
		public string? AndroidappInfoIohomeassistantcompanionandroid { get; init; }

		[JsonPropertyName("android.appInfo_net.dinglisch.android.taskerm")]
		public string? AndroidappInfoNetdinglischandroidtaskerm { get; init; }

		[JsonPropertyName("android.bigText_com.amazon.dee.app")]
		public string? AndroidbigTextComamazondeeapp { get; init; }

		[JsonPropertyName("android.bigText_com.amazon.mShop.android.shopping")]
		public string? AndroidbigTextComamazonmShopandroidshopping { get; init; }

		[JsonPropertyName("android.bigText_com.directed.android.viper")]
		public string? AndroidbigTextComdirectedandroidviper { get; init; }

		[JsonPropertyName("android.bigText_com.facebook.katana")]
		public string? AndroidbigTextComfacebookkatana { get; init; }

		[JsonPropertyName("android.bigText_com.fandango")]
		public string? AndroidbigTextComfandango { get; init; }

		[JsonPropertyName("android.bigText_com.google.android.apps.docs")]
		public string? AndroidbigTextComgoogleandroidappsdocs { get; init; }

		[JsonPropertyName("android.bigText_com.google.android.apps.photos")]
		public string? AndroidbigTextComgoogleandroidappsphotos { get; init; }

		[JsonPropertyName("android.bigText_com.google.android.calendar")]
		public string? AndroidbigTextComgoogleandroidcalendar { get; init; }

		[JsonPropertyName("android.bigText_com.google.android.gm")]
		public string? AndroidbigTextComgoogleandroidgm { get; init; }

		[JsonPropertyName("android.bigText_com.google.android.gms")]
		public string? AndroidbigTextComgoogleandroidgms { get; init; }

		[JsonPropertyName("android.bigText_com.google.android.googlequicksearchbox")]
		public string? AndroidbigTextComgoogleandroidgooglequicksearchbox { get; init; }

		[JsonPropertyName("android.bigText_com.imdb.mobile")]
		public string? AndroidbigTextComimdbmobile { get; init; }

		[JsonPropertyName("android.bigText_com.linkedin.android")]
		public string? AndroidbigTextComlinkedinandroid { get; init; }

		[JsonPropertyName("android.bigText_com.microsoft.skydrive")]
		public string? AndroidbigTextCommicrosoftskydrive { get; init; }

		[JsonPropertyName("android.bigText_com.nianticlabs.pokemongo")]
		public string? AndroidbigTextComnianticlabspokemongo { get; init; }

		[JsonPropertyName("android.bigText_com.samsung.android.email.provider")]
		public string? AndroidbigTextComsamsungandroidemailprovider { get; init; }

		[JsonPropertyName("android.bigText_com.snapchat.android")]
		public string? AndroidbigTextComsnapchatandroid { get; init; }

		[JsonPropertyName("android.bigText_com.thumbtack.consumer")]
		public string? AndroidbigTextComthumbtackconsumer { get; init; }

		[JsonPropertyName("android.bigText_com.ziprecruiter.android.release")]
		public string? AndroidbigTextComziprecruiterandroidrelease { get; init; }

		[JsonPropertyName("android.bigText_net.dinglisch.android.taskerm")]
		public string? AndroidbigTextNetdinglischandroidtaskerm { get; init; }

		[JsonPropertyName("android.car.EXTENSIONS_com.google.android.apps.googlevoice")]
		public string? AndroidcarEXTENSIONSComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.colorized_com.home.bible.verse.prayer")]
		public bool? AndroidcolorizedComhomebibleverseprayer { get; init; }

		[JsonPropertyName("android.colorized_com.joaomgcd.autolocation")]
		public bool? AndroidcolorizedComjoaomgcdautolocation { get; init; }

		[JsonPropertyName("android.colorized_com.microsoft.skydrive")]
		public bool? AndroidcolorizedCommicrosoftskydrive { get; init; }

		[JsonPropertyName("android.contains.customView_com.facebook.katana")]
		public bool? AndroidcontainscustomViewComfacebookkatana { get; init; }

		[JsonPropertyName("android.contains.customView_com.google.android.apps.magazines")]
		public bool? AndroidcontainscustomViewComgoogleandroidappsmagazines { get; init; }

		[JsonPropertyName("android.contains.customView_com.home.bible.verse.prayer")]
		public bool? AndroidcontainscustomViewComhomebibleverseprayer { get; init; }

		[JsonPropertyName("android.contains.customView_com.imdb.mobile")]
		public bool? AndroidcontainscustomViewComimdbmobile { get; init; }

		[JsonPropertyName("android.contains.customView_com.particlenews.newsbreak")]
		public bool? AndroidcontainscustomViewComparticlenewsnewsbreak { get; init; }

		[JsonPropertyName("android.conversationTitle_com.google.android.apps.googlevoice")]
		public string? AndroidconversationTitleComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.hiddenConversationTitle_com.google.android.apps.googlevoice")]
		public string? AndroidhiddenConversationTitleComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.infoText_com.amazon.dee.app")]
		public string? AndroidinfoTextComamazondeeapp { get; init; }

		[JsonPropertyName("android.infoText_com.android.chrome")]
		public string? AndroidinfoTextComandroidchrome { get; init; }

		[JsonPropertyName("android.infoText_com.directed.android.viper")]
		public string? AndroidinfoTextComdirectedandroidviper { get; init; }

		[JsonPropertyName("android.infoText_com.facebook.katana")]
		public string? AndroidinfoTextComfacebookkatana { get; init; }

		[JsonPropertyName("android.infoText_com.fandango")]
		public string? AndroidinfoTextComfandango { get; init; }

		[JsonPropertyName("android.infoText_com.google.android.apps.docs")]
		public string? AndroidinfoTextComgoogleandroidappsdocs { get; init; }

		[JsonPropertyName("android.infoText_com.google.android.apps.googlevoice")]
		public string? AndroidinfoTextComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.infoText_com.google.android.apps.magazines")]
		public string? AndroidinfoTextComgoogleandroidappsmagazines { get; init; }

		[JsonPropertyName("android.infoText_com.google.android.apps.photos")]
		public string? AndroidinfoTextComgoogleandroidappsphotos { get; init; }

		[JsonPropertyName("android.infoText_com.google.android.calendar")]
		public string? AndroidinfoTextComgoogleandroidcalendar { get; init; }

		[JsonPropertyName("android.infoText_com.google.android.gm")]
		public string? AndroidinfoTextComgoogleandroidgm { get; init; }

		[JsonPropertyName("android.infoText_com.google.android.gms")]
		public string? AndroidinfoTextComgoogleandroidgms { get; init; }

		[JsonPropertyName("android.infoText_com.google.android.googlequicksearchbox")]
		public string? AndroidinfoTextComgoogleandroidgooglequicksearchbox { get; init; }

		[JsonPropertyName("android.infoText_com.home.bible.verse.prayer")]
		public string? AndroidinfoTextComhomebibleverseprayer { get; init; }

		[JsonPropertyName("android.infoText_com.imdb.mobile")]
		public string? AndroidinfoTextComimdbmobile { get; init; }

		[JsonPropertyName("android.infoText_com.linkedin.android")]
		public string? AndroidinfoTextComlinkedinandroid { get; init; }

		[JsonPropertyName("android.infoText_com.microsoft.skydrive")]
		public string? AndroidinfoTextCommicrosoftskydrive { get; init; }

		[JsonPropertyName("android.infoText_com.nianticlabs.pokemongo")]
		public string? AndroidinfoTextComnianticlabspokemongo { get; init; }

		[JsonPropertyName("android.infoText_com.particlenews.newsbreak")]
		public string? AndroidinfoTextComparticlenewsnewsbreak { get; init; }

		[JsonPropertyName("android.infoText_com.reddit.frontpage")]
		public string? AndroidinfoTextComredditfrontpage { get; init; }

		[JsonPropertyName("android.infoText_com.samsung.android.app.reminder")]
		public string? AndroidinfoTextComsamsungandroidappreminder { get; init; }

		[JsonPropertyName("android.infoText_com.snapchat.android")]
		public string? AndroidinfoTextComsnapchatandroid { get; init; }

		[JsonPropertyName("android.infoText_com.thumbtack.consumer")]
		public string? AndroidinfoTextComthumbtackconsumer { get; init; }

		[JsonPropertyName("android.infoText_com.ziprecruiter.android.release")]
		public string? AndroidinfoTextComziprecruiterandroidrelease { get; init; }

		[JsonPropertyName("android.infoText_io.homeassistant.companion.android")]
		public string? AndroidinfoTextIohomeassistantcompanionandroid { get; init; }

		[JsonPropertyName("android.isGroupConversation_com.google.android.apps.googlevoice")]
		public bool? AndroidisGroupConversationComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.largeIcon.big_com.google.android.googlequicksearchbox")]
		public string? AndroidlargeIconbigComgoogleandroidgooglequicksearchbox { get; init; }

		[JsonPropertyName("android.largeIcon.big_com.home.bible.verse.prayer")]
		public string? AndroidlargeIconbigComhomebibleverseprayer { get; init; }

		[JsonPropertyName("android.largeIcon.big_com.microsoft.skydrive")]
		public string? AndroidlargeIconbigCommicrosoftskydrive { get; init; }

		[JsonPropertyName("android.largeIcon_com.amazon.dee.app")]
		public string? AndroidlargeIconComamazondeeapp { get; init; }

		[JsonPropertyName("android.largeIcon_com.android.chrome")]
		public string? AndroidlargeIconComandroidchrome { get; init; }

		[JsonPropertyName("android.largeIcon_com.directed.android.viper")]
		public string? AndroidlargeIconComdirectedandroidviper { get; init; }

		[JsonPropertyName("android.largeIcon_com.facebook.katana")]
		public string? AndroidlargeIconComfacebookkatana { get; init; }

		[JsonPropertyName("android.largeIcon_com.fandango")]
		public string? AndroidlargeIconComfandango { get; init; }

		[JsonPropertyName("android.largeIcon_com.google.android.apps.docs")]
		public string? AndroidlargeIconComgoogleandroidappsdocs { get; init; }

		[JsonPropertyName("android.largeIcon_com.google.android.apps.googlevoice")]
		public string? AndroidlargeIconComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.largeIcon_com.google.android.apps.magazines")]
		public string? AndroidlargeIconComgoogleandroidappsmagazines { get; init; }

		[JsonPropertyName("android.largeIcon_com.google.android.apps.photos")]
		public string? AndroidlargeIconComgoogleandroidappsphotos { get; init; }

		[JsonPropertyName("android.largeIcon_com.google.android.calendar")]
		public string? AndroidlargeIconComgoogleandroidcalendar { get; init; }

		[JsonPropertyName("android.largeIcon_com.google.android.gm")]
		public string? AndroidlargeIconComgoogleandroidgm { get; init; }

		[JsonPropertyName("android.largeIcon_com.google.android.gms")]
		public string? AndroidlargeIconComgoogleandroidgms { get; init; }

		[JsonPropertyName("android.largeIcon_com.google.android.googlequicksearchbox")]
		public string? AndroidlargeIconComgoogleandroidgooglequicksearchbox { get; init; }

		[JsonPropertyName("android.largeIcon_com.home.bible.verse.prayer")]
		public string? AndroidlargeIconComhomebibleverseprayer { get; init; }

		[JsonPropertyName("android.largeIcon_com.imdb.mobile")]
		public string? AndroidlargeIconComimdbmobile { get; init; }

		[JsonPropertyName("android.largeIcon_com.linkedin.android")]
		public string? AndroidlargeIconComlinkedinandroid { get; init; }

		[JsonPropertyName("android.largeIcon_com.microsoft.skydrive")]
		public string? AndroidlargeIconCommicrosoftskydrive { get; init; }

		[JsonPropertyName("android.largeIcon_com.nianticlabs.pokemongo")]
		public string? AndroidlargeIconComnianticlabspokemongo { get; init; }

		[JsonPropertyName("android.largeIcon_com.particlenews.newsbreak")]
		public string? AndroidlargeIconComparticlenewsnewsbreak { get; init; }

		[JsonPropertyName("android.largeIcon_com.reddit.frontpage")]
		public string? AndroidlargeIconComredditfrontpage { get; init; }

		[JsonPropertyName("android.largeIcon_com.samsung.android.app.reminder")]
		public string? AndroidlargeIconComsamsungandroidappreminder { get; init; }

		[JsonPropertyName("android.largeIcon_com.samsung.android.email.provider")]
		public string? AndroidlargeIconComsamsungandroidemailprovider { get; init; }

		[JsonPropertyName("android.largeIcon_com.snapchat.android")]
		public string? AndroidlargeIconComsnapchatandroid { get; init; }

		[JsonPropertyName("android.largeIcon_com.thumbtack.consumer")]
		public string? AndroidlargeIconComthumbtackconsumer { get; init; }

		[JsonPropertyName("android.largeIcon_com.ziprecruiter.android.release")]
		public string? AndroidlargeIconComziprecruiterandroidrelease { get; init; }

		[JsonPropertyName("android.largeIcon_io.homeassistant.companion.android")]
		public string? AndroidlargeIconIohomeassistantcompanionandroid { get; init; }

		[JsonPropertyName("android.messages_com.google.android.apps.googlevoice")]
		public string? AndroidmessagesComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.messagingStyleUser_com.google.android.apps.googlevoice")]
		public string? AndroidmessagingStyleUserComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.messagingUser_com.google.android.apps.googlevoice")]
		public string? AndroidmessagingUserComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.people.list_com.google.android.apps.googlevoice")]
		public string? AndroidpeoplelistComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.people.list_com.google.android.gm")]
		public string? AndroidpeoplelistComgoogleandroidgm { get; init; }

		[JsonPropertyName("android.picture_com.android.chrome")]
		public string? AndroidpictureComandroidchrome { get; init; }

		[JsonPropertyName("android.picture_com.google.android.googlequicksearchbox")]
		public string? AndroidpictureComgoogleandroidgooglequicksearchbox { get; init; }

		[JsonPropertyName("android.picture_com.home.bible.verse.prayer")]
		public string? AndroidpictureComhomebibleverseprayer { get; init; }

		[JsonPropertyName("android.picture_com.microsoft.skydrive")]
		public string? AndroidpictureCommicrosoftskydrive { get; init; }

		[JsonPropertyName("android.picture_com.reddit.frontpage")]
		public string? AndroidpictureComredditfrontpage { get; init; }

		[JsonPropertyName("android.progress_com.amazon.dee.app")]
		public double? AndroidprogressComamazondeeapp { get; init; }

		[JsonPropertyName("android.progress_com.android.chrome")]
		public double? AndroidprogressComandroidchrome { get; init; }

		[JsonPropertyName("android.progress_com.directed.android.viper")]
		public double? AndroidprogressComdirectedandroidviper { get; init; }

		[JsonPropertyName("android.progress_com.facebook.katana")]
		public double? AndroidprogressComfacebookkatana { get; init; }

		[JsonPropertyName("android.progress_com.fandango")]
		public double? AndroidprogressComfandango { get; init; }

		[JsonPropertyName("android.progress_com.google.android.apps.docs")]
		public double? AndroidprogressComgoogleandroidappsdocs { get; init; }

		[JsonPropertyName("android.progress_com.google.android.apps.googlevoice")]
		public double? AndroidprogressComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.progress_com.google.android.apps.magazines")]
		public double? AndroidprogressComgoogleandroidappsmagazines { get; init; }

		[JsonPropertyName("android.progress_com.google.android.apps.photos")]
		public double? AndroidprogressComgoogleandroidappsphotos { get; init; }

		[JsonPropertyName("android.progress_com.google.android.calendar")]
		public double? AndroidprogressComgoogleandroidcalendar { get; init; }

		[JsonPropertyName("android.progress_com.google.android.gm")]
		public double? AndroidprogressComgoogleandroidgm { get; init; }

		[JsonPropertyName("android.progress_com.google.android.gms")]
		public double? AndroidprogressComgoogleandroidgms { get; init; }

		[JsonPropertyName("android.progress_com.google.android.googlequicksearchbox")]
		public double? AndroidprogressComgoogleandroidgooglequicksearchbox { get; init; }

		[JsonPropertyName("android.progress_com.home.bible.verse.prayer")]
		public double? AndroidprogressComhomebibleverseprayer { get; init; }

		[JsonPropertyName("android.progress_com.imdb.mobile")]
		public double? AndroidprogressComimdbmobile { get; init; }

		[JsonPropertyName("android.progress_com.linkedin.android")]
		public double? AndroidprogressComlinkedinandroid { get; init; }

		[JsonPropertyName("android.progress_com.microsoft.skydrive")]
		public double? AndroidprogressCommicrosoftskydrive { get; init; }

		[JsonPropertyName("android.progress_com.nianticlabs.pokemongo")]
		public double? AndroidprogressComnianticlabspokemongo { get; init; }

		[JsonPropertyName("android.progress_com.particlenews.newsbreak")]
		public double? AndroidprogressComparticlenewsnewsbreak { get; init; }

		[JsonPropertyName("android.progress_com.reddit.frontpage")]
		public double? AndroidprogressComredditfrontpage { get; init; }

		[JsonPropertyName("android.progress_com.samsung.android.app.reminder")]
		public double? AndroidprogressComsamsungandroidappreminder { get; init; }

		[JsonPropertyName("android.progress_com.snapchat.android")]
		public double? AndroidprogressComsnapchatandroid { get; init; }

		[JsonPropertyName("android.progress_com.thumbtack.consumer")]
		public double? AndroidprogressComthumbtackconsumer { get; init; }

		[JsonPropertyName("android.progress_com.ziprecruiter.android.release")]
		public double? AndroidprogressComziprecruiterandroidrelease { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.amazon.dee.app")]
		public bool? AndroidprogressIndeterminateComamazondeeapp { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.android.chrome")]
		public bool? AndroidprogressIndeterminateComandroidchrome { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.directed.android.viper")]
		public bool? AndroidprogressIndeterminateComdirectedandroidviper { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.facebook.katana")]
		public bool? AndroidprogressIndeterminateComfacebookkatana { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.fandango")]
		public bool? AndroidprogressIndeterminateComfandango { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.google.android.apps.docs")]
		public bool? AndroidprogressIndeterminateComgoogleandroidappsdocs { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.google.android.apps.googlevoice")]
		public bool? AndroidprogressIndeterminateComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.google.android.apps.magazines")]
		public bool? AndroidprogressIndeterminateComgoogleandroidappsmagazines { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.google.android.apps.photos")]
		public bool? AndroidprogressIndeterminateComgoogleandroidappsphotos { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.google.android.calendar")]
		public bool? AndroidprogressIndeterminateComgoogleandroidcalendar { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.google.android.gm")]
		public bool? AndroidprogressIndeterminateComgoogleandroidgm { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.google.android.gms")]
		public bool? AndroidprogressIndeterminateComgoogleandroidgms { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.google.android.googlequicksearchbox")]
		public bool? AndroidprogressIndeterminateComgoogleandroidgooglequicksearchbox { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.home.bible.verse.prayer")]
		public bool? AndroidprogressIndeterminateComhomebibleverseprayer { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.imdb.mobile")]
		public bool? AndroidprogressIndeterminateComimdbmobile { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.linkedin.android")]
		public bool? AndroidprogressIndeterminateComlinkedinandroid { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.microsoft.skydrive")]
		public bool? AndroidprogressIndeterminateCommicrosoftskydrive { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.nianticlabs.pokemongo")]
		public bool? AndroidprogressIndeterminateComnianticlabspokemongo { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.particlenews.newsbreak")]
		public bool? AndroidprogressIndeterminateComparticlenewsnewsbreak { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.reddit.frontpage")]
		public bool? AndroidprogressIndeterminateComredditfrontpage { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.samsung.android.app.reminder")]
		public bool? AndroidprogressIndeterminateComsamsungandroidappreminder { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.snapchat.android")]
		public bool? AndroidprogressIndeterminateComsnapchatandroid { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.thumbtack.consumer")]
		public bool? AndroidprogressIndeterminateComthumbtackconsumer { get; init; }

		[JsonPropertyName("android.progressIndeterminate_com.ziprecruiter.android.release")]
		public bool? AndroidprogressIndeterminateComziprecruiterandroidrelease { get; init; }

		[JsonPropertyName("android.progressIndeterminate_io.homeassistant.companion.android")]
		public bool? AndroidprogressIndeterminateIohomeassistantcompanionandroid { get; init; }

		[JsonPropertyName("android.progress_io.homeassistant.companion.android")]
		public double? AndroidprogressIohomeassistantcompanionandroid { get; init; }

		[JsonPropertyName("android.progressMax_com.amazon.dee.app")]
		public double? AndroidprogressMaxComamazondeeapp { get; init; }

		[JsonPropertyName("android.progressMax_com.android.chrome")]
		public double? AndroidprogressMaxComandroidchrome { get; init; }

		[JsonPropertyName("android.progressMax_com.directed.android.viper")]
		public double? AndroidprogressMaxComdirectedandroidviper { get; init; }

		[JsonPropertyName("android.progressMax_com.facebook.katana")]
		public double? AndroidprogressMaxComfacebookkatana { get; init; }

		[JsonPropertyName("android.progressMax_com.fandango")]
		public double? AndroidprogressMaxComfandango { get; init; }

		[JsonPropertyName("android.progressMax_com.google.android.apps.docs")]
		public double? AndroidprogressMaxComgoogleandroidappsdocs { get; init; }

		[JsonPropertyName("android.progressMax_com.google.android.apps.googlevoice")]
		public double? AndroidprogressMaxComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.progressMax_com.google.android.apps.magazines")]
		public double? AndroidprogressMaxComgoogleandroidappsmagazines { get; init; }

		[JsonPropertyName("android.progressMax_com.google.android.apps.photos")]
		public double? AndroidprogressMaxComgoogleandroidappsphotos { get; init; }

		[JsonPropertyName("android.progressMax_com.google.android.calendar")]
		public double? AndroidprogressMaxComgoogleandroidcalendar { get; init; }

		[JsonPropertyName("android.progressMax_com.google.android.gm")]
		public double? AndroidprogressMaxComgoogleandroidgm { get; init; }

		[JsonPropertyName("android.progressMax_com.google.android.gms")]
		public double? AndroidprogressMaxComgoogleandroidgms { get; init; }

		[JsonPropertyName("android.progressMax_com.google.android.googlequicksearchbox")]
		public double? AndroidprogressMaxComgoogleandroidgooglequicksearchbox { get; init; }

		[JsonPropertyName("android.progressMax_com.home.bible.verse.prayer")]
		public double? AndroidprogressMaxComhomebibleverseprayer { get; init; }

		[JsonPropertyName("android.progressMax_com.imdb.mobile")]
		public double? AndroidprogressMaxComimdbmobile { get; init; }

		[JsonPropertyName("android.progressMax_com.linkedin.android")]
		public double? AndroidprogressMaxComlinkedinandroid { get; init; }

		[JsonPropertyName("android.progressMax_com.microsoft.skydrive")]
		public double? AndroidprogressMaxCommicrosoftskydrive { get; init; }

		[JsonPropertyName("android.progressMax_com.nianticlabs.pokemongo")]
		public double? AndroidprogressMaxComnianticlabspokemongo { get; init; }

		[JsonPropertyName("android.progressMax_com.particlenews.newsbreak")]
		public double? AndroidprogressMaxComparticlenewsnewsbreak { get; init; }

		[JsonPropertyName("android.progressMax_com.reddit.frontpage")]
		public double? AndroidprogressMaxComredditfrontpage { get; init; }

		[JsonPropertyName("android.progressMax_com.samsung.android.app.reminder")]
		public double? AndroidprogressMaxComsamsungandroidappreminder { get; init; }

		[JsonPropertyName("android.progressMax_com.snapchat.android")]
		public double? AndroidprogressMaxComsnapchatandroid { get; init; }

		[JsonPropertyName("android.progressMax_com.thumbtack.consumer")]
		public double? AndroidprogressMaxComthumbtackconsumer { get; init; }

		[JsonPropertyName("android.progressMax_com.ziprecruiter.android.release")]
		public double? AndroidprogressMaxComziprecruiterandroidrelease { get; init; }

		[JsonPropertyName("android.progressMax_io.homeassistant.companion.android")]
		public double? AndroidprogressMaxIohomeassistantcompanionandroid { get; init; }

		[JsonPropertyName("android.reduced.images_com.amazon.dee.app")]
		public bool? AndroidreducedimagesComamazondeeapp { get; init; }

		[JsonPropertyName("android.reduced.images_com.amazon.mShop.android.shopping")]
		public bool? AndroidreducedimagesComamazonmShopandroidshopping { get; init; }

		[JsonPropertyName("android.reduced.images_com.android.chrome")]
		public bool? AndroidreducedimagesComandroidchrome { get; init; }

		[JsonPropertyName("android.reduced.images_com.directed.android.viper")]
		public bool? AndroidreducedimagesComdirectedandroidviper { get; init; }

		[JsonPropertyName("android.reduced.images_com.facebook.katana")]
		public bool? AndroidreducedimagesComfacebookkatana { get; init; }

		[JsonPropertyName("android.reduced.images_com.fandango")]
		public bool? AndroidreducedimagesComfandango { get; init; }

		[JsonPropertyName("android.reduced.images_com.google.android.apps.docs")]
		public bool? AndroidreducedimagesComgoogleandroidappsdocs { get; init; }

		[JsonPropertyName("android.reduced.images_com.google.android.apps.googlevoice")]
		public bool? AndroidreducedimagesComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.reduced.images_com.google.android.apps.magazines")]
		public bool? AndroidreducedimagesComgoogleandroidappsmagazines { get; init; }

		[JsonPropertyName("android.reduced.images_com.google.android.apps.photos")]
		public bool? AndroidreducedimagesComgoogleandroidappsphotos { get; init; }

		[JsonPropertyName("android.reduced.images_com.google.android.calendar")]
		public bool? AndroidreducedimagesComgoogleandroidcalendar { get; init; }

		[JsonPropertyName("android.reduced.images_com.google.android.gm")]
		public bool? AndroidreducedimagesComgoogleandroidgm { get; init; }

		[JsonPropertyName("android.reduced.images_com.google.android.gms")]
		public bool? AndroidreducedimagesComgoogleandroidgms { get; init; }

		[JsonPropertyName("android.reduced.images_com.google.android.googlequicksearchbox")]
		public bool? AndroidreducedimagesComgoogleandroidgooglequicksearchbox { get; init; }

		[JsonPropertyName("android.reduced.images_com.home.bible.verse.prayer")]
		public bool? AndroidreducedimagesComhomebibleverseprayer { get; init; }

		[JsonPropertyName("android.reduced.images_com.imdb.mobile")]
		public bool? AndroidreducedimagesComimdbmobile { get; init; }

		[JsonPropertyName("android.reduced.images_com.joaomgcd.autolocation")]
		public bool? AndroidreducedimagesComjoaomgcdautolocation { get; init; }

		[JsonPropertyName("android.reduced.images_com.linkedin.android")]
		public bool? AndroidreducedimagesComlinkedinandroid { get; init; }

		[JsonPropertyName("android.reduced.images_com.microsoft.skydrive")]
		public bool? AndroidreducedimagesCommicrosoftskydrive { get; init; }

		[JsonPropertyName("android.reduced.images_com.nianticlabs.pokemongo")]
		public bool? AndroidreducedimagesComnianticlabspokemongo { get; init; }

		[JsonPropertyName("android.reduced.images_com.particlenews.newsbreak")]
		public bool? AndroidreducedimagesComparticlenewsnewsbreak { get; init; }

		[JsonPropertyName("android.reduced.images_com.reddit.frontpage")]
		public bool? AndroidreducedimagesComredditfrontpage { get; init; }

		[JsonPropertyName("android.reduced.images_com.samsung.android.app.reminder")]
		public bool? AndroidreducedimagesComsamsungandroidappreminder { get; init; }

		[JsonPropertyName("android.reduced.images_com.samsung.android.email.provider")]
		public bool? AndroidreducedimagesComsamsungandroidemailprovider { get; init; }

		[JsonPropertyName("android.reduced.images_com.snapchat.android")]
		public bool? AndroidreducedimagesComsnapchatandroid { get; init; }

		[JsonPropertyName("android.reduced.images_com.statefarm.dssm")]
		public bool? AndroidreducedimagesComstatefarmdssm { get; init; }

		[JsonPropertyName("android.reduced.images_com.thumbtack.consumer")]
		public bool? AndroidreducedimagesComthumbtackconsumer { get; init; }

		[JsonPropertyName("android.reduced.images_com.vinsmart.android.dialer.att")]
		public bool? AndroidreducedimagesComvinsmartandroiddialeratt { get; init; }

		[JsonPropertyName("android.reduced.images_com.ziprecruiter.android.release")]
		public bool? AndroidreducedimagesComziprecruiterandroidrelease { get; init; }

		[JsonPropertyName("android.reduced.images_io.homeassistant.companion.android")]
		public bool? AndroidreducedimagesIohomeassistantcompanionandroid { get; init; }

		[JsonPropertyName("android.reduced.images_net.dinglisch.android.taskerm")]
		public bool? AndroidreducedimagesNetdinglischandroidtaskerm { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.amazon.dee.app")]
		public string? AndroidremoteInputHistoryComamazondeeapp { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.android.chrome")]
		public string? AndroidremoteInputHistoryComandroidchrome { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.directed.android.viper")]
		public string? AndroidremoteInputHistoryComdirectedandroidviper { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.facebook.katana")]
		public string? AndroidremoteInputHistoryComfacebookkatana { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.fandango")]
		public string? AndroidremoteInputHistoryComfandango { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.google.android.apps.docs")]
		public string? AndroidremoteInputHistoryComgoogleandroidappsdocs { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.google.android.apps.googlevoice")]
		public string? AndroidremoteInputHistoryComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.google.android.apps.magazines")]
		public string? AndroidremoteInputHistoryComgoogleandroidappsmagazines { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.google.android.apps.photos")]
		public string? AndroidremoteInputHistoryComgoogleandroidappsphotos { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.google.android.calendar")]
		public string? AndroidremoteInputHistoryComgoogleandroidcalendar { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.google.android.gm")]
		public string? AndroidremoteInputHistoryComgoogleandroidgm { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.google.android.gms")]
		public string? AndroidremoteInputHistoryComgoogleandroidgms { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.google.android.googlequicksearchbox")]
		public string? AndroidremoteInputHistoryComgoogleandroidgooglequicksearchbox { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.home.bible.verse.prayer")]
		public string? AndroidremoteInputHistoryComhomebibleverseprayer { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.imdb.mobile")]
		public string? AndroidremoteInputHistoryComimdbmobile { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.linkedin.android")]
		public string? AndroidremoteInputHistoryComlinkedinandroid { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.microsoft.skydrive")]
		public string? AndroidremoteInputHistoryCommicrosoftskydrive { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.nianticlabs.pokemongo")]
		public string? AndroidremoteInputHistoryComnianticlabspokemongo { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.particlenews.newsbreak")]
		public string? AndroidremoteInputHistoryComparticlenewsnewsbreak { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.reddit.frontpage")]
		public string? AndroidremoteInputHistoryComredditfrontpage { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.samsung.android.app.reminder")]
		public string? AndroidremoteInputHistoryComsamsungandroidappreminder { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.snapchat.android")]
		public string? AndroidremoteInputHistoryComsnapchatandroid { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.thumbtack.consumer")]
		public string? AndroidremoteInputHistoryComthumbtackconsumer { get; init; }

		[JsonPropertyName("android.remoteInputHistory_com.ziprecruiter.android.release")]
		public string? AndroidremoteInputHistoryComziprecruiterandroidrelease { get; init; }

		[JsonPropertyName("android.remoteInputHistory_io.homeassistant.companion.android")]
		public string? AndroidremoteInputHistoryIohomeassistantcompanionandroid { get; init; }

		[JsonPropertyName("android.selfDisplayName_com.google.android.apps.googlevoice")]
		public string? AndroidselfDisplayNameComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.showChronometer_com.amazon.dee.app")]
		public bool? AndroidshowChronometerComamazondeeapp { get; init; }

		[JsonPropertyName("android.showChronometer_com.android.chrome")]
		public bool? AndroidshowChronometerComandroidchrome { get; init; }

		[JsonPropertyName("android.showChronometer_com.directed.android.viper")]
		public bool? AndroidshowChronometerComdirectedandroidviper { get; init; }

		[JsonPropertyName("android.showChronometer_com.facebook.katana")]
		public bool? AndroidshowChronometerComfacebookkatana { get; init; }

		[JsonPropertyName("android.showChronometer_com.fandango")]
		public bool? AndroidshowChronometerComfandango { get; init; }

		[JsonPropertyName("android.showChronometer_com.google.android.apps.docs")]
		public bool? AndroidshowChronometerComgoogleandroidappsdocs { get; init; }

		[JsonPropertyName("android.showChronometer_com.google.android.apps.googlevoice")]
		public bool? AndroidshowChronometerComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.showChronometer_com.google.android.apps.magazines")]
		public bool? AndroidshowChronometerComgoogleandroidappsmagazines { get; init; }

		[JsonPropertyName("android.showChronometer_com.google.android.apps.photos")]
		public bool? AndroidshowChronometerComgoogleandroidappsphotos { get; init; }

		[JsonPropertyName("android.showChronometer_com.google.android.calendar")]
		public bool? AndroidshowChronometerComgoogleandroidcalendar { get; init; }

		[JsonPropertyName("android.showChronometer_com.google.android.gm")]
		public bool? AndroidshowChronometerComgoogleandroidgm { get; init; }

		[JsonPropertyName("android.showChronometer_com.google.android.gms")]
		public bool? AndroidshowChronometerComgoogleandroidgms { get; init; }

		[JsonPropertyName("android.showChronometer_com.google.android.googlequicksearchbox")]
		public bool? AndroidshowChronometerComgoogleandroidgooglequicksearchbox { get; init; }

		[JsonPropertyName("android.showChronometer_com.home.bible.verse.prayer")]
		public bool? AndroidshowChronometerComhomebibleverseprayer { get; init; }

		[JsonPropertyName("android.showChronometer_com.imdb.mobile")]
		public bool? AndroidshowChronometerComimdbmobile { get; init; }

		[JsonPropertyName("android.showChronometer_com.linkedin.android")]
		public bool? AndroidshowChronometerComlinkedinandroid { get; init; }

		[JsonPropertyName("android.showChronometer_com.microsoft.skydrive")]
		public bool? AndroidshowChronometerCommicrosoftskydrive { get; init; }

		[JsonPropertyName("android.showChronometer_com.nianticlabs.pokemongo")]
		public bool? AndroidshowChronometerComnianticlabspokemongo { get; init; }

		[JsonPropertyName("android.showChronometer_com.particlenews.newsbreak")]
		public bool? AndroidshowChronometerComparticlenewsnewsbreak { get; init; }

		[JsonPropertyName("android.showChronometer_com.reddit.frontpage")]
		public bool? AndroidshowChronometerComredditfrontpage { get; init; }

		[JsonPropertyName("android.showChronometer_com.samsung.android.app.reminder")]
		public bool? AndroidshowChronometerComsamsungandroidappreminder { get; init; }

		[JsonPropertyName("android.showChronometer_com.snapchat.android")]
		public bool? AndroidshowChronometerComsnapchatandroid { get; init; }

		[JsonPropertyName("android.showChronometer_com.thumbtack.consumer")]
		public bool? AndroidshowChronometerComthumbtackconsumer { get; init; }

		[JsonPropertyName("android.showChronometer_com.ziprecruiter.android.release")]
		public bool? AndroidshowChronometerComziprecruiterandroidrelease { get; init; }

		[JsonPropertyName("android.showChronometer_io.homeassistant.companion.android")]
		public bool? AndroidshowChronometerIohomeassistantcompanionandroid { get; init; }

		[JsonPropertyName("android.showWhen_com.amazon.dee.app")]
		public bool? AndroidshowWhenComamazondeeapp { get; init; }

		[JsonPropertyName("android.showWhen_com.android.chrome")]
		public bool? AndroidshowWhenComandroidchrome { get; init; }

		[JsonPropertyName("android.showWhen_com.directed.android.viper")]
		public bool? AndroidshowWhenComdirectedandroidviper { get; init; }

		[JsonPropertyName("android.showWhen_com.facebook.katana")]
		public bool? AndroidshowWhenComfacebookkatana { get; init; }

		[JsonPropertyName("android.showWhen_com.fandango")]
		public bool? AndroidshowWhenComfandango { get; init; }

		[JsonPropertyName("android.showWhen_com.google.android.apps.docs")]
		public bool? AndroidshowWhenComgoogleandroidappsdocs { get; init; }

		[JsonPropertyName("android.showWhen_com.google.android.apps.googlevoice")]
		public bool? AndroidshowWhenComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.showWhen_com.google.android.apps.magazines")]
		public bool? AndroidshowWhenComgoogleandroidappsmagazines { get; init; }

		[JsonPropertyName("android.showWhen_com.google.android.apps.photos")]
		public bool? AndroidshowWhenComgoogleandroidappsphotos { get; init; }

		[JsonPropertyName("android.showWhen_com.google.android.calendar")]
		public bool? AndroidshowWhenComgoogleandroidcalendar { get; init; }

		[JsonPropertyName("android.showWhen_com.google.android.gm")]
		public bool? AndroidshowWhenComgoogleandroidgm { get; init; }

		[JsonPropertyName("android.showWhen_com.google.android.gms")]
		public bool? AndroidshowWhenComgoogleandroidgms { get; init; }

		[JsonPropertyName("android.showWhen_com.google.android.googlequicksearchbox")]
		public bool? AndroidshowWhenComgoogleandroidgooglequicksearchbox { get; init; }

		[JsonPropertyName("android.showWhen_com.home.bible.verse.prayer")]
		public bool? AndroidshowWhenComhomebibleverseprayer { get; init; }

		[JsonPropertyName("android.showWhen_com.imdb.mobile")]
		public bool? AndroidshowWhenComimdbmobile { get; init; }

		[JsonPropertyName("android.showWhen_com.joaomgcd.autolocation")]
		public bool? AndroidshowWhenComjoaomgcdautolocation { get; init; }

		[JsonPropertyName("android.showWhen_com.linkedin.android")]
		public bool? AndroidshowWhenComlinkedinandroid { get; init; }

		[JsonPropertyName("android.showWhen_com.microsoft.skydrive")]
		public bool? AndroidshowWhenCommicrosoftskydrive { get; init; }

		[JsonPropertyName("android.showWhen_com.nianticlabs.pokemongo")]
		public bool? AndroidshowWhenComnianticlabspokemongo { get; init; }

		[JsonPropertyName("android.showWhen_com.particlenews.newsbreak")]
		public bool? AndroidshowWhenComparticlenewsnewsbreak { get; init; }

		[JsonPropertyName("android.showWhen_com.reddit.frontpage")]
		public bool? AndroidshowWhenComredditfrontpage { get; init; }

		[JsonPropertyName("android.showWhen_com.samsung.android.app.reminder")]
		public bool? AndroidshowWhenComsamsungandroidappreminder { get; init; }

		[JsonPropertyName("android.showWhen_com.samsung.android.email.provider")]
		public bool? AndroidshowWhenComsamsungandroidemailprovider { get; init; }

		[JsonPropertyName("android.showWhen_com.snapchat.android")]
		public bool? AndroidshowWhenComsnapchatandroid { get; init; }

		[JsonPropertyName("android.showWhen_com.thumbtack.consumer")]
		public bool? AndroidshowWhenComthumbtackconsumer { get; init; }

		[JsonPropertyName("android.showWhen_com.ziprecruiter.android.release")]
		public bool? AndroidshowWhenComziprecruiterandroidrelease { get; init; }

		[JsonPropertyName("android.showWhen_io.homeassistant.companion.android")]
		public bool? AndroidshowWhenIohomeassistantcompanionandroid { get; init; }

		[JsonPropertyName("android.subText_com.amazon.dee.app")]
		public string? AndroidsubTextComamazondeeapp { get; init; }

		[JsonPropertyName("android.subText_com.amazon.mShop.android.shopping")]
		public string? AndroidsubTextComamazonmShopandroidshopping { get; init; }

		[JsonPropertyName("android.subText_com.android.chrome")]
		public string? AndroidsubTextComandroidchrome { get; init; }

		[JsonPropertyName("android.subText_com.directed.android.viper")]
		public string? AndroidsubTextComdirectedandroidviper { get; init; }

		[JsonPropertyName("android.subText_com.facebook.katana")]
		public string? AndroidsubTextComfacebookkatana { get; init; }

		[JsonPropertyName("android.subText_com.fandango")]
		public string? AndroidsubTextComfandango { get; init; }

		[JsonPropertyName("android.subText_com.google.android.apps.docs")]
		public string? AndroidsubTextComgoogleandroidappsdocs { get; init; }

		[JsonPropertyName("android.subText_com.google.android.apps.googlevoice")]
		public string? AndroidsubTextComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.subText_com.google.android.apps.magazines")]
		public string? AndroidsubTextComgoogleandroidappsmagazines { get; init; }

		[JsonPropertyName("android.subText_com.google.android.apps.photos")]
		public string? AndroidsubTextComgoogleandroidappsphotos { get; init; }

		[JsonPropertyName("android.subText_com.google.android.calendar")]
		public string? AndroidsubTextComgoogleandroidcalendar { get; init; }

		[JsonPropertyName("android.subText_com.google.android.gm")]
		public string? AndroidsubTextComgoogleandroidgm { get; init; }

		[JsonPropertyName("android.subText_com.google.android.gms")]
		public string? AndroidsubTextComgoogleandroidgms { get; init; }

		[JsonPropertyName("android.subText_com.google.android.googlequicksearchbox")]
		public string? AndroidsubTextComgoogleandroidgooglequicksearchbox { get; init; }

		[JsonPropertyName("android.subText_com.home.bible.verse.prayer")]
		public string? AndroidsubTextComhomebibleverseprayer { get; init; }

		[JsonPropertyName("android.subText_com.imdb.mobile")]
		public string? AndroidsubTextComimdbmobile { get; init; }

		[JsonPropertyName("android.subText_com.linkedin.android")]
		public string? AndroidsubTextComlinkedinandroid { get; init; }

		[JsonPropertyName("android.subText_com.microsoft.skydrive")]
		public string? AndroidsubTextCommicrosoftskydrive { get; init; }

		[JsonPropertyName("android.subText_com.nianticlabs.pokemongo")]
		public string? AndroidsubTextComnianticlabspokemongo { get; init; }

		[JsonPropertyName("android.subText_com.particlenews.newsbreak")]
		public string? AndroidsubTextComparticlenewsnewsbreak { get; init; }

		[JsonPropertyName("android.subText_com.reddit.frontpage")]
		public string? AndroidsubTextComredditfrontpage { get; init; }

		[JsonPropertyName("android.subText_com.samsung.android.app.reminder")]
		public string? AndroidsubTextComsamsungandroidappreminder { get; init; }

		[JsonPropertyName("android.subText_com.samsung.android.email.provider")]
		public string? AndroidsubTextComsamsungandroidemailprovider { get; init; }

		[JsonPropertyName("android.subText_com.snapchat.android")]
		public string? AndroidsubTextComsnapchatandroid { get; init; }

		[JsonPropertyName("android.subText_com.statefarm.dssm")]
		public string? AndroidsubTextComstatefarmdssm { get; init; }

		[JsonPropertyName("android.subText_com.thumbtack.consumer")]
		public string? AndroidsubTextComthumbtackconsumer { get; init; }

		[JsonPropertyName("android.subText_com.ziprecruiter.android.release")]
		public string? AndroidsubTextComziprecruiterandroidrelease { get; init; }

		[JsonPropertyName("android.subText_io.homeassistant.companion.android")]
		public string? AndroidsubTextIohomeassistantcompanionandroid { get; init; }

		[JsonPropertyName("android.subText_net.dinglisch.android.taskerm")]
		public string? AndroidsubTextNetdinglischandroidtaskerm { get; init; }

		[JsonPropertyName("android.summaryText_com.android.chrome")]
		public string? AndroidsummaryTextComandroidchrome { get; init; }

		[JsonPropertyName("android.summaryText_com.home.bible.verse.prayer")]
		public string? AndroidsummaryTextComhomebibleverseprayer { get; init; }

		[JsonPropertyName("android.summaryText_com.samsung.android.email.provider")]
		public string? AndroidsummaryTextComsamsungandroidemailprovider { get; init; }

		[JsonPropertyName("android.summaryText_net.dinglisch.android.taskerm")]
		public string? AndroidsummaryTextNetdinglischandroidtaskerm { get; init; }

		[JsonPropertyName("android.support.v4.app.extra.COMPAT_TEMPLATE_com.google.android.apps.docs")]
		public string? Androidsupportv4appextraCOMPATTEMPLATEComgoogleandroidappsdocs { get; init; }

		[JsonPropertyName("android.support.v4.app.extra.COMPAT_TEMPLATE_com.google.android.apps.googlevoice")]
		public string? Androidsupportv4appextraCOMPATTEMPLATEComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.support.v4.app.extra.COMPAT_TEMPLATE_com.google.android.apps.magazines")]
		public string? Androidsupportv4appextraCOMPATTEMPLATEComgoogleandroidappsmagazines { get; init; }

		[JsonPropertyName("android.support.v4.app.extra.COMPAT_TEMPLATE_com.google.android.apps.photos")]
		public string? Androidsupportv4appextraCOMPATTEMPLATEComgoogleandroidappsphotos { get; init; }

		[JsonPropertyName("android.support.v4.app.extra.COMPAT_TEMPLATE_com.google.android.calendar")]
		public string? Androidsupportv4appextraCOMPATTEMPLATEComgoogleandroidcalendar { get; init; }

		[JsonPropertyName("android.support.v4.app.extra.COMPAT_TEMPLATE_com.google.android.gm")]
		public string? Androidsupportv4appextraCOMPATTEMPLATEComgoogleandroidgm { get; init; }

		[JsonPropertyName("android.support.v4.app.extra.COMPAT_TEMPLATE_com.google.android.gms")]
		public string? Androidsupportv4appextraCOMPATTEMPLATEComgoogleandroidgms { get; init; }

		[JsonPropertyName("android.support.v4.app.extra.COMPAT_TEMPLATE_com.google.android.googlequicksearchbox")]
		public string? Androidsupportv4appextraCOMPATTEMPLATEComgoogleandroidgooglequicksearchbox { get; init; }

		[JsonPropertyName("android.template_com.amazon.dee.app")]
		public string? AndroidtemplateComamazondeeapp { get; init; }

		[JsonPropertyName("android.template_com.amazon.mShop.android.shopping")]
		public string? AndroidtemplateComamazonmShopandroidshopping { get; init; }

		[JsonPropertyName("android.template_com.android.chrome")]
		public string? AndroidtemplateComandroidchrome { get; init; }

		[JsonPropertyName("android.template_com.directed.android.viper")]
		public string? AndroidtemplateComdirectedandroidviper { get; init; }

		[JsonPropertyName("android.template_com.facebook.katana")]
		public string? AndroidtemplateComfacebookkatana { get; init; }

		[JsonPropertyName("android.template_com.fandango")]
		public string? AndroidtemplateComfandango { get; init; }

		[JsonPropertyName("android.template_com.google.android.apps.docs")]
		public string? AndroidtemplateComgoogleandroidappsdocs { get; init; }

		[JsonPropertyName("android.template_com.google.android.apps.googlevoice")]
		public string? AndroidtemplateComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.template_com.google.android.apps.magazines")]
		public string? AndroidtemplateComgoogleandroidappsmagazines { get; init; }

		[JsonPropertyName("android.template_com.google.android.apps.photos")]
		public string? AndroidtemplateComgoogleandroidappsphotos { get; init; }

		[JsonPropertyName("android.template_com.google.android.calendar")]
		public string? AndroidtemplateComgoogleandroidcalendar { get; init; }

		[JsonPropertyName("android.template_com.google.android.gm")]
		public string? AndroidtemplateComgoogleandroidgm { get; init; }

		[JsonPropertyName("android.template_com.google.android.gms")]
		public string? AndroidtemplateComgoogleandroidgms { get; init; }

		[JsonPropertyName("android.template_com.google.android.googlequicksearchbox")]
		public string? AndroidtemplateComgoogleandroidgooglequicksearchbox { get; init; }

		[JsonPropertyName("android.template_com.home.bible.verse.prayer")]
		public string? AndroidtemplateComhomebibleverseprayer { get; init; }

		[JsonPropertyName("android.template_com.imdb.mobile")]
		public string? AndroidtemplateComimdbmobile { get; init; }

		[JsonPropertyName("android.template_com.linkedin.android")]
		public string? AndroidtemplateComlinkedinandroid { get; init; }

		[JsonPropertyName("android.template_com.microsoft.skydrive")]
		public string? AndroidtemplateCommicrosoftskydrive { get; init; }

		[JsonPropertyName("android.template_com.nianticlabs.pokemongo")]
		public string? AndroidtemplateComnianticlabspokemongo { get; init; }

		[JsonPropertyName("android.template_com.reddit.frontpage")]
		public string? AndroidtemplateComredditfrontpage { get; init; }

		[JsonPropertyName("android.template_com.samsung.android.email.provider")]
		public string? AndroidtemplateComsamsungandroidemailprovider { get; init; }

		[JsonPropertyName("android.template_com.snapchat.android")]
		public string? AndroidtemplateComsnapchatandroid { get; init; }

		[JsonPropertyName("android.template_com.statefarm.dssm")]
		public string? AndroidtemplateComstatefarmdssm { get; init; }

		[JsonPropertyName("android.template_com.thumbtack.consumer")]
		public string? AndroidtemplateComthumbtackconsumer { get; init; }

		[JsonPropertyName("android.template_com.ziprecruiter.android.release")]
		public string? AndroidtemplateComziprecruiterandroidrelease { get; init; }

		[JsonPropertyName("android.template_net.dinglisch.android.taskerm")]
		public string? AndroidtemplateNetdinglischandroidtaskerm { get; init; }

		[JsonPropertyName("android.text_com.amazon.dee.app")]
		public string? AndroidtextComamazondeeapp { get; init; }

		[JsonPropertyName("android.text_com.amazon.mShop.android.shopping")]
		public string? AndroidtextComamazonmShopandroidshopping { get; init; }

		[JsonPropertyName("android.text_com.android.chrome")]
		public string? AndroidtextComandroidchrome { get; init; }

		[JsonPropertyName("android.text_com.directed.android.viper")]
		public string? AndroidtextComdirectedandroidviper { get; init; }

		[JsonPropertyName("android.text_com.facebook.katana")]
		public string? AndroidtextComfacebookkatana { get; init; }

		[JsonPropertyName("android.text_com.fandango")]
		public string? AndroidtextComfandango { get; init; }

		[JsonPropertyName("android.text_com.google.android.apps.docs")]
		public string? AndroidtextComgoogleandroidappsdocs { get; init; }

		[JsonPropertyName("android.text_com.google.android.apps.googlevoice")]
		public string? AndroidtextComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.text_com.google.android.apps.magazines")]
		public string? AndroidtextComgoogleandroidappsmagazines { get; init; }

		[JsonPropertyName("android.text_com.google.android.apps.photos")]
		public string? AndroidtextComgoogleandroidappsphotos { get; init; }

		[JsonPropertyName("android.text_com.google.android.calendar")]
		public string? AndroidtextComgoogleandroidcalendar { get; init; }

		[JsonPropertyName("android.text_com.google.android.gm")]
		public string? AndroidtextComgoogleandroidgm { get; init; }

		[JsonPropertyName("android.text_com.google.android.gms")]
		public string? AndroidtextComgoogleandroidgms { get; init; }

		[JsonPropertyName("android.text_com.google.android.googlequicksearchbox")]
		public string? AndroidtextComgoogleandroidgooglequicksearchbox { get; init; }

		[JsonPropertyName("android.text_com.home.bible.verse.prayer")]
		public string? AndroidtextComhomebibleverseprayer { get; init; }

		[JsonPropertyName("android.text_com.imdb.mobile")]
		public string? AndroidtextComimdbmobile { get; init; }

		[JsonPropertyName("android.text_com.joaomgcd.autolocation")]
		public string? AndroidtextComjoaomgcdautolocation { get; init; }

		[JsonPropertyName("android.text_com.linkedin.android")]
		public string? AndroidtextComlinkedinandroid { get; init; }

		[JsonPropertyName("android.text_com.microsoft.skydrive")]
		public string? AndroidtextCommicrosoftskydrive { get; init; }

		[JsonPropertyName("android.text_com.nianticlabs.pokemongo")]
		public string? AndroidtextComnianticlabspokemongo { get; init; }

		[JsonPropertyName("android.text_com.particlenews.newsbreak")]
		public string? AndroidtextComparticlenewsnewsbreak { get; init; }

		[JsonPropertyName("android.text_com.reddit.frontpage")]
		public string? AndroidtextComredditfrontpage { get; init; }

		[JsonPropertyName("android.text_com.samsung.android.app.reminder")]
		public string? AndroidtextComsamsungandroidappreminder { get; init; }

		[JsonPropertyName("android.text_com.samsung.android.email.provider")]
		public string? AndroidtextComsamsungandroidemailprovider { get; init; }

		[JsonPropertyName("android.text_com.snapchat.android")]
		public string? AndroidtextComsnapchatandroid { get; init; }

		[JsonPropertyName("android.text_com.thumbtack.consumer")]
		public string? AndroidtextComthumbtackconsumer { get; init; }

		[JsonPropertyName("android.text_com.vinsmart.android.dialer.att")]
		public string? AndroidtextComvinsmartandroiddialeratt { get; init; }

		[JsonPropertyName("android.text_com.ziprecruiter.android.release")]
		public string? AndroidtextComziprecruiterandroidrelease { get; init; }

		[JsonPropertyName("android.text_io.homeassistant.companion.android")]
		public string? AndroidtextIohomeassistantcompanionandroid { get; init; }

		[JsonPropertyName("android.textLines_com.google.android.gm")]
		public string? AndroidtextLinesComgoogleandroidgm { get; init; }

		[JsonPropertyName("android.textLines_com.samsung.android.email.provider")]
		public string? AndroidtextLinesComsamsungandroidemailprovider { get; init; }

		[JsonPropertyName("android.text_net.dinglisch.android.taskerm")]
		public string? AndroidtextNetdinglischandroidtaskerm { get; init; }

		[JsonPropertyName("android.title.big_com.amazon.mShop.android.shopping")]
		public string? AndroidtitlebigComamazonmShopandroidshopping { get; init; }

		[JsonPropertyName("android.title.big_com.google.android.apps.docs")]
		public string? AndroidtitlebigComgoogleandroidappsdocs { get; init; }

		[JsonPropertyName("android.title.big_com.google.android.gms")]
		public string? AndroidtitlebigComgoogleandroidgms { get; init; }

		[JsonPropertyName("android.title.big_com.google.android.googlequicksearchbox")]
		public string? AndroidtitlebigComgoogleandroidgooglequicksearchbox { get; init; }

		[JsonPropertyName("android.title.big_com.home.bible.verse.prayer")]
		public string? AndroidtitlebigComhomebibleverseprayer { get; init; }

		[JsonPropertyName("android.title.big_com.ziprecruiter.android.release")]
		public string? AndroidtitlebigComziprecruiterandroidrelease { get; init; }

		[JsonPropertyName("android.title.big_net.dinglisch.android.taskerm")]
		public string? AndroidtitlebigNetdinglischandroidtaskerm { get; init; }

		[JsonPropertyName("android.title_com.amazon.dee.app")]
		public string? AndroidtitleComamazondeeapp { get; init; }

		[JsonPropertyName("android.title_com.amazon.mShop.android.shopping")]
		public string? AndroidtitleComamazonmShopandroidshopping { get; init; }

		[JsonPropertyName("android.title_com.android.chrome")]
		public string? AndroidtitleComandroidchrome { get; init; }

		[JsonPropertyName("android.title_com.directed.android.viper")]
		public string? AndroidtitleComdirectedandroidviper { get; init; }

		[JsonPropertyName("android.title_com.facebook.katana")]
		public string? AndroidtitleComfacebookkatana { get; init; }

		[JsonPropertyName("android.title_com.fandango")]
		public string? AndroidtitleComfandango { get; init; }

		[JsonPropertyName("android.title_com.google.android.apps.docs")]
		public string? AndroidtitleComgoogleandroidappsdocs { get; init; }

		[JsonPropertyName("android.title_com.google.android.apps.googlevoice")]
		public string? AndroidtitleComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.title_com.google.android.apps.magazines")]
		public string? AndroidtitleComgoogleandroidappsmagazines { get; init; }

		[JsonPropertyName("android.title_com.google.android.apps.photos")]
		public string? AndroidtitleComgoogleandroidappsphotos { get; init; }

		[JsonPropertyName("android.title_com.google.android.calendar")]
		public string? AndroidtitleComgoogleandroidcalendar { get; init; }

		[JsonPropertyName("android.title_com.google.android.gm")]
		public string? AndroidtitleComgoogleandroidgm { get; init; }

		[JsonPropertyName("android.title_com.google.android.gms")]
		public string? AndroidtitleComgoogleandroidgms { get; init; }

		[JsonPropertyName("android.title_com.google.android.googlequicksearchbox")]
		public string? AndroidtitleComgoogleandroidgooglequicksearchbox { get; init; }

		[JsonPropertyName("android.title_com.home.bible.verse.prayer")]
		public string? AndroidtitleComhomebibleverseprayer { get; init; }

		[JsonPropertyName("android.title_com.imdb.mobile")]
		public string? AndroidtitleComimdbmobile { get; init; }

		[JsonPropertyName("android.title_com.joaomgcd.autolocation")]
		public string? AndroidtitleComjoaomgcdautolocation { get; init; }

		[JsonPropertyName("android.title_com.linkedin.android")]
		public string? AndroidtitleComlinkedinandroid { get; init; }

		[JsonPropertyName("android.title_com.microsoft.skydrive")]
		public string? AndroidtitleCommicrosoftskydrive { get; init; }

		[JsonPropertyName("android.title_com.nianticlabs.pokemongo")]
		public string? AndroidtitleComnianticlabspokemongo { get; init; }

		[JsonPropertyName("android.title_com.particlenews.newsbreak")]
		public string? AndroidtitleComparticlenewsnewsbreak { get; init; }

		[JsonPropertyName("android.title_com.reddit.frontpage")]
		public string? AndroidtitleComredditfrontpage { get; init; }

		[JsonPropertyName("android.title_com.samsung.android.app.reminder")]
		public string? AndroidtitleComsamsungandroidappreminder { get; init; }

		[JsonPropertyName("android.title_com.samsung.android.email.provider")]
		public string? AndroidtitleComsamsungandroidemailprovider { get; init; }

		[JsonPropertyName("android.title_com.snapchat.android")]
		public string? AndroidtitleComsnapchatandroid { get; init; }

		[JsonPropertyName("android.title_com.statefarm.dssm")]
		public string? AndroidtitleComstatefarmdssm { get; init; }

		[JsonPropertyName("android.title_com.thumbtack.consumer")]
		public string? AndroidtitleComthumbtackconsumer { get; init; }

		[JsonPropertyName("android.title_com.vinsmart.android.dialer.att")]
		public string? AndroidtitleComvinsmartandroiddialeratt { get; init; }

		[JsonPropertyName("android.title_com.ziprecruiter.android.release")]
		public string? AndroidtitleComziprecruiterandroidrelease { get; init; }

		[JsonPropertyName("android.title_io.homeassistant.companion.android")]
		public string? AndroidtitleIohomeassistantcompanionandroid { get; init; }

		[JsonPropertyName("android.title_net.dinglisch.android.taskerm")]
		public string? AndroidtitleNetdinglischandroidtaskerm { get; init; }

		[JsonPropertyName("android.wearable.EXTENSIONS_com.google.android.apps.googlevoice")]
		public string? AndroidwearableEXTENSIONSComgoogleandroidappsgooglevoice { get; init; }

		[JsonPropertyName("android.wearable.EXTENSIONS_com.google.android.gm")]
		public string? AndroidwearableEXTENSIONSComgoogleandroidgm { get; init; }

		[JsonPropertyName("android.wearable.EXTENSIONS_com.joaomgcd.autolocation")]
		public string? AndroidwearableEXTENSIONSComjoaomgcdautolocation { get; init; }

		[JsonPropertyName("android.wearable.EXTENSIONS_com.samsung.android.email.provider")]
		public string? AndroidwearableEXTENSIONSComsamsungandroidemailprovider { get; init; }

		[JsonPropertyName("android.wearable.EXTENSIONS_com.snapchat.android")]
		public string? AndroidwearableEXTENSIONSComsnapchatandroid { get; init; }

		[JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.android.chrome")]
		public string? AndroidxcoreappextraCOMPATTEMPLATEComandroidchrome { get; init; }

		[JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.directed.android.viper")]
		public string? AndroidxcoreappextraCOMPATTEMPLATEComdirectedandroidviper { get; init; }

		[JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.facebook.katana")]
		public string? AndroidxcoreappextraCOMPATTEMPLATEComfacebookkatana { get; init; }

		[JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.fandango")]
		public string? AndroidxcoreappextraCOMPATTEMPLATEComfandango { get; init; }

		[JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.home.bible.verse.prayer")]
		public string? AndroidxcoreappextraCOMPATTEMPLATEComhomebibleverseprayer { get; init; }

		[JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.imdb.mobile")]
		public string? AndroidxcoreappextraCOMPATTEMPLATEComimdbmobile { get; init; }

		[JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.linkedin.android")]
		public string? AndroidxcoreappextraCOMPATTEMPLATEComlinkedinandroid { get; init; }

		[JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.microsoft.skydrive")]
		public string? AndroidxcoreappextraCOMPATTEMPLATECommicrosoftskydrive { get; init; }

		[JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.nianticlabs.pokemongo")]
		public string? AndroidxcoreappextraCOMPATTEMPLATEComnianticlabspokemongo { get; init; }

		[JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.reddit.frontpage")]
		public string? AndroidxcoreappextraCOMPATTEMPLATEComredditfrontpage { get; init; }

		[JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.snapchat.android")]
		public string? AndroidxcoreappextraCOMPATTEMPLATEComsnapchatandroid { get; init; }

		[JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.thumbtack.consumer")]
		public string? AndroidxcoreappextraCOMPATTEMPLATEComthumbtackconsumer { get; init; }

		[JsonPropertyName("androidx.core.app.extra.COMPAT_TEMPLATE_com.ziprecruiter.android.release")]
		public string? AndroidxcoreappextraCOMPATTEMPLATEComziprecruiterandroidrelease { get; init; }

		[JsonPropertyName("attribution")]
		public string? Attribution { get; init; }

		[JsonPropertyName("balancing_authority")]
		public string? BalancingAuthority { get; init; }

		[JsonPropertyName("buffer_usage_ratio")]
		public double? BufferUsageRatio { get; init; }

		[JsonPropertyName("collapse_key_com.fandango")]
		public string? CollapseKeyComfandango { get; init; }

		[JsonPropertyName("com.amazon.dee.app_1_is_clearable")]
		public bool? Comamazondeeapp1IsClearable { get; init; }

		[JsonPropertyName("com.amazon.dee.app_1_is_ongoing")]
		public bool? Comamazondeeapp1IsOngoing { get; init; }

		[JsonPropertyName("com.amazon.dee.app_1_post_time")]
		public double? Comamazondeeapp1PostTime { get; init; }

		[JsonPropertyName("com.amazon.mShop.android.shopping_1_is_clearable")]
		public bool? ComamazonmShopandroidshopping1IsClearable { get; init; }

		[JsonPropertyName("com.amazon.mShop.android.shopping_1_is_ongoing")]
		public bool? ComamazonmShopandroidshopping1IsOngoing { get; init; }

		[JsonPropertyName("com.amazon.mShop.android.shopping_1_post_time")]
		public double? ComamazonmShopandroidshopping1PostTime { get; init; }

		[JsonPropertyName("com.android.chrome_-1_is_clearable")]
		public bool? Comandroidchrome1IsClearable { get; init; }

		[JsonPropertyName("com.android.chrome_-1_is_ongoing")]
		public bool? Comandroidchrome1IsOngoing { get; init; }

		[JsonPropertyName("com.android.chrome_-1_post_time")]
		public double? Comandroidchrome1PostTime { get; init; }

		[JsonPropertyName("com.directed.android.viper_1034_is_clearable")]
		public bool? Comdirectedandroidviper1034IsClearable { get; init; }

		[JsonPropertyName("com.directed.android.viper_1034_is_ongoing")]
		public bool? Comdirectedandroidviper1034IsOngoing { get; init; }

		[JsonPropertyName("com.directed.android.viper_1034_post_time")]
		public double? Comdirectedandroidviper1034PostTime { get; init; }

		[JsonPropertyName("com.directed.android.viper_1036_is_clearable")]
		public bool? Comdirectedandroidviper1036IsClearable { get; init; }

		[JsonPropertyName("com.directed.android.viper_1036_is_ongoing")]
		public bool? Comdirectedandroidviper1036IsOngoing { get; init; }

		[JsonPropertyName("com.directed.android.viper_1036_post_time")]
		public double? Comdirectedandroidviper1036PostTime { get; init; }

		[JsonPropertyName("com.directed.android.viper_1038_is_clearable")]
		public bool? Comdirectedandroidviper1038IsClearable { get; init; }

		[JsonPropertyName("com.directed.android.viper_1038_is_ongoing")]
		public bool? Comdirectedandroidviper1038IsOngoing { get; init; }

		[JsonPropertyName("com.directed.android.viper_1038_post_time")]
		public double? Comdirectedandroidviper1038PostTime { get; init; }

		[JsonPropertyName("com.facebook.katana_0_is_clearable")]
		public bool? Comfacebookkatana0IsClearable { get; init; }

		[JsonPropertyName("com.facebook.katana_0_is_ongoing")]
		public bool? Comfacebookkatana0IsOngoing { get; init; }

		[JsonPropertyName("com.facebook.katana_0_post_time")]
		public double? Comfacebookkatana0PostTime { get; init; }

		[JsonPropertyName("com.fandango_1457420513_is_clearable")]
		public bool? Comfandango1457420513IsClearable { get; init; }

		[JsonPropertyName("com.fandango_1457420513_is_ongoing")]
		public bool? Comfandango1457420513IsOngoing { get; init; }

		[JsonPropertyName("com.fandango_1457420513_post_time")]
		public double? Comfandango1457420513PostTime { get; init; }

		[JsonPropertyName("com.google.android.apps.docs_0_is_clearable")]
		public bool? Comgoogleandroidappsdocs0IsClearable { get; init; }

		[JsonPropertyName("com.google.android.apps.docs_0_is_ongoing")]
		public bool? Comgoogleandroidappsdocs0IsOngoing { get; init; }

		[JsonPropertyName("com.google.android.apps.docs_0_post_time")]
		public double? Comgoogleandroidappsdocs0PostTime { get; init; }

		[JsonPropertyName("com.google.android.apps.googlevoice_1697_is_clearable")]
		public bool? Comgoogleandroidappsgooglevoice1697IsClearable { get; init; }

		[JsonPropertyName("com.google.android.apps.googlevoice_1697_is_ongoing")]
		public bool? Comgoogleandroidappsgooglevoice1697IsOngoing { get; init; }

		[JsonPropertyName("com.google.android.apps.googlevoice_1697_post_time")]
		public double? Comgoogleandroidappsgooglevoice1697PostTime { get; init; }

		[JsonPropertyName("com.google.android.apps.googlevoice_1699_is_clearable")]
		public bool? Comgoogleandroidappsgooglevoice1699IsClearable { get; init; }

		[JsonPropertyName("com.google.android.apps.googlevoice_1699_is_ongoing")]
		public bool? Comgoogleandroidappsgooglevoice1699IsOngoing { get; init; }

		[JsonPropertyName("com.google.android.apps.googlevoice_1699_post_time")]
		public double? Comgoogleandroidappsgooglevoice1699PostTime { get; init; }

		[JsonPropertyName("com.google.android.apps.googlevoice_2147483647_is_clearable")]
		public bool? Comgoogleandroidappsgooglevoice2147483647IsClearable { get; init; }

		[JsonPropertyName("com.google.android.apps.googlevoice_2147483647_is_ongoing")]
		public bool? Comgoogleandroidappsgooglevoice2147483647IsOngoing { get; init; }

		[JsonPropertyName("com.google.android.apps.googlevoice_2147483647_post_time")]
		public double? Comgoogleandroidappsgooglevoice2147483647PostTime { get; init; }

		[JsonPropertyName("com.google.android.apps.magazines_-2062939303_is_clearable")]
		public bool? Comgoogleandroidappsmagazines2062939303IsClearable { get; init; }

		[JsonPropertyName("com.google.android.apps.magazines_-2062939303_is_ongoing")]
		public bool? Comgoogleandroidappsmagazines2062939303IsOngoing { get; init; }

		[JsonPropertyName("com.google.android.apps.magazines_-2062939303_post_time")]
		public double? Comgoogleandroidappsmagazines2062939303PostTime { get; init; }

		[JsonPropertyName("com.google.android.apps.magazines_917652837_is_clearable")]
		public bool? Comgoogleandroidappsmagazines917652837IsClearable { get; init; }

		[JsonPropertyName("com.google.android.apps.magazines_917652837_is_ongoing")]
		public bool? Comgoogleandroidappsmagazines917652837IsOngoing { get; init; }

		[JsonPropertyName("com.google.android.apps.magazines_917652837_post_time")]
		public double? Comgoogleandroidappsmagazines917652837PostTime { get; init; }

		[JsonPropertyName("com.google.android.apps.photos_0_is_clearable")]
		public bool? Comgoogleandroidappsphotos0IsClearable { get; init; }

		[JsonPropertyName("com.google.android.apps.photos_0_is_ongoing")]
		public bool? Comgoogleandroidappsphotos0IsOngoing { get; init; }

		[JsonPropertyName("com.google.android.apps.photos_0_post_time")]
		public double? Comgoogleandroidappsphotos0PostTime { get; init; }

		[JsonPropertyName("com.google.android.calendar_-1505532929_is_clearable")]
		public bool? Comgoogleandroidcalendar1505532929IsClearable { get; init; }

		[JsonPropertyName("com.google.android.calendar_-1505532929_is_ongoing")]
		public bool? Comgoogleandroidcalendar1505532929IsOngoing { get; init; }

		[JsonPropertyName("com.google.android.calendar_-1505532929_post_time")]
		public double? Comgoogleandroidcalendar1505532929PostTime { get; init; }

		[JsonPropertyName("com.google.android.gm_0_is_clearable")]
		public bool? Comgoogleandroidgm0IsClearable { get; init; }

		[JsonPropertyName("com.google.android.gm_0_is_ongoing")]
		public bool? Comgoogleandroidgm0IsOngoing { get; init; }

		[JsonPropertyName("com.google.android.gm_0_post_time")]
		public double? Comgoogleandroidgm0PostTime { get; init; }

		[JsonPropertyName("com.google.android.gm_-1016916783_is_clearable")]
		public bool? Comgoogleandroidgm1016916783IsClearable { get; init; }

		[JsonPropertyName("com.google.android.gm_-1016916783_is_ongoing")]
		public bool? Comgoogleandroidgm1016916783IsOngoing { get; init; }

		[JsonPropertyName("com.google.android.gm_-1016916783_post_time")]
		public double? Comgoogleandroidgm1016916783PostTime { get; init; }

		[JsonPropertyName("com.google.android.gm_-1191004531_is_clearable")]
		public bool? Comgoogleandroidgm1191004531IsClearable { get; init; }

		[JsonPropertyName("com.google.android.gm_-1191004531_is_ongoing")]
		public bool? Comgoogleandroidgm1191004531IsOngoing { get; init; }

		[JsonPropertyName("com.google.android.gm_-1191004531_post_time")]
		public double? Comgoogleandroidgm1191004531PostTime { get; init; }

		[JsonPropertyName("com.google.android.gm_-1518214173_is_clearable")]
		public bool? Comgoogleandroidgm1518214173IsClearable { get; init; }

		[JsonPropertyName("com.google.android.gm_-1518214173_is_ongoing")]
		public bool? Comgoogleandroidgm1518214173IsOngoing { get; init; }

		[JsonPropertyName("com.google.android.gm_-1518214173_post_time")]
		public double? Comgoogleandroidgm1518214173PostTime { get; init; }

		[JsonPropertyName("com.google.android.gm_-1684973333_is_clearable")]
		public bool? Comgoogleandroidgm1684973333IsClearable { get; init; }

		[JsonPropertyName("com.google.android.gm_-1684973333_is_ongoing")]
		public bool? Comgoogleandroidgm1684973333IsOngoing { get; init; }

		[JsonPropertyName("com.google.android.gm_-1684973333_post_time")]
		public double? Comgoogleandroidgm1684973333PostTime { get; init; }

		[JsonPropertyName("com.google.android.gm_-2118692013_is_clearable")]
		public bool? Comgoogleandroidgm2118692013IsClearable { get; init; }

		[JsonPropertyName("com.google.android.gm_-2118692013_is_ongoing")]
		public bool? Comgoogleandroidgm2118692013IsOngoing { get; init; }

		[JsonPropertyName("com.google.android.gm_-2118692013_post_time")]
		public double? Comgoogleandroidgm2118692013PostTime { get; init; }

		[JsonPropertyName("com.google.android.gm_-374807_is_clearable")]
		public bool? Comgoogleandroidgm374807IsClearable { get; init; }

		[JsonPropertyName("com.google.android.gm_-374807_is_ongoing")]
		public bool? Comgoogleandroidgm374807IsOngoing { get; init; }

		[JsonPropertyName("com.google.android.gm_-374807_post_time")]
		public double? Comgoogleandroidgm374807PostTime { get; init; }

		[JsonPropertyName("com.google.android.gms_1000_is_clearable")]
		public bool? Comgoogleandroidgms1000IsClearable { get; init; }

		[JsonPropertyName("com.google.android.gms_1000_is_ongoing")]
		public bool? Comgoogleandroidgms1000IsOngoing { get; init; }

		[JsonPropertyName("com.google.android.gms_1000_post_time")]
		public double? Comgoogleandroidgms1000PostTime { get; init; }

		[JsonPropertyName("com.google.android.gms_2147483647_is_clearable")]
		public bool? Comgoogleandroidgms2147483647IsClearable { get; init; }

		[JsonPropertyName("com.google.android.gms_2147483647_is_ongoing")]
		public bool? Comgoogleandroidgms2147483647IsOngoing { get; init; }

		[JsonPropertyName("com.google.android.gms_2147483647_post_time")]
		public double? Comgoogleandroidgms2147483647PostTime { get; init; }

		[JsonPropertyName("com.google.android.googlequicksearchbox_0_is_clearable")]
		public bool? Comgoogleandroidgooglequicksearchbox0IsClearable { get; init; }

		[JsonPropertyName("com.google.android.googlequicksearchbox_0_is_ongoing")]
		public bool? Comgoogleandroidgooglequicksearchbox0IsOngoing { get; init; }

		[JsonPropertyName("com.google.android.googlequicksearchbox_0_post_time")]
		public double? Comgoogleandroidgooglequicksearchbox0PostTime { get; init; }

		[JsonPropertyName("com.home.bible.verse.prayer_323_is_clearable")]
		public bool? Comhomebibleverseprayer323IsClearable { get; init; }

		[JsonPropertyName("com.home.bible.verse.prayer_323_is_ongoing")]
		public bool? Comhomebibleverseprayer323IsOngoing { get; init; }

		[JsonPropertyName("com.home.bible.verse.prayer_323_post_time")]
		public double? Comhomebibleverseprayer323PostTime { get; init; }

		[JsonPropertyName("com.home.bible.verse.prayer_615_is_clearable")]
		public bool? Comhomebibleverseprayer615IsClearable { get; init; }

		[JsonPropertyName("com.home.bible.verse.prayer_615_is_ongoing")]
		public bool? Comhomebibleverseprayer615IsOngoing { get; init; }

		[JsonPropertyName("com.home.bible.verse.prayer_615_post_time")]
		public double? Comhomebibleverseprayer615PostTime { get; init; }

		[JsonPropertyName("com.imdb.mobile_-1030153331_is_clearable")]
		public bool? Comimdbmobile1030153331IsClearable { get; init; }

		[JsonPropertyName("com.imdb.mobile_-1030153331_is_ongoing")]
		public bool? Comimdbmobile1030153331IsOngoing { get; init; }

		[JsonPropertyName("com.imdb.mobile_-1030153331_post_time")]
		public double? Comimdbmobile1030153331PostTime { get; init; }

		[JsonPropertyName("com.imdb.mobile_3333_is_clearable")]
		public bool? Comimdbmobile3333IsClearable { get; init; }

		[JsonPropertyName("com.imdb.mobile_3333_is_ongoing")]
		public bool? Comimdbmobile3333IsOngoing { get; init; }

		[JsonPropertyName("com.imdb.mobile_3333_post_time")]
		public double? Comimdbmobile3333PostTime { get; init; }

		[JsonPropertyName("com.joaomgcd.autolocation_-542372600_is_clearable")]
		public bool? Comjoaomgcdautolocation542372600IsClearable { get; init; }

		[JsonPropertyName("com.joaomgcd.autolocation_-542372600_is_ongoing")]
		public bool? Comjoaomgcdautolocation542372600IsOngoing { get; init; }

		[JsonPropertyName("com.joaomgcd.autolocation_-542372600_post_time")]
		public double? Comjoaomgcdautolocation542372600PostTime { get; init; }

		[JsonPropertyName("com.linkedin.android_-1437952457_is_clearable")]
		public bool? Comlinkedinandroid1437952457IsClearable { get; init; }

		[JsonPropertyName("com.linkedin.android_-1437952457_is_ongoing")]
		public bool? Comlinkedinandroid1437952457IsOngoing { get; init; }

		[JsonPropertyName("com.linkedin.android_-1437952457_post_time")]
		public double? Comlinkedinandroid1437952457PostTime { get; init; }

		[JsonPropertyName("com.linkedin.android_-352643596_is_clearable")]
		public bool? Comlinkedinandroid352643596IsClearable { get; init; }

		[JsonPropertyName("com.linkedin.android_-352643596_is_ongoing")]
		public bool? Comlinkedinandroid352643596IsOngoing { get; init; }

		[JsonPropertyName("com.linkedin.android_-352643596_post_time")]
		public double? Comlinkedinandroid352643596PostTime { get; init; }

		[JsonPropertyName("com.microsoft.skydrive_2888_is_clearable")]
		public bool? Commicrosoftskydrive2888IsClearable { get; init; }

		[JsonPropertyName("com.microsoft.skydrive_2888_is_ongoing")]
		public bool? Commicrosoftskydrive2888IsOngoing { get; init; }

		[JsonPropertyName("com.microsoft.skydrive_2888_post_time")]
		public double? Commicrosoftskydrive2888PostTime { get; init; }

		[JsonPropertyName("com.microsoft.skydrive_666_is_clearable")]
		public bool? Commicrosoftskydrive666IsClearable { get; init; }

		[JsonPropertyName("com.microsoft.skydrive_666_is_ongoing")]
		public bool? Commicrosoftskydrive666IsOngoing { get; init; }

		[JsonPropertyName("com.microsoft.skydrive_666_post_time")]
		public double? Commicrosoftskydrive666PostTime { get; init; }

		[JsonPropertyName("com.nianticlabs.pokemongo_0_is_clearable")]
		public bool? Comnianticlabspokemongo0IsClearable { get; init; }

		[JsonPropertyName("com.nianticlabs.pokemongo_0_is_ongoing")]
		public bool? Comnianticlabspokemongo0IsOngoing { get; init; }

		[JsonPropertyName("com.nianticlabs.pokemongo_0_post_time")]
		public double? Comnianticlabspokemongo0PostTime { get; init; }

		[JsonPropertyName("com.particlenews.newsbreak_1190462367_is_clearable")]
		public bool? Comparticlenewsnewsbreak1190462367IsClearable { get; init; }

		[JsonPropertyName("com.particlenews.newsbreak_1190462367_is_ongoing")]
		public bool? Comparticlenewsnewsbreak1190462367IsOngoing { get; init; }

		[JsonPropertyName("com.particlenews.newsbreak_1190462367_post_time")]
		public double? Comparticlenewsnewsbreak1190462367PostTime { get; init; }

		[JsonPropertyName("com.particlenews.newsbreak_-1708881267_is_clearable")]
		public bool? Comparticlenewsnewsbreak1708881267IsClearable { get; init; }

		[JsonPropertyName("com.particlenews.newsbreak_-1708881267_is_ongoing")]
		public bool? Comparticlenewsnewsbreak1708881267IsOngoing { get; init; }

		[JsonPropertyName("com.particlenews.newsbreak_-1708881267_post_time")]
		public double? Comparticlenewsnewsbreak1708881267PostTime { get; init; }

		[JsonPropertyName("com.particlenews.newsbreak_-700829828_is_clearable")]
		public bool? Comparticlenewsnewsbreak700829828IsClearable { get; init; }

		[JsonPropertyName("com.particlenews.newsbreak_-700829828_is_ongoing")]
		public bool? Comparticlenewsnewsbreak700829828IsOngoing { get; init; }

		[JsonPropertyName("com.particlenews.newsbreak_-700829828_post_time")]
		public double? Comparticlenewsnewsbreak700829828PostTime { get; init; }

		[JsonPropertyName("com.reddit.frontpage_0_is_clearable")]
		public bool? Comredditfrontpage0IsClearable { get; init; }

		[JsonPropertyName("com.reddit.frontpage_0_is_ongoing")]
		public bool? Comredditfrontpage0IsOngoing { get; init; }

		[JsonPropertyName("com.reddit.frontpage_0_post_time")]
		public double? Comredditfrontpage0PostTime { get; init; }

		[JsonPropertyName("com.sailthru.mobile.sdk.MESSAGE_ID_com.fandango")]
		public string? ComsailthrumobilesdkMESSAGEIDComfandango { get; init; }

		[JsonPropertyName("com.samsung.android.app.reminder_37_is_clearable")]
		public bool? Comsamsungandroidappreminder37IsClearable { get; init; }

		[JsonPropertyName("com.samsung.android.app.reminder_37_is_ongoing")]
		public bool? Comsamsungandroidappreminder37IsOngoing { get; init; }

		[JsonPropertyName("com.samsung.android.app.reminder_37_post_time")]
		public double? Comsamsungandroidappreminder37PostTime { get; init; }

		[JsonPropertyName("com.samsung.android.app.reminder_41_is_clearable")]
		public bool? Comsamsungandroidappreminder41IsClearable { get; init; }

		[JsonPropertyName("com.samsung.android.app.reminder_41_is_ongoing")]
		public bool? Comsamsungandroidappreminder41IsOngoing { get; init; }

		[JsonPropertyName("com.samsung.android.app.reminder_41_post_time")]
		public double? Comsamsungandroidappreminder41PostTime { get; init; }

		[JsonPropertyName("com.samsung.android.app.reminder_43_is_clearable")]
		public bool? Comsamsungandroidappreminder43IsClearable { get; init; }

		[JsonPropertyName("com.samsung.android.app.reminder_43_is_ongoing")]
		public bool? Comsamsungandroidappreminder43IsOngoing { get; init; }

		[JsonPropertyName("com.samsung.android.app.reminder_43_post_time")]
		public double? Comsamsungandroidappreminder43PostTime { get; init; }

		[JsonPropertyName("com.samsung.android.app.reminder_46_is_clearable")]
		public bool? Comsamsungandroidappreminder46IsClearable { get; init; }

		[JsonPropertyName("com.samsung.android.app.reminder_46_is_ongoing")]
		public bool? Comsamsungandroidappreminder46IsOngoing { get; init; }

		[JsonPropertyName("com.samsung.android.app.reminder_46_post_time")]
		public double? Comsamsungandroidappreminder46PostTime { get; init; }

		[JsonPropertyName("com.samsung.android.app.reminder_538378753_is_clearable")]
		public bool? Comsamsungandroidappreminder538378753IsClearable { get; init; }

		[JsonPropertyName("com.samsung.android.app.reminder_538378753_is_ongoing")]
		public bool? Comsamsungandroidappreminder538378753IsOngoing { get; init; }

		[JsonPropertyName("com.samsung.android.app.reminder_538378753_post_time")]
		public double? Comsamsungandroidappreminder538378753PostTime { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495199_is_clearable")]
		public bool? Comsamsungandroidemailprovider268495199IsClearable { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495199_is_ongoing")]
		public bool? Comsamsungandroidemailprovider268495199IsOngoing { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495199_post_time")]
		public double? Comsamsungandroidemailprovider268495199PostTime { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495200_is_clearable")]
		public bool? Comsamsungandroidemailprovider268495200IsClearable { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495200_is_ongoing")]
		public bool? Comsamsungandroidemailprovider268495200IsOngoing { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495200_post_time")]
		public double? Comsamsungandroidemailprovider268495200PostTime { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495201_is_clearable")]
		public bool? Comsamsungandroidemailprovider268495201IsClearable { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495201_is_ongoing")]
		public bool? Comsamsungandroidemailprovider268495201IsOngoing { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495201_post_time")]
		public double? Comsamsungandroidemailprovider268495201PostTime { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495202_is_clearable")]
		public bool? Comsamsungandroidemailprovider268495202IsClearable { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495202_is_ongoing")]
		public bool? Comsamsungandroidemailprovider268495202IsOngoing { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495202_post_time")]
		public double? Comsamsungandroidemailprovider268495202PostTime { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495203_is_clearable")]
		public bool? Comsamsungandroidemailprovider268495203IsClearable { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495203_is_ongoing")]
		public bool? Comsamsungandroidemailprovider268495203IsOngoing { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495203_post_time")]
		public double? Comsamsungandroidemailprovider268495203PostTime { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495204_is_clearable")]
		public bool? Comsamsungandroidemailprovider268495204IsClearable { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495204_is_ongoing")]
		public bool? Comsamsungandroidemailprovider268495204IsOngoing { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495204_post_time")]
		public double? Comsamsungandroidemailprovider268495204PostTime { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495205_is_clearable")]
		public bool? Comsamsungandroidemailprovider268495205IsClearable { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495205_is_ongoing")]
		public bool? Comsamsungandroidemailprovider268495205IsOngoing { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495205_post_time")]
		public double? Comsamsungandroidemailprovider268495205PostTime { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495206_is_clearable")]
		public bool? Comsamsungandroidemailprovider268495206IsClearable { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495206_is_ongoing")]
		public bool? Comsamsungandroidemailprovider268495206IsOngoing { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_268495206_post_time")]
		public double? Comsamsungandroidemailprovider268495206PostTime { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_285212673_is_clearable")]
		public bool? Comsamsungandroidemailprovider285212673IsClearable { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_285212673_is_ongoing")]
		public bool? Comsamsungandroidemailprovider285212673IsOngoing { get; init; }

		[JsonPropertyName("com.samsung.android.email.provider_285212673_post_time")]
		public double? Comsamsungandroidemailprovider285212673PostTime { get; init; }

		[JsonPropertyName("com.snapchat.android_-1166283725_is_clearable")]
		public bool? Comsnapchatandroid1166283725IsClearable { get; init; }

		[JsonPropertyName("com.snapchat.android_-1166283725_is_ongoing")]
		public bool? Comsnapchatandroid1166283725IsOngoing { get; init; }

		[JsonPropertyName("com.snapchat.android_-1166283725_post_time")]
		public double? Comsnapchatandroid1166283725PostTime { get; init; }

		[JsonPropertyName("com.snapchat.android_2153886_is_clearable")]
		public bool? Comsnapchatandroid2153886IsClearable { get; init; }

		[JsonPropertyName("com.snapchat.android_2153886_is_ongoing")]
		public bool? Comsnapchatandroid2153886IsOngoing { get; init; }

		[JsonPropertyName("com.snapchat.android_2153886_post_time")]
		public double? Comsnapchatandroid2153886PostTime { get; init; }

		[JsonPropertyName("com.thumbtack.consumer_335055563_is_clearable")]
		public bool? Comthumbtackconsumer335055563IsClearable { get; init; }

		[JsonPropertyName("com.thumbtack.consumer_335055563_is_ongoing")]
		public bool? Comthumbtackconsumer335055563IsOngoing { get; init; }

		[JsonPropertyName("com.thumbtack.consumer_335055563_post_time")]
		public double? Comthumbtackconsumer335055563PostTime { get; init; }

		[JsonPropertyName("com.vinsmart.android.dialer.att_1_is_clearable")]
		public bool? Comvinsmartandroiddialeratt1IsClearable { get; init; }

		[JsonPropertyName("com.vinsmart.android.dialer.att_1_is_ongoing")]
		public bool? Comvinsmartandroiddialeratt1IsOngoing { get; init; }

		[JsonPropertyName("com.vinsmart.android.dialer.att_1_post_time")]
		public double? Comvinsmartandroiddialeratt1PostTime { get; init; }

		[JsonPropertyName("com.ziprecruiter.android.release_1227528005_is_clearable")]
		public bool? Comziprecruiterandroidrelease1227528005IsClearable { get; init; }

		[JsonPropertyName("com.ziprecruiter.android.release_1227528005_is_ongoing")]
		public bool? Comziprecruiterandroidrelease1227528005IsOngoing { get; init; }

		[JsonPropertyName("com.ziprecruiter.android.release_1227528005_post_time")]
		public double? Comziprecruiterandroidrelease1227528005PostTime { get; init; }

		[JsonPropertyName("connected_not_paired_devices")]
		public string? ConnectedNotPairedDevices { get; init; }

		[JsonPropertyName("connected_paired_devices")]
		public string? ConnectedPairedDevices { get; init; }

		[JsonPropertyName("content-available_com.fandango")]
		public string? ContentavailableComfandango { get; init; }

		[JsonPropertyName("cron pattern")]
		public string? Cronpattern { get; init; }

		[JsonPropertyName("destination")]
		public string? Destination { get; init; }

		[JsonPropertyName("device_class")]
		public string? DeviceClass { get; init; }

		[JsonPropertyName("distance")]
		public double? Distance { get; init; }

		[JsonPropertyName("domains_blocked")]
		public double? DomainsBlocked { get; init; }

		[JsonPropertyName("duration")]
		public double? Duration { get; init; }

		[JsonPropertyName("end")]
		public double? End { get; init; }

		[JsonPropertyName("extras_ndid_com.facebook.katana")]
		public string? ExtrasNdidComfacebookkatana { get; init; }

		[JsonPropertyName("free_external_storage")]
		public string? FreeExternalStorage { get; init; }

		[JsonPropertyName("Free internal storage")]
		public string? Freeinternalstorage { get; init; }

		[JsonPropertyName("free_memory")]
		public double? FreeMemory { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("icon")]
		public string? Icon { get; init; }

		[JsonPropertyName("io.homeassistant.companion.android_42_is_clearable")]
		public bool? Iohomeassistantcompanionandroid42IsClearable { get; init; }

		[JsonPropertyName("io.homeassistant.companion.android_42_is_ongoing")]
		public bool? Iohomeassistantcompanionandroid42IsOngoing { get; init; }

		[JsonPropertyName("io.homeassistant.companion.android_42_post_time")]
		public double? Iohomeassistantcompanionandroid42PostTime { get; init; }

		[JsonPropertyName("last_period")]
		public string? LastPeriod { get; init; }

		[JsonPropertyName("last_reset")]
		public string? LastReset { get; init; }

		[JsonPropertyName("latitude")]
		public double? Latitude { get; init; }

		[JsonPropertyName("light")]
		public double? Light { get; init; }

		[JsonPropertyName("longitude")]
		public double? Longitude { get; init; }

		[JsonPropertyName("meter_period")]
		public string? MeterPeriod { get; init; }

		[JsonPropertyName("motion")]
		public double? Motion { get; init; }

		[JsonPropertyName("net.dinglisch.android.taskerm_2147483647_is_clearable")]
		public bool? Netdinglischandroidtaskerm2147483647IsClearable { get; init; }

		[JsonPropertyName("net.dinglisch.android.taskerm_2147483647_is_ongoing")]
		public bool? Netdinglischandroidtaskerm2147483647IsOngoing { get; init; }

		[JsonPropertyName("net.dinglisch.android.taskerm_2147483647_post_time")]
		public double? Netdinglischandroidtaskerm2147483647PostTime { get; init; }

		[JsonPropertyName("_nid_com.fandango")]
		public string? NidComfandango { get; init; }

		[JsonPropertyName("origin")]
		public string? Origin { get; init; }

		[JsonPropertyName("paired_devices")]
		public string? PairedDevices { get; init; }

		[JsonPropertyName("repositories")]
		public object? Repositories { get; init; }

		[JsonPropertyName("restored")]
		public bool? Restored { get; init; }

		[JsonPropertyName("route")]
		public string? Route { get; init; }

		[JsonPropertyName("smart_alert_desc1_com.samsung.android.app.reminder")]
		public string? SmartAlertDesc1Comsamsungandroidappreminder { get; init; }

		[JsonPropertyName("smart_alert_desc2_com.samsung.android.app.reminder")]
		public string? SmartAlertDesc2Comsamsungandroidappreminder { get; init; }

		[JsonPropertyName("smart_alert_icon_com.samsung.android.app.reminder")]
		public double? SmartAlertIconComsamsungandroidappreminder { get; init; }

		[JsonPropertyName("smart_alert_title_com.samsung.android.app.reminder")]
		public string? SmartAlertTitleComsamsungandroidappreminder { get; init; }

		[JsonPropertyName("sort_key_score_com.facebook.katana")]
		public double? SortKeyScoreComfacebookkatana { get; init; }

		[JsonPropertyName("source")]
		public string? Source { get; init; }

		[JsonPropertyName("source_value_valid")]
		public bool? SourceValueValid { get; init; }

		[JsonPropertyName("start")]
		public double? Start { get; init; }

		[JsonPropertyName("state_class")]
		public string? StateClass { get; init; }

		[JsonPropertyName("status")]
		public string? Status { get; init; }

		[JsonPropertyName("_st_com.fandango")]
		public string? StComfandango { get; init; }

		[JsonPropertyName("supported_features")]
		public double? SupportedFeatures { get; init; }

		[JsonPropertyName("system_notification_extras_com.snapchat.android")]
		public string? SystemNotificationExtrasComsnapchatandroid { get; init; }

		[JsonPropertyName("tariff")]
		public string? Tariff { get; init; }

		[JsonPropertyName("timestamp")]
		public double? Timestamp { get; init; }

		[JsonPropertyName("title_com.fandango")]
		public string? TitleComfandango { get; init; }

		[JsonPropertyName("total_external_storage")]
		public string? TotalExternalStorage { get; init; }

		[JsonPropertyName("Total internal storage")]
		public string? Totalinternalstorage { get; init; }

		[JsonPropertyName("total_memory")]
		public double? TotalMemory { get; init; }

		[JsonPropertyName("_u_com.fandango")]
		public string? UComfandango { get; init; }

		[JsonPropertyName("unit_of_measurement")]
		public string? UnitOfMeasurement { get; init; }

		[JsonPropertyName("uuid_com.samsung.android.app.reminder")]
		public string? UuidComsamsungandroidappreminder { get; init; }
	}

	public partial record SensorEntity : Entity<SensorEntity, EntityState<SensorAttributes>, SensorAttributes>
	{
		public SensorEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public SensorEntity(Entity entity) : base(entity)
		{
		}
	}

	public record SensorAttributes
	{
		[JsonPropertyName("administrative_area")]
		public string? AdministrativeArea { get; init; }

		[JsonPropertyName("album_com.microsoft.teams")]
		public string? AlbumCommicrosoftteams { get; init; }

		[JsonPropertyName("android.appInfo")]
		public string? AndroidappInfo { get; init; }

		[JsonPropertyName("android.bigText")]
		public string? AndroidbigText { get; init; }

		[JsonPropertyName("android.infoText")]
		public string? AndroidinfoText { get; init; }

		[JsonPropertyName("android.largeIcon")]
		public string? AndroidlargeIcon { get; init; }

		[JsonPropertyName("android.progress")]
		public double? Androidprogress { get; init; }

		[JsonPropertyName("android.progressIndeterminate")]
		public bool? AndroidprogressIndeterminate { get; init; }

		[JsonPropertyName("android.progressMax")]
		public double? AndroidprogressMax { get; init; }

		[JsonPropertyName("android.reduced.images")]
		public bool? Androidreducedimages { get; init; }

		[JsonPropertyName("android.remoteInputHistory")]
		public string? AndroidremoteInputHistory { get; init; }

		[JsonPropertyName("android.showChronometer")]
		public bool? AndroidshowChronometer { get; init; }

		[JsonPropertyName("android.showWhen")]
		public bool? AndroidshowWhen { get; init; }

		[JsonPropertyName("android.substName")]
		public string? AndroidsubstName { get; init; }

		[JsonPropertyName("android.subText")]
		public string? AndroidsubText { get; init; }

		[JsonPropertyName("android.template")]
		public string? Androidtemplate { get; init; }

		[JsonPropertyName("android.text")]
		public string? Androidtext { get; init; }

		[JsonPropertyName("android.title")]
		public string? Androidtitle { get; init; }

		[JsonPropertyName("android.title.big")]
		public string? Androidtitlebig { get; init; }

		[JsonPropertyName("answered")]
		public bool? Answered { get; init; }

		[JsonPropertyName("artist_com.microsoft.teams")]
		public string? ArtistCommicrosoftteams { get; init; }

		[JsonPropertyName("attribution")]
		public string? Attribution { get; init; }

		[JsonPropertyName("battery_level")]
		public double? BatteryLevel { get; init; }

		[JsonPropertyName("carrier id")]
		public double? Carrierid { get; init; }

		[JsonPropertyName("carrier name")]
		public string? Carriername { get; init; }

		[JsonPropertyName("category")]
		public string? Category { get; init; }

		[JsonPropertyName("channel")]
		public string? Channel { get; init; }

		[JsonPropertyName("charging")]
		public bool? Charging { get; init; }

		[JsonPropertyName("config")]
		public object? Config { get; init; }

		[JsonPropertyName("country")]
		public string? Country { get; init; }

		[JsonPropertyName("created_at")]
		public string? CreatedAt { get; init; }

		[JsonPropertyName("currentUser")]
		public string? CurrentUser { get; init; }

		[JsonPropertyName("darkMode")]
		public bool? DarkMode { get; init; }

		[JsonPropertyName("data roaming")]
		public string? Dataroaming { get; init; }

		[JsonPropertyName("days")]
		public double? Days { get; init; }

		[JsonPropertyName("device_class")]
		public string? DeviceClass { get; init; }

		[JsonPropertyName("deviceID")]
		public string? DeviceID { get; init; }

		[JsonPropertyName("dismissed")]
		public object? Dismissed { get; init; }

		[JsonPropertyName("duration_com.microsoft.teams")]
		public string? DurationCommicrosoftteams { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("fullyKiosk")]
		public bool? FullyKiosk { get; init; }

		[JsonPropertyName("height")]
		public double? Height { get; init; }

		[JsonPropertyName("icon")]
		public string? Icon { get; init; }

		[JsonPropertyName("in_daylight_time")]
		public bool? InDaylightTime { get; init; }

		[JsonPropertyName("is_clearable")]
		public bool? IsClearable { get; init; }

		[JsonPropertyName("is_hidden")]
		public bool? IsHidden { get; init; }

		[JsonPropertyName("iso country code")]
		public string? Isocountrycode { get; init; }

		[JsonPropertyName("iso_country_code")]
		public string? IsoCountryCode { get; init; }

		[JsonPropertyName("is_ongoing")]
		public bool? IsOngoing { get; init; }

		[JsonPropertyName("is opportunistic")]
		public bool? Isopportunistic { get; init; }

		[JsonPropertyName("Label")]
		public string? Label { get; init; }

		[JsonPropertyName("last_collection")]
		public string? LastCollection { get; init; }

		[JsonPropertyName("last_seen")]
		public string? LastSeen { get; init; }

		[JsonPropertyName("last_updated")]
		public string? LastUpdated { get; init; }

		[JsonPropertyName("latitude")]
		public double? Latitude { get; init; }

		[JsonPropertyName("locality")]
		public string? Locality { get; init; }

		[JsonPropertyName("Local Time")]
		public string? LocalTime { get; init; }

		[JsonPropertyName("longitude")]
		public double? Longitude { get; init; }

		[JsonPropertyName("mcc")]
		public string? Mcc { get; init; }

		[JsonPropertyName("media_id_com.microsoft.teams")]
		public string? MediaIdCommicrosoftteams { get; init; }

		[JsonPropertyName("mnc")]
		public string? Mnc { get; init; }

		[JsonPropertyName("next_date")]
		public string? NextDate { get; init; }

		[JsonPropertyName("number")]
		public double? Number { get; init; }

		[JsonPropertyName("package")]
		public string? Package_0 { get; init; }

		[JsonPropertyName("Package")]
		public string? Package_1 { get; init; }

		[JsonPropertyName("path")]
		public string? Path { get; init; }

		[JsonPropertyName("playback_position_com.microsoft.teams")]
		public string? PlaybackPositionCommicrosoftteams { get; init; }

		[JsonPropertyName("playback_state_com.microsoft.teams")]
		public string? PlaybackStateCommicrosoftteams { get; init; }

		[JsonPropertyName("postal_code")]
		public string? PostalCode { get; init; }

		[JsonPropertyName("post_time")]
		public double? PostTime { get; init; }

		[JsonPropertyName("prior_value")]
		public string? PriorValue { get; init; }

		[JsonPropertyName("process_timestamp")]
		public string? ProcessTimestamp { get; init; }

		[JsonPropertyName("recording_status")]
		public string? RecordingStatus { get; init; }

		[JsonPropertyName("recurrence")]
		public object? Recurrence { get; init; }

		[JsonPropertyName("reminder")]
		public object? Reminder { get; init; }

		[JsonPropertyName("restored")]
		public bool? Restored { get; init; }

		[JsonPropertyName("sha")]
		public string? Sha { get; init; }

		[JsonPropertyName("sorted_active")]
		public string? SortedActive { get; init; }

		[JsonPropertyName("sorted_all")]
		public string? SortedAll { get; init; }

		[JsonPropertyName("source")]
		public string? Source { get; init; }

		[JsonPropertyName("state_class")]
		public string? StateClass { get; init; }

		[JsonPropertyName("status")]
		public string? Status { get; init; }

		[JsonPropertyName("still")]
		public double? Still { get; init; }

		[JsonPropertyName("sub_administrative_area")]
		public string? SubAdministrativeArea { get; init; }

		[JsonPropertyName("sub_locality")]
		public string? SubLocality { get; init; }

		[JsonPropertyName("sub_thoroughfare")]
		public string? SubThoroughfare { get; init; }

		[JsonPropertyName("supported_features")]
		public double? SupportedFeatures { get; init; }

		[JsonPropertyName("tag")]
		public string? Tag { get; init; }

		[JsonPropertyName("thoroughfare")]
		public string? Thoroughfare { get; init; }

		[JsonPropertyName("Time in Milliseconds")]
		public double? TimeinMilliseconds { get; init; }

		[JsonPropertyName("time_zone_id")]
		public string? TimeZoneId { get; init; }

		[JsonPropertyName("time_zone_short")]
		public string? TimeZoneShort { get; init; }

		[JsonPropertyName("title_com.microsoft.teams")]
		public string? TitleCommicrosoftteams { get; init; }

		[JsonPropertyName("total_active")]
		public double? TotalActive { get; init; }

		[JsonPropertyName("total_all")]
		public double? TotalAll { get; init; }

		[JsonPropertyName("total_media_session_count")]
		public double? TotalMediaSessionCount { get; init; }

		[JsonPropertyName("type")]
		public string? Type { get; init; }

		[JsonPropertyName("unknown")]
		public double? Unknown { get; init; }

		[JsonPropertyName("url")]
		public string? Url { get; init; }

		[JsonPropertyName("userAgent")]
		public string? UserAgent { get; init; }

		[JsonPropertyName("userData")]
		public object? UserData { get; init; }

		[JsonPropertyName("uses_daylight_time")]
		public bool? UsesDaylightTime { get; init; }

		[JsonPropertyName("utc_offset")]
		public double? UtcOffset { get; init; }

		[JsonPropertyName("vehicle_chris_accuracy")]
		public string? VehicleChrisAccuracy { get; init; }

		[JsonPropertyName("vehicle_chris_latitude")]
		public string? VehicleChrisLatitude { get; init; }

		[JsonPropertyName("vehicle_chris_longitude")]
		public string? VehicleChrisLongitude { get; init; }

		[JsonPropertyName("vehicle_chris_state")]
		public string? VehicleChrisState { get; init; }

		[JsonPropertyName("vehicle_melissa_accuracy")]
		public string? VehicleMelissaAccuracy { get; init; }

		[JsonPropertyName("vehicle_melissa_latitude")]
		public string? VehicleMelissaLatitude { get; init; }

		[JsonPropertyName("vehicle_melissa_longitude")]
		public string? VehicleMelissaLongitude { get; init; }

		[JsonPropertyName("vehicle_melissa_state")]
		public string? VehicleMelissaState { get; init; }

		[JsonPropertyName("vehicle_truck_accuracy")]
		public string? VehicleTruckAccuracy { get; init; }

		[JsonPropertyName("vehicle_truck_latitude")]
		public string? VehicleTruckLatitude { get; init; }

		[JsonPropertyName("vehicle_truck_longitude")]
		public string? VehicleTruckLongitude { get; init; }

		[JsonPropertyName("vehicle_truck_state")]
		public string? VehicleTruckState { get; init; }

		[JsonPropertyName("visibility")]
		public string? Visibility { get; init; }

		[JsonPropertyName("width")]
		public double? Width { get; init; }
	}

	public partial record SunEntity : Entity<SunEntity, EntityState<SunAttributes>, SunAttributes>
	{
		public SunEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public SunEntity(Entity entity) : base(entity)
		{
		}
	}

	public record SunAttributes
	{
		[JsonPropertyName("azimuth")]
		public double? Azimuth { get; init; }

		[JsonPropertyName("elevation")]
		public double? Elevation { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("next_dawn")]
		public string? NextDawn { get; init; }

		[JsonPropertyName("next_dusk")]
		public string? NextDusk { get; init; }

		[JsonPropertyName("next_midnight")]
		public string? NextMidnight { get; init; }

		[JsonPropertyName("next_noon")]
		public string? NextNoon { get; init; }

		[JsonPropertyName("next_rising")]
		public string? NextRising { get; init; }

		[JsonPropertyName("next_setting")]
		public string? NextSetting { get; init; }

		[JsonPropertyName("rising")]
		public bool? Rising { get; init; }
	}

	public partial record SwitchEntity : Entity<SwitchEntity, EntityState<SwitchAttributes>, SwitchAttributes>
	{
		public SwitchEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public SwitchEntity(Entity entity) : base(entity)
		{
		}
	}

	public record SwitchAttributes
	{
		[JsonPropertyName("attribution")]
		public string? Attribution { get; init; }

		[JsonPropertyName("device_class")]
		public string? DeviceClass { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("icon")]
		public string? Icon { get; init; }

		[JsonPropertyName("poe_mode")]
		public string? PoeMode { get; init; }

		[JsonPropertyName("port")]
		public double? Port { get; init; }

		[JsonPropertyName("power")]
		public string? Power { get; init; }

		[JsonPropertyName("restored")]
		public bool? Restored { get; init; }

		[JsonPropertyName("supported_features")]
		public double? SupportedFeatures { get; init; }

		[JsonPropertyName("switch")]
		public string? Switch { get; init; }
	}

	public partial record UpdateEntity : Entity<UpdateEntity, EntityState<UpdateAttributes>, UpdateAttributes>
	{
		public UpdateEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public UpdateEntity(Entity entity) : base(entity)
		{
		}
	}

	public record UpdateAttributes
	{
		[JsonPropertyName("attribution")]
		public string? Attribution { get; init; }

		[JsonPropertyName("auto_update")]
		public bool? AutoUpdate { get; init; }

		[JsonPropertyName("device_class")]
		public string? DeviceClass { get; init; }

		[JsonPropertyName("entity_picture")]
		public string? EntityPicture { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("in_progress")]
		public bool? InProgress { get; init; }

		[JsonPropertyName("installed_version")]
		public string? InstalledVersion { get; init; }

		[JsonPropertyName("latest_version")]
		public string? LatestVersion { get; init; }

		[JsonPropertyName("release_summary")]
		public object? ReleaseSummary { get; init; }

		[JsonPropertyName("release_url")]
		public string? ReleaseUrl { get; init; }

		[JsonPropertyName("skipped_version")]
		public object? SkippedVersion { get; init; }

		[JsonPropertyName("supported_features")]
		public double? SupportedFeatures { get; init; }

		[JsonPropertyName("title")]
		public string? Title { get; init; }
	}

	public partial record UtilityMeterEntity : Entity<UtilityMeterEntity, EntityState<UtilityMeterAttributes>, UtilityMeterAttributes>
	{
		public UtilityMeterEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public UtilityMeterEntity(Entity entity) : base(entity)
		{
		}
	}

	public record UtilityMeterAttributes
	{
		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("icon")]
		public string? Icon { get; init; }

		[JsonPropertyName("tariffs")]
		public object? Tariffs { get; init; }
	}

	public partial record VacuumEntity : Entity<VacuumEntity, EntityState<VacuumAttributes>, VacuumAttributes>
	{
		public VacuumEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public VacuumEntity(Entity entity) : base(entity)
		{
		}
	}

	public record VacuumAttributes
	{
		[JsonPropertyName("battery_icon")]
		public string? BatteryIcon { get; init; }

		[JsonPropertyName("battery_level")]
		public double? BatteryLevel { get; init; }

		[JsonPropertyName("battery_level_at_clean_end")]
		public double? BatteryLevelAtCleanEnd { get; init; }

		[JsonPropertyName("battery_level_at_clean_start")]
		public double? BatteryLevelAtCleanStart { get; init; }

		[JsonPropertyName("clean_area")]
		public double? CleanArea { get; init; }

		[JsonPropertyName("clean_error_time")]
		public double? CleanErrorTime { get; init; }

		[JsonPropertyName("clean_pause_time")]
		public double? CleanPauseTime { get; init; }

		[JsonPropertyName("clean_start")]
		public string? CleanStart { get; init; }

		[JsonPropertyName("clean_stop")]
		public string? CleanStop { get; init; }

		[JsonPropertyName("clean_suspension_count")]
		public double? CleanSuspensionCount { get; init; }

		[JsonPropertyName("clean_suspension_time")]
		public double? CleanSuspensionTime { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("icon")]
		public string? Icon { get; init; }

		[JsonPropertyName("launched_from")]
		public string? LaunchedFrom { get; init; }

		[JsonPropertyName("status")]
		public string? Status { get; init; }

		[JsonPropertyName("supported_features")]
		public double? SupportedFeatures { get; init; }
	}

	public partial record WaterHeaterEntity : Entity<WaterHeaterEntity, EntityState<WaterHeaterAttributes>, WaterHeaterAttributes>
	{
		public WaterHeaterEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public WaterHeaterEntity(Entity entity) : base(entity)
		{
		}
	}

	public record WaterHeaterAttributes
	{
		[JsonPropertyName("current_temperature")]
		public object? CurrentTemperature { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("max_temp")]
		public double? MaxTemp { get; init; }

		[JsonPropertyName("min_temp")]
		public double? MinTemp { get; init; }

		[JsonPropertyName("operation_list")]
		public object? OperationList { get; init; }

		[JsonPropertyName("operation_mode")]
		public string? OperationMode { get; init; }

		[JsonPropertyName("supported_features")]
		public double? SupportedFeatures { get; init; }

		[JsonPropertyName("target_temp_high")]
		public object? TargetTempHigh { get; init; }

		[JsonPropertyName("target_temp_low")]
		public object? TargetTempLow { get; init; }

		[JsonPropertyName("temperature")]
		public double? Temperature { get; init; }
	}

	public partial record WeatherEntity : Entity<WeatherEntity, EntityState<WeatherAttributes>, WeatherAttributes>
	{
		public WeatherEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public WeatherEntity(Entity entity) : base(entity)
		{
		}
	}

	public record WeatherAttributes
	{
		[JsonPropertyName("attribution")]
		public string? Attribution { get; init; }

		[JsonPropertyName("forecast")]
		public object? Forecast { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("humidity")]
		public double? Humidity { get; init; }

		[JsonPropertyName("pressure")]
		public double? Pressure { get; init; }

		[JsonPropertyName("temperature")]
		public double? Temperature { get; init; }

		[JsonPropertyName("wind_bearing")]
		public double? WindBearing { get; init; }

		[JsonPropertyName("wind_speed")]
		public double? WindSpeed { get; init; }
	}

	public partial record ZoneEntity : Entity<ZoneEntity, EntityState<ZoneAttributes>, ZoneAttributes>
	{
		public ZoneEntity(IHaContext haContext, string entityId) : base(haContext, entityId)
		{
		}

		public ZoneEntity(Entity entity) : base(entity)
		{
		}
	}

	public record ZoneAttributes
	{
		[JsonPropertyName("editable")]
		public bool? Editable { get; init; }

		[JsonPropertyName("friendly_name")]
		public string? FriendlyName { get; init; }

		[JsonPropertyName("icon")]
		public string? Icon { get; init; }

		[JsonPropertyName("latitude")]
		public double? Latitude { get; init; }

		[JsonPropertyName("longitude")]
		public double? Longitude { get; init; }

		[JsonPropertyName("passive")]
		public bool? Passive { get; init; }

		[JsonPropertyName("persons")]
		public object? Persons { get; init; }

		[JsonPropertyName("radius")]
		public double? Radius { get; init; }
	}

	public interface IServices
	{
		AlarmControlPanelServices AlarmControlPanel { get; }

		AlertServices Alert { get; }

		AlexaMediaServices AlexaMedia { get; }

		AndroidtvServices Androidtv { get; }

		AutomationServices Automation { get; }

		BackupServices Backup { get; }

		BrowserModServices BrowserMod { get; }

		ButtonServices Button { get; }

		CameraServices Camera { get; }

		ClimateServices Climate { get; }

		CloudServices Cloud { get; }

		CounterServices Counter { get; }

		CoverServices Cover { get; }

		DeviceTrackerServices DeviceTracker { get; }

		EsphomeServices Esphome { get; }

		FanServices Fan { get; }

		FfmpegServices Ffmpeg { get; }

		FrontendServices Frontend { get; }

		GarbageCollectionServices GarbageCollection { get; }

		GoogleServices Google { get; }

		HarmonyServices Harmony { get; }

		HistoryStatsServices HistoryStats { get; }

		HomeassistantServices Homeassistant { get; }

		InputBooleanServices InputBoolean { get; }

		InputButtonServices InputButton { get; }

		InputDatetimeServices InputDatetime { get; }

		InputNumberServices InputNumber { get; }

		InputSelectServices InputSelect { get; }

		InputTextServices InputText { get; }

		LightServices Light { get; }

		LockServices Lock { get; }

		LogbookServices Logbook { get; }

		LoggerServices Logger { get; }

		LovelaceServices Lovelace { get; }

		MediaPlayerServices MediaPlayer { get; }

		NeatoServices Neato { get; }

		NetdaemonServices Netdaemon { get; }

		NotifyServices Notify { get; }

		NumberServices Number { get; }

		OnvifServices Onvif { get; }

		PersistentNotificationServices PersistentNotification { get; }

		PersonServices Person { get; }

		PiHoleServices PiHole { get; }

		PythonScriptServices PythonScript { get; }

		RecorderServices Recorder { get; }

		RemoteServices Remote { get; }

		RestCommandServices RestCommand { get; }

		RingServices Ring { get; }

		SceneServices Scene { get; }

		ScriptServices Script { get; }

		SelectServices Select { get; }

		SirenServices Siren { get; }

		SpeedtestdotnetServices Speedtestdotnet { get; }

		StatisticsServices Statistics { get; }

		SwitchServices Switch { get; }

		SynologyDsmServices SynologyDsm { get; }

		SystemLogServices SystemLog { get; }

		TemplateServices Template { get; }

		TimerServices Timer { get; }

		TtsServices Tts { get; }

		UnifiServices Unifi { get; }

		UpdateServices Update { get; }

		UtilityMeterServices UtilityMeter { get; }

		VacuumServices Vacuum { get; }

		WaterHeaterServices WaterHeater { get; }

		ZoneServices Zone { get; }

		ZwaveJsServices ZwaveJs { get; }
	}

	public class Services : IServices
	{
		private readonly IHaContext _haContext;
		public Services(IHaContext haContext)
		{
			_haContext = haContext;
		}

		public AlarmControlPanelServices AlarmControlPanel => new(_haContext);
		public AlertServices Alert => new(_haContext);
		public AlexaMediaServices AlexaMedia => new(_haContext);
		public AndroidtvServices Androidtv => new(_haContext);
		public AutomationServices Automation => new(_haContext);
		public BackupServices Backup => new(_haContext);
		public BrowserModServices BrowserMod => new(_haContext);
		public ButtonServices Button => new(_haContext);
		public CameraServices Camera => new(_haContext);
		public ClimateServices Climate => new(_haContext);
		public CloudServices Cloud => new(_haContext);
		public CounterServices Counter => new(_haContext);
		public CoverServices Cover => new(_haContext);
		public DeviceTrackerServices DeviceTracker => new(_haContext);
		public EsphomeServices Esphome => new(_haContext);
		public FanServices Fan => new(_haContext);
		public FfmpegServices Ffmpeg => new(_haContext);
		public FrontendServices Frontend => new(_haContext);
		public GarbageCollectionServices GarbageCollection => new(_haContext);
		public GoogleServices Google => new(_haContext);
		public HarmonyServices Harmony => new(_haContext);
		public HistoryStatsServices HistoryStats => new(_haContext);
		public HomeassistantServices Homeassistant => new(_haContext);
		public InputBooleanServices InputBoolean => new(_haContext);
		public InputButtonServices InputButton => new(_haContext);
		public InputDatetimeServices InputDatetime => new(_haContext);
		public InputNumberServices InputNumber => new(_haContext);
		public InputSelectServices InputSelect => new(_haContext);
		public InputTextServices InputText => new(_haContext);
		public LightServices Light => new(_haContext);
		public LockServices Lock => new(_haContext);
		public LogbookServices Logbook => new(_haContext);
		public LoggerServices Logger => new(_haContext);
		public LovelaceServices Lovelace => new(_haContext);
		public MediaPlayerServices MediaPlayer => new(_haContext);
		public NeatoServices Neato => new(_haContext);
		public NetdaemonServices Netdaemon => new(_haContext);
		public NotifyServices Notify => new(_haContext);
		public NumberServices Number => new(_haContext);
		public OnvifServices Onvif => new(_haContext);
		public PersistentNotificationServices PersistentNotification => new(_haContext);
		public PersonServices Person => new(_haContext);
		public PiHoleServices PiHole => new(_haContext);
		public PythonScriptServices PythonScript => new(_haContext);
		public RecorderServices Recorder => new(_haContext);
		public RemoteServices Remote => new(_haContext);
		public RestCommandServices RestCommand => new(_haContext);
		public RingServices Ring => new(_haContext);
		public SceneServices Scene => new(_haContext);
		public ScriptServices Script => new(_haContext);
		public SelectServices Select => new(_haContext);
		public SirenServices Siren => new(_haContext);
		public SpeedtestdotnetServices Speedtestdotnet => new(_haContext);
		public StatisticsServices Statistics => new(_haContext);
		public SwitchServices Switch => new(_haContext);
		public SynologyDsmServices SynologyDsm => new(_haContext);
		public SystemLogServices SystemLog => new(_haContext);
		public TemplateServices Template => new(_haContext);
		public TimerServices Timer => new(_haContext);
		public TtsServices Tts => new(_haContext);
		public UnifiServices Unifi => new(_haContext);
		public UpdateServices Update => new(_haContext);
		public UtilityMeterServices UtilityMeter => new(_haContext);
		public VacuumServices Vacuum => new(_haContext);
		public WaterHeaterServices WaterHeater => new(_haContext);
		public ZoneServices Zone => new(_haContext);
		public ZwaveJsServices ZwaveJs => new(_haContext);
	}

	public class AlarmControlPanelServices
	{
		private readonly IHaContext _haContext;
		public AlarmControlPanelServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Send the alarm the command for arm away.</summary>
		///<param name="target">The target for this service call</param>
		public void AlarmArmAway(ServiceTarget target, AlarmControlPanelAlarmArmAwayParameters data)
		{
			_haContext.CallService("alarm_control_panel", "alarm_arm_away", target, data);
		}

		///<summary>Send the alarm the command for arm away.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="code">An optional code to arm away the alarm control panel with. eg: 1234</param>
		public void AlarmArmAway(ServiceTarget target, string? @code = null)
		{
			_haContext.CallService("alarm_control_panel", "alarm_arm_away", target, new AlarmControlPanelAlarmArmAwayParameters{Code = @code});
		}

		///<summary>Send arm custom bypass command.</summary>
		///<param name="target">The target for this service call</param>
		public void AlarmArmCustomBypass(ServiceTarget target, AlarmControlPanelAlarmArmCustomBypassParameters data)
		{
			_haContext.CallService("alarm_control_panel", "alarm_arm_custom_bypass", target, data);
		}

		///<summary>Send arm custom bypass command.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="code">An optional code to arm custom bypass the alarm control panel with. eg: 1234</param>
		public void AlarmArmCustomBypass(ServiceTarget target, string? @code = null)
		{
			_haContext.CallService("alarm_control_panel", "alarm_arm_custom_bypass", target, new AlarmControlPanelAlarmArmCustomBypassParameters{Code = @code});
		}

		///<summary>Send the alarm the command for arm home.</summary>
		///<param name="target">The target for this service call</param>
		public void AlarmArmHome(ServiceTarget target, AlarmControlPanelAlarmArmHomeParameters data)
		{
			_haContext.CallService("alarm_control_panel", "alarm_arm_home", target, data);
		}

		///<summary>Send the alarm the command for arm home.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="code">An optional code to arm home the alarm control panel with. eg: 1234</param>
		public void AlarmArmHome(ServiceTarget target, string? @code = null)
		{
			_haContext.CallService("alarm_control_panel", "alarm_arm_home", target, new AlarmControlPanelAlarmArmHomeParameters{Code = @code});
		}

		///<summary>Send the alarm the command for arm night.</summary>
		///<param name="target">The target for this service call</param>
		public void AlarmArmNight(ServiceTarget target, AlarmControlPanelAlarmArmNightParameters data)
		{
			_haContext.CallService("alarm_control_panel", "alarm_arm_night", target, data);
		}

		///<summary>Send the alarm the command for arm night.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="code">An optional code to arm night the alarm control panel with. eg: 1234</param>
		public void AlarmArmNight(ServiceTarget target, string? @code = null)
		{
			_haContext.CallService("alarm_control_panel", "alarm_arm_night", target, new AlarmControlPanelAlarmArmNightParameters{Code = @code});
		}

		///<summary>Send the alarm the command for arm vacation.</summary>
		///<param name="target">The target for this service call</param>
		public void AlarmArmVacation(ServiceTarget target, AlarmControlPanelAlarmArmVacationParameters data)
		{
			_haContext.CallService("alarm_control_panel", "alarm_arm_vacation", target, data);
		}

		///<summary>Send the alarm the command for arm vacation.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="code">An optional code to arm vacation the alarm control panel with. eg: 1234</param>
		public void AlarmArmVacation(ServiceTarget target, string? @code = null)
		{
			_haContext.CallService("alarm_control_panel", "alarm_arm_vacation", target, new AlarmControlPanelAlarmArmVacationParameters{Code = @code});
		}

		///<summary>Send the alarm the command for disarm.</summary>
		///<param name="target">The target for this service call</param>
		public void AlarmDisarm(ServiceTarget target, AlarmControlPanelAlarmDisarmParameters data)
		{
			_haContext.CallService("alarm_control_panel", "alarm_disarm", target, data);
		}

		///<summary>Send the alarm the command for disarm.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="code">An optional code to disarm the alarm control panel with. eg: 1234</param>
		public void AlarmDisarm(ServiceTarget target, string? @code = null)
		{
			_haContext.CallService("alarm_control_panel", "alarm_disarm", target, new AlarmControlPanelAlarmDisarmParameters{Code = @code});
		}

		///<summary>Send the alarm the command for trigger.</summary>
		///<param name="target">The target for this service call</param>
		public void AlarmTrigger(ServiceTarget target, AlarmControlPanelAlarmTriggerParameters data)
		{
			_haContext.CallService("alarm_control_panel", "alarm_trigger", target, data);
		}

		///<summary>Send the alarm the command for trigger.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="code">An optional code to trigger the alarm control panel with. eg: 1234</param>
		public void AlarmTrigger(ServiceTarget target, string? @code = null)
		{
			_haContext.CallService("alarm_control_panel", "alarm_trigger", target, new AlarmControlPanelAlarmTriggerParameters{Code = @code});
		}
	}

	public record AlarmControlPanelAlarmArmAwayParameters
	{
		///<summary>An optional code to arm away the alarm control panel with. eg: 1234</summary>
		[JsonPropertyName("code")]
		public string? Code { get; init; }
	}

	public record AlarmControlPanelAlarmArmCustomBypassParameters
	{
		///<summary>An optional code to arm custom bypass the alarm control panel with. eg: 1234</summary>
		[JsonPropertyName("code")]
		public string? Code { get; init; }
	}

	public record AlarmControlPanelAlarmArmHomeParameters
	{
		///<summary>An optional code to arm home the alarm control panel with. eg: 1234</summary>
		[JsonPropertyName("code")]
		public string? Code { get; init; }
	}

	public record AlarmControlPanelAlarmArmNightParameters
	{
		///<summary>An optional code to arm night the alarm control panel with. eg: 1234</summary>
		[JsonPropertyName("code")]
		public string? Code { get; init; }
	}

	public record AlarmControlPanelAlarmArmVacationParameters
	{
		///<summary>An optional code to arm vacation the alarm control panel with. eg: 1234</summary>
		[JsonPropertyName("code")]
		public string? Code { get; init; }
	}

	public record AlarmControlPanelAlarmDisarmParameters
	{
		///<summary>An optional code to disarm the alarm control panel with. eg: 1234</summary>
		[JsonPropertyName("code")]
		public string? Code { get; init; }
	}

	public record AlarmControlPanelAlarmTriggerParameters
	{
		///<summary>An optional code to trigger the alarm control panel with. eg: 1234</summary>
		[JsonPropertyName("code")]
		public string? Code { get; init; }
	}

	public class AlertServices
	{
		private readonly IHaContext _haContext;
		public AlertServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Toggle alert's notifications.</summary>
		///<param name="target">The target for this service call</param>
		public void Toggle(ServiceTarget target)
		{
			_haContext.CallService("alert", "toggle", target);
		}

		///<summary>Silence alert's notifications.</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOff(ServiceTarget target)
		{
			_haContext.CallService("alert", "turn_off", target);
		}

		///<summary>Reset alert's notifications.</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOn(ServiceTarget target)
		{
			_haContext.CallService("alert", "turn_on", target);
		}
	}

	public class AlexaMediaServices
	{
		private readonly IHaContext _haContext;
		public AlexaMediaServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Clear last entries from Alexa history for each Alexa account.</summary>
		public void ClearHistory(AlexaMediaClearHistoryParameters data)
		{
			_haContext.CallService("alexa_media", "clear_history", null, data);
		}

		///<summary>Clear last entries from Alexa history for each Alexa account.</summary>
		///<param name="email">List of Alexa accounts to update. If empty, will delete from all known accounts. eg: my_email@alexa.com</param>
		///<param name="entries">Number of entries to clear from 1 to 50. If empty, clear 50. eg: 50</param>
		public void ClearHistory(object? @email = null, object? @entries = null)
		{
			_haContext.CallService("alexa_media", "clear_history", null, new AlexaMediaClearHistoryParameters{Email = @email, Entries = @entries});
		}

		///<summary>Force logout of Alexa Login account and deletion of .pickle. Intended for debugging use.</summary>
		public void ForceLogout(AlexaMediaForceLogoutParameters data)
		{
			_haContext.CallService("alexa_media", "force_logout", null, data);
		}

		///<summary>Force logout of Alexa Login account and deletion of .pickle. Intended for debugging use.</summary>
		///<param name="email">List of Alexa accounts to log out. If empty, will log out from all known accounts. eg: my_email@alexa.com</param>
		public void ForceLogout(object? @email = null)
		{
			_haContext.CallService("alexa_media", "force_logout", null, new AlexaMediaForceLogoutParameters{Email = @email});
		}

		///<summary>Forces update of last_called echo device for each Alexa account.</summary>
		public void UpdateLastCalled(AlexaMediaUpdateLastCalledParameters data)
		{
			_haContext.CallService("alexa_media", "update_last_called", null, data);
		}

		///<summary>Forces update of last_called echo device for each Alexa account.</summary>
		///<param name="email">List of Alexa accounts to update. If empty, will update all known accounts. eg: my_email@alexa.com</param>
		public void UpdateLastCalled(object? @email = null)
		{
			_haContext.CallService("alexa_media", "update_last_called", null, new AlexaMediaUpdateLastCalledParameters{Email = @email});
		}
	}

	public record AlexaMediaClearHistoryParameters
	{
		///<summary>List of Alexa accounts to update. If empty, will delete from all known accounts. eg: my_email@alexa.com</summary>
		[JsonPropertyName("email")]
		public object? Email { get; init; }

		///<summary>Number of entries to clear from 1 to 50. If empty, clear 50. eg: 50</summary>
		[JsonPropertyName("entries")]
		public object? Entries { get; init; }
	}

	public record AlexaMediaForceLogoutParameters
	{
		///<summary>List of Alexa accounts to log out. If empty, will log out from all known accounts. eg: my_email@alexa.com</summary>
		[JsonPropertyName("email")]
		public object? Email { get; init; }
	}

	public record AlexaMediaUpdateLastCalledParameters
	{
		///<summary>List of Alexa accounts to update. If empty, will update all known accounts. eg: my_email@alexa.com</summary>
		[JsonPropertyName("email")]
		public object? Email { get; init; }
	}

	public class AndroidtvServices
	{
		private readonly IHaContext _haContext;
		public AndroidtvServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Send an ADB command to an Android TV / Fire TV device.</summary>
		///<param name="target">The target for this service call</param>
		public void AdbCommand(ServiceTarget target, AndroidtvAdbCommandParameters data)
		{
			_haContext.CallService("androidtv", "adb_command", target, data);
		}

		///<summary>Send an ADB command to an Android TV / Fire TV device.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="command">Either a key command or an ADB shell command. eg: HOME</param>
		public void AdbCommand(ServiceTarget target, string @command)
		{
			_haContext.CallService("androidtv", "adb_command", target, new AndroidtvAdbCommandParameters{Command = @command});
		}

		///<summary>Download a file from your Android TV / Fire TV device to your Home Assistant instance.</summary>
		///<param name="target">The target for this service call</param>
		public void Download(ServiceTarget target, AndroidtvDownloadParameters data)
		{
			_haContext.CallService("androidtv", "download", target, data);
		}

		///<summary>Download a file from your Android TV / Fire TV device to your Home Assistant instance.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="devicePath">The filepath on the Android TV / Fire TV device. eg: /storage/emulated/0/Download/example.txt</param>
		///<param name="localPath">The filepath on your Home Assistant instance. eg: /config/www/example.txt</param>
		public void Download(ServiceTarget target, string @devicePath, string @localPath)
		{
			_haContext.CallService("androidtv", "download", target, new AndroidtvDownloadParameters{DevicePath = @devicePath, LocalPath = @localPath});
		}

		///<summary>Translate a key press on a remote into ADB 'sendevent' commands.  You must press one button on the remote within 8 seconds of calling this service.</summary>
		///<param name="target">The target for this service call</param>
		public void LearnSendevent(ServiceTarget target)
		{
			_haContext.CallService("androidtv", "learn_sendevent", target);
		}

		///<summary>Upload a file from your Home Assistant instance to an Android TV / Fire TV device.</summary>
		///<param name="target">The target for this service call</param>
		public void Upload(ServiceTarget target, AndroidtvUploadParameters data)
		{
			_haContext.CallService("androidtv", "upload", target, data);
		}

		///<summary>Upload a file from your Home Assistant instance to an Android TV / Fire TV device.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="devicePath">The filepath on the Android TV / Fire TV device. eg: /storage/emulated/0/Download/example.txt</param>
		///<param name="localPath">The filepath on your Home Assistant instance. eg: /config/www/example.txt</param>
		public void Upload(ServiceTarget target, string @devicePath, string @localPath)
		{
			_haContext.CallService("androidtv", "upload", target, new AndroidtvUploadParameters{DevicePath = @devicePath, LocalPath = @localPath});
		}
	}

	public record AndroidtvAdbCommandParameters
	{
		///<summary>Either a key command or an ADB shell command. eg: HOME</summary>
		[JsonPropertyName("command")]
		public string? Command { get; init; }
	}

	public record AndroidtvDownloadParameters
	{
		///<summary>The filepath on the Android TV / Fire TV device. eg: /storage/emulated/0/Download/example.txt</summary>
		[JsonPropertyName("device_path")]
		public string? DevicePath { get; init; }

		///<summary>The filepath on your Home Assistant instance. eg: /config/www/example.txt</summary>
		[JsonPropertyName("local_path")]
		public string? LocalPath { get; init; }
	}

	public record AndroidtvUploadParameters
	{
		///<summary>The filepath on the Android TV / Fire TV device. eg: /storage/emulated/0/Download/example.txt</summary>
		[JsonPropertyName("device_path")]
		public string? DevicePath { get; init; }

		///<summary>The filepath on your Home Assistant instance. eg: /config/www/example.txt</summary>
		[JsonPropertyName("local_path")]
		public string? LocalPath { get; init; }
	}

	public class AutomationServices
	{
		private readonly IHaContext _haContext;
		public AutomationServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Reload the automation configuration.</summary>
		public void Reload()
		{
			_haContext.CallService("automation", "reload", null);
		}

		///<summary>Toggle (enable / disable) an automation.</summary>
		///<param name="target">The target for this service call</param>
		public void Toggle(ServiceTarget target)
		{
			_haContext.CallService("automation", "toggle", target);
		}

		///<summary>Trigger the actions of an automation.</summary>
		///<param name="target">The target for this service call</param>
		public void Trigger(ServiceTarget target, AutomationTriggerParameters data)
		{
			_haContext.CallService("automation", "trigger", target, data);
		}

		///<summary>Trigger the actions of an automation.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="skipCondition">Whether or not the conditions will be skipped.</param>
		public void Trigger(ServiceTarget target, bool? @skipCondition = null)
		{
			_haContext.CallService("automation", "trigger", target, new AutomationTriggerParameters{SkipCondition = @skipCondition});
		}

		///<summary>Disable an automation.</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOff(ServiceTarget target, AutomationTurnOffParameters data)
		{
			_haContext.CallService("automation", "turn_off", target, data);
		}

		///<summary>Disable an automation.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="stopActions">Stop currently running actions.</param>
		public void TurnOff(ServiceTarget target, bool? @stopActions = null)
		{
			_haContext.CallService("automation", "turn_off", target, new AutomationTurnOffParameters{StopActions = @stopActions});
		}

		///<summary>Enable an automation.</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOn(ServiceTarget target)
		{
			_haContext.CallService("automation", "turn_on", target);
		}
	}

	public record AutomationTriggerParameters
	{
		///<summary>Whether or not the conditions will be skipped.</summary>
		[JsonPropertyName("skip_condition")]
		public bool? SkipCondition { get; init; }
	}

	public record AutomationTurnOffParameters
	{
		///<summary>Stop currently running actions.</summary>
		[JsonPropertyName("stop_actions")]
		public bool? StopActions { get; init; }
	}

	public class BackupServices
	{
		private readonly IHaContext _haContext;
		public BackupServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Create a new backup.</summary>
		public void Create()
		{
			_haContext.CallService("backup", "create", null);
		}
	}

	public class BrowserModServices
	{
		private readonly IHaContext _haContext;
		public BrowserModServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Cover screen in black until the mouse is moved or a key is pressed.</summary>
		public void Blackout(BrowserModBlackoutParameters data)
		{
			_haContext.CallService("browser_mod", "blackout", null, data);
		}

		///<summary>Cover screen in black until the mouse is moved or a key is pressed.</summary>
		///<param name="time">(optional) The blackout will turn on automatically after the specified number of seconds. It works kind of like a screensaver and will keep turning on until blackout is called again with time: -1. eg: 20</param>
		///<param name="deviceID">(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</param>
		public void Blackout(object? @time = null, object? @deviceID = null)
		{
			_haContext.CallService("browser_mod", "blackout", null, new BrowserModBlackoutParameters{Time = @time, DeviceID = @deviceID});
		}

		public void CallService()
		{
			_haContext.CallService("browser_mod", "call_service", null);
		}

		public void CleanDevices()
		{
			_haContext.CallService("browser_mod", "clean_devices", null);
		}

		///<summary>Close all popups on all browsers.</summary>
		public void ClosePopup(BrowserModClosePopupParameters data)
		{
			_haContext.CallService("browser_mod", "close_popup", null, data);
		}

		///<summary>Close all popups on all browsers.</summary>
		///<param name="deviceID">(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</param>
		public void ClosePopup(object? @deviceID = null)
		{
			_haContext.CallService("browser_mod", "close_popup", null, new BrowserModClosePopupParameters{DeviceID = @deviceID});
		}

		///<summary>Send a command to a browser.</summary>
		public void Command(BrowserModCommandParameters data)
		{
			_haContext.CallService("browser_mod", "command", null, data);
		}

		///<summary>Send a command to a browser.</summary>
		///<param name="command">Command to send eg: navigate</param>
		///<param name="deviceID">(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</param>
		public void Command(object? @command = null, object? @deviceID = null)
		{
			_haContext.CallService("browser_mod", "command", null, new BrowserModCommandParameters{Command = @command, DeviceID = @deviceID});
		}

		///<summary>Send several commands to a browser</summary>
		public void Commands(BrowserModCommandsParameters data)
		{
			_haContext.CallService("browser_mod", "commands", null, data);
		}

		///<summary>Send several commands to a browser</summary>
		///<param name="commands">List of commands to send</param>
		///<param name="deviceID">(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</param>
		public void Commands(object? @commands = null, object? @deviceID = null)
		{
			_haContext.CallService("browser_mod", "commands", null, new BrowserModCommandsParameters{Commands = @commands, DeviceID = @deviceID});
		}

		///<summary>On all browsers, show a popup, and a javascript alert with the current device ID.</summary>
		public void Debug(BrowserModDebugParameters data)
		{
			_haContext.CallService("browser_mod", "debug", null, data);
		}

		///<summary>On all browsers, show a popup, and a javascript alert with the current device ID.</summary>
		///<param name="deviceID">(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</param>
		public void Debug(object? @deviceID = null)
		{
			_haContext.CallService("browser_mod", "debug", null, new BrowserModDebugParameters{DeviceID = @deviceID});
		}

		///<summary>Do nothing for a while</summary>
		public void Delay(BrowserModDelayParameters data)
		{
			_haContext.CallService("browser_mod", "delay", null, data);
		}

		///<summary>Do nothing for a while</summary>
		///<param name="seconds">Number of seconds to delay eg: 5</param>
		///<param name="deviceID">(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</param>
		public void Delay(object? @seconds = null, object? @deviceID = null)
		{
			_haContext.CallService("browser_mod", "delay", null, new BrowserModDelayParameters{Seconds = @seconds, DeviceID = @deviceID});
		}

		///<summary>Refresh the lovelace configuration.</summary>
		public void LovelaceReload(BrowserModLovelaceReloadParameters data)
		{
			_haContext.CallService("browser_mod", "lovelace_reload", null, data);
		}

		///<summary>Refresh the lovelace configuration.</summary>
		///<param name="deviceID">(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</param>
		public void LovelaceReload(object? @deviceID = null)
		{
			_haContext.CallService("browser_mod", "lovelace_reload", null, new BrowserModLovelaceReloadParameters{DeviceID = @deviceID});
		}

		///<summary>Open the more info dialog of an entity on a browser.</summary>
		public void MoreInfo(BrowserModMoreInfoParameters data)
		{
			_haContext.CallService("browser_mod", "more_info", null, data);
		}

		///<summary>Open the more info dialog of an entity on a browser.</summary>
		///<param name="entityId">Entity to show more info for eg: camera.front_door</param>
		///<param name="deviceID">(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</param>
		///<param name="large">(optional) Set to true to make wider eg: true</param>
		public void MoreInfo(object? @entityId = null, object? @deviceID = null, object? @large = null)
		{
			_haContext.CallService("browser_mod", "more_info", null, new BrowserModMoreInfoParameters{EntityId = @entityId, DeviceID = @deviceID, Large = @large});
		}

		///<summary>Navigate to a path on a browser.</summary>
		public void Navigate(BrowserModNavigateParameters data)
		{
			_haContext.CallService("browser_mod", "navigate", null, data);
		}

		///<summary>Navigate to a path on a browser.</summary>
		///<param name="navigationPath">Path to navigate to eg: /lovelace/1</param>
		///<param name="deviceID">(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</param>
		public void Navigate(object? @navigationPath = null, object? @deviceID = null)
		{
			_haContext.CallService("browser_mod", "navigate", null, new BrowserModNavigateParameters{NavigationPath = @navigationPath, DeviceID = @deviceID});
		}

		///<summary>Remove a blackout from a browser.</summary>
		public void NoBlackout(BrowserModNoBlackoutParameters data)
		{
			_haContext.CallService("browser_mod", "no_blackout", null, data);
		}

		///<summary>Remove a blackout from a browser.</summary>
		///<param name="brightness">(optional) On a Fully Kiosk Browser Plus set the screen brightness from 0 - 255.</param>
		///<param name="deviceID">(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</param>
		public void NoBlackout(object? @brightness = null, object? @deviceID = null)
		{
			_haContext.CallService("browser_mod", "no_blackout", null, new BrowserModNoBlackoutParameters{Brightness = @brightness, DeviceID = @deviceID});
		}

		///<summary>Pop up a card on a browser.</summary>
		public void Popup(BrowserModPopupParameters data)
		{
			_haContext.CallService("browser_mod", "popup", null, data);
		}

		///<summary>Pop up a card on a browser.</summary>
		///<param name="title">Name to show in popup bar eg: Popup example</param>
		///<param name="card">YAML config for card to show</param>
		///<param name="deviceID">(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</param>
		///<param name="large">(optional) Set to true to make wider eg: true</param>
		///<param name="hideHeader">(optional) Hide header title and close button eg: true</param>
		///<param name="autoClose">(optional) Close popup when mouse is moved or key is pressed. Also hides header eg: true</param>
		///<param name="time">(optional) When mouse isn't moved or keys aren't pressed for this amount of seconds, reopen. Only usable with auto_close. See blackout eg: 20</param>
		public void Popup(object? @title = null, object? @card = null, object? @deviceID = null, object? @large = null, object? @hideHeader = null, object? @autoClose = null, object? @time = null)
		{
			_haContext.CallService("browser_mod", "popup", null, new BrowserModPopupParameters{Title = @title, Card = @card, DeviceID = @deviceID, Large = @large, HideHeader = @hideHeader, AutoClose = @autoClose, Time = @time});
		}

		///<summary>On all browsers, change the theme.</summary>
		public void SetTheme(BrowserModSetThemeParameters data)
		{
			_haContext.CallService("browser_mod", "set_theme", null, data);
		}

		///<summary>On all browsers, change the theme.</summary>
		///<param name="theme">Theme to change to eg: {theme: "clear_light"}</param>
		///<param name="deviceID">(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</param>
		public void SetTheme(object? @theme = null, object? @deviceID = null)
		{
			_haContext.CallService("browser_mod", "set_theme", null, new BrowserModSetThemeParameters{Theme = @theme, DeviceID = @deviceID});
		}

		///<summary>Show a toast message in the bottom left on all browsers.</summary>
		public void Toast(BrowserModToastParameters data)
		{
			_haContext.CallService("browser_mod", "toast", null, data);
		}

		///<summary>Show a toast message in the bottom left on all browsers.</summary>
		///<param name="message">Message to show eg: Short message</param>
		///<param name="deviceID">(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</param>
		///<param name="duration">(optional) Time in milliseconds to show message for. Set to 0 for persistent display. eg: 10000</param>
		public void Toast(object? @message = null, object? @deviceID = null, object? @duration = null)
		{
			_haContext.CallService("browser_mod", "toast", null, new BrowserModToastParameters{Message = @message, DeviceID = @deviceID, Duration = @duration});
		}

		///<summary>Forces the browser to reload the page. Same as clicking your browser's refresh button. Note: This is not guaranteed to clear the frontend cache.</summary>
		public void WindowReload(BrowserModWindowReloadParameters data)
		{
			_haContext.CallService("browser_mod", "window_reload", null, data);
		}

		///<summary>Forces the browser to reload the page. Same as clicking your browser's refresh button. Note: This is not guaranteed to clear the frontend cache.</summary>
		///<param name="deviceID">(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</param>
		public void WindowReload(object? @deviceID = null)
		{
			_haContext.CallService("browser_mod", "window_reload", null, new BrowserModWindowReloadParameters{DeviceID = @deviceID});
		}
	}

	public record BrowserModBlackoutParameters
	{
		///<summary>(optional) The blackout will turn on automatically after the specified number of seconds. It works kind of like a screensaver and will keep turning on until blackout is called again with time: -1. eg: 20</summary>
		[JsonPropertyName("time")]
		public object? Time { get; init; }

		///<summary>(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</summary>
		[JsonPropertyName("deviceID")]
		public object? DeviceID { get; init; }
	}

	public record BrowserModClosePopupParameters
	{
		///<summary>(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</summary>
		[JsonPropertyName("deviceID")]
		public object? DeviceID { get; init; }
	}

	public record BrowserModCommandParameters
	{
		///<summary>Command to send eg: navigate</summary>
		[JsonPropertyName("command")]
		public object? Command { get; init; }

		///<summary>(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</summary>
		[JsonPropertyName("deviceID")]
		public object? DeviceID { get; init; }
	}

	public record BrowserModCommandsParameters
	{
		///<summary>List of commands to send</summary>
		[JsonPropertyName("commands")]
		public object? Commands { get; init; }

		///<summary>(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</summary>
		[JsonPropertyName("deviceID")]
		public object? DeviceID { get; init; }
	}

	public record BrowserModDebugParameters
	{
		///<summary>(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</summary>
		[JsonPropertyName("deviceID")]
		public object? DeviceID { get; init; }
	}

	public record BrowserModDelayParameters
	{
		///<summary>Number of seconds to delay eg: 5</summary>
		[JsonPropertyName("seconds")]
		public object? Seconds { get; init; }

		///<summary>(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</summary>
		[JsonPropertyName("deviceID")]
		public object? DeviceID { get; init; }
	}

	public record BrowserModLovelaceReloadParameters
	{
		///<summary>(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</summary>
		[JsonPropertyName("deviceID")]
		public object? DeviceID { get; init; }
	}

	public record BrowserModMoreInfoParameters
	{
		///<summary>Entity to show more info for eg: camera.front_door</summary>
		[JsonPropertyName("entity_id")]
		public object? EntityId { get; init; }

		///<summary>(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</summary>
		[JsonPropertyName("deviceID")]
		public object? DeviceID { get; init; }

		///<summary>(optional) Set to true to make wider eg: true</summary>
		[JsonPropertyName("large")]
		public object? Large { get; init; }
	}

	public record BrowserModNavigateParameters
	{
		///<summary>Path to navigate to eg: /lovelace/1</summary>
		[JsonPropertyName("navigation_path")]
		public object? NavigationPath { get; init; }

		///<summary>(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</summary>
		[JsonPropertyName("deviceID")]
		public object? DeviceID { get; init; }
	}

	public record BrowserModNoBlackoutParameters
	{
		///<summary>(optional) On a Fully Kiosk Browser Plus set the screen brightness from 0 - 255.</summary>
		[JsonPropertyName("brightness")]
		public object? Brightness { get; init; }

		///<summary>(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</summary>
		[JsonPropertyName("deviceID")]
		public object? DeviceID { get; init; }
	}

	public record BrowserModPopupParameters
	{
		///<summary>Name to show in popup bar eg: Popup example</summary>
		[JsonPropertyName("title")]
		public object? Title { get; init; }

		///<summary>YAML config for card to show</summary>
		[JsonPropertyName("card")]
		public object? Card { get; init; }

		///<summary>(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</summary>
		[JsonPropertyName("deviceID")]
		public object? DeviceID { get; init; }

		///<summary>(optional) Set to true to make wider eg: true</summary>
		[JsonPropertyName("large")]
		public object? Large { get; init; }

		///<summary>(optional) Hide header title and close button eg: true</summary>
		[JsonPropertyName("hide_header")]
		public object? HideHeader { get; init; }

		///<summary>(optional) Close popup when mouse is moved or key is pressed. Also hides header eg: true</summary>
		[JsonPropertyName("auto_close")]
		public object? AutoClose { get; init; }

		///<summary>(optional) When mouse isn't moved or keys aren't pressed for this amount of seconds, reopen. Only usable with auto_close. See blackout eg: 20</summary>
		[JsonPropertyName("time")]
		public object? Time { get; init; }
	}

	public record BrowserModSetThemeParameters
	{
		///<summary>Theme to change to eg: {theme: "clear_light"}</summary>
		[JsonPropertyName("theme")]
		public object? Theme { get; init; }

		///<summary>(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</summary>
		[JsonPropertyName("deviceID")]
		public object? DeviceID { get; init; }
	}

	public record BrowserModToastParameters
	{
		///<summary>Message to show eg: Short message</summary>
		[JsonPropertyName("message")]
		public object? Message { get; init; }

		///<summary>(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</summary>
		[JsonPropertyName("deviceID")]
		public object? DeviceID { get; init; }

		///<summary>(optional) Time in milliseconds to show message for. Set to 0 for persistent display. eg: 10000</summary>
		[JsonPropertyName("duration")]
		public object? Duration { get; init; }
	}

	public record BrowserModWindowReloadParameters
	{
		///<summary>(optional) List of receiving browsers eg: ["99980b13-dabc9563", "office_computer"]</summary>
		[JsonPropertyName("deviceID")]
		public object? DeviceID { get; init; }
	}

	public class ButtonServices
	{
		private readonly IHaContext _haContext;
		public ButtonServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Press the button entity.</summary>
		///<param name="target">The target for this service call</param>
		public void Press(ServiceTarget target)
		{
			_haContext.CallService("button", "press", target);
		}
	}

	public class CameraServices
	{
		private readonly IHaContext _haContext;
		public CameraServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Disable the motion detection in a camera.</summary>
		///<param name="target">The target for this service call</param>
		public void DisableMotionDetection(ServiceTarget target)
		{
			_haContext.CallService("camera", "disable_motion_detection", target);
		}

		///<summary>Enable the motion detection in a camera.</summary>
		///<param name="target">The target for this service call</param>
		public void EnableMotionDetection(ServiceTarget target)
		{
			_haContext.CallService("camera", "enable_motion_detection", target);
		}

		///<summary>Play camera stream on supported media player.</summary>
		///<param name="target">The target for this service call</param>
		public void PlayStream(ServiceTarget target, CameraPlayStreamParameters data)
		{
			_haContext.CallService("camera", "play_stream", target, data);
		}

		///<summary>Play camera stream on supported media player.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="mediaPlayer">Name(s) of media player to stream to.</param>
		///<param name="format">Stream format supported by media player.</param>
		public void PlayStream(ServiceTarget target, string @mediaPlayer, object? @format = null)
		{
			_haContext.CallService("camera", "play_stream", target, new CameraPlayStreamParameters{MediaPlayer = @mediaPlayer, Format = @format});
		}

		///<summary>Record live camera feed.</summary>
		///<param name="target">The target for this service call</param>
		public void Record(ServiceTarget target, CameraRecordParameters data)
		{
			_haContext.CallService("camera", "record", target, data);
		}

		///<summary>Record live camera feed.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="filename">Template of a Filename. Variable is entity_id. Must be mp4. eg: /tmp/snapshot_{{ entity_id.name }}.mp4</param>
		///<param name="duration">Target recording length.</param>
		///<param name="lookback">Target lookback period to include in addition to duration. Only available if there is currently an active HLS stream.</param>
		public void Record(ServiceTarget target, string @filename, long? @duration = null, long? @lookback = null)
		{
			_haContext.CallService("camera", "record", target, new CameraRecordParameters{Filename = @filename, Duration = @duration, Lookback = @lookback});
		}

		///<summary>Take a snapshot from a camera.</summary>
		///<param name="target">The target for this service call</param>
		public void Snapshot(ServiceTarget target, CameraSnapshotParameters data)
		{
			_haContext.CallService("camera", "snapshot", target, data);
		}

		///<summary>Take a snapshot from a camera.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="filename">Template of a Filename. Variable is entity_id. eg: /tmp/snapshot_{{ entity_id.name }}.jpg</param>
		public void Snapshot(ServiceTarget target, string @filename)
		{
			_haContext.CallService("camera", "snapshot", target, new CameraSnapshotParameters{Filename = @filename});
		}

		///<summary>Turn off camera.</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOff(ServiceTarget target)
		{
			_haContext.CallService("camera", "turn_off", target);
		}

		///<summary>Turn on camera.</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOn(ServiceTarget target)
		{
			_haContext.CallService("camera", "turn_on", target);
		}
	}

	public record CameraPlayStreamParameters
	{
		///<summary>Name(s) of media player to stream to.</summary>
		[JsonPropertyName("media_player")]
		public string? MediaPlayer { get; init; }

		///<summary>Stream format supported by media player.</summary>
		[JsonPropertyName("format")]
		public object? Format { get; init; }
	}

	public record CameraRecordParameters
	{
		///<summary>Template of a Filename. Variable is entity_id. Must be mp4. eg: /tmp/snapshot_{{ entity_id.name }}.mp4</summary>
		[JsonPropertyName("filename")]
		public string? Filename { get; init; }

		///<summary>Target recording length.</summary>
		[JsonPropertyName("duration")]
		public long? Duration { get; init; }

		///<summary>Target lookback period to include in addition to duration. Only available if there is currently an active HLS stream.</summary>
		[JsonPropertyName("lookback")]
		public long? Lookback { get; init; }
	}

	public record CameraSnapshotParameters
	{
		///<summary>Template of a Filename. Variable is entity_id. eg: /tmp/snapshot_{{ entity_id.name }}.jpg</summary>
		[JsonPropertyName("filename")]
		public string? Filename { get; init; }
	}

	public class ClimateServices
	{
		private readonly IHaContext _haContext;
		public ClimateServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Turn auxiliary heater on/off for climate device.</summary>
		///<param name="target">The target for this service call</param>
		public void SetAuxHeat(ServiceTarget target, ClimateSetAuxHeatParameters data)
		{
			_haContext.CallService("climate", "set_aux_heat", target, data);
		}

		///<summary>Turn auxiliary heater on/off for climate device.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="auxHeat">New value of auxiliary heater.</param>
		public void SetAuxHeat(ServiceTarget target, bool @auxHeat)
		{
			_haContext.CallService("climate", "set_aux_heat", target, new ClimateSetAuxHeatParameters{AuxHeat = @auxHeat});
		}

		///<summary>Set fan operation for climate device.</summary>
		///<param name="target">The target for this service call</param>
		public void SetFanMode(ServiceTarget target, ClimateSetFanModeParameters data)
		{
			_haContext.CallService("climate", "set_fan_mode", target, data);
		}

		///<summary>Set fan operation for climate device.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="fanMode">New value of fan mode. eg: low</param>
		public void SetFanMode(ServiceTarget target, string @fanMode)
		{
			_haContext.CallService("climate", "set_fan_mode", target, new ClimateSetFanModeParameters{FanMode = @fanMode});
		}

		///<summary>Set target humidity of climate device.</summary>
		///<param name="target">The target for this service call</param>
		public void SetHumidity(ServiceTarget target, ClimateSetHumidityParameters data)
		{
			_haContext.CallService("climate", "set_humidity", target, data);
		}

		///<summary>Set target humidity of climate device.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="humidity">New target humidity for climate device.</param>
		public void SetHumidity(ServiceTarget target, long @humidity)
		{
			_haContext.CallService("climate", "set_humidity", target, new ClimateSetHumidityParameters{Humidity = @humidity});
		}

		///<summary>Set HVAC operation mode for climate device.</summary>
		///<param name="target">The target for this service call</param>
		public void SetHvacMode(ServiceTarget target, ClimateSetHvacModeParameters data)
		{
			_haContext.CallService("climate", "set_hvac_mode", target, data);
		}

		///<summary>Set HVAC operation mode for climate device.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="hvacMode">New value of operation mode.</param>
		public void SetHvacMode(ServiceTarget target, object? @hvacMode = null)
		{
			_haContext.CallService("climate", "set_hvac_mode", target, new ClimateSetHvacModeParameters{HvacMode = @hvacMode});
		}

		///<summary>Set preset mode for climate device.</summary>
		///<param name="target">The target for this service call</param>
		public void SetPresetMode(ServiceTarget target, ClimateSetPresetModeParameters data)
		{
			_haContext.CallService("climate", "set_preset_mode", target, data);
		}

		///<summary>Set preset mode for climate device.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="presetMode">New value of preset mode. eg: away</param>
		public void SetPresetMode(ServiceTarget target, string @presetMode)
		{
			_haContext.CallService("climate", "set_preset_mode", target, new ClimateSetPresetModeParameters{PresetMode = @presetMode});
		}

		///<summary>Set swing operation for climate device.</summary>
		///<param name="target">The target for this service call</param>
		public void SetSwingMode(ServiceTarget target, ClimateSetSwingModeParameters data)
		{
			_haContext.CallService("climate", "set_swing_mode", target, data);
		}

		///<summary>Set swing operation for climate device.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="swingMode">New value of swing mode. eg: horizontal</param>
		public void SetSwingMode(ServiceTarget target, string @swingMode)
		{
			_haContext.CallService("climate", "set_swing_mode", target, new ClimateSetSwingModeParameters{SwingMode = @swingMode});
		}

		///<summary>Set target temperature of climate device.</summary>
		///<param name="target">The target for this service call</param>
		public void SetTemperature(ServiceTarget target, ClimateSetTemperatureParameters data)
		{
			_haContext.CallService("climate", "set_temperature", target, data);
		}

		///<summary>Set target temperature of climate device.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="temperature">New target temperature for HVAC.</param>
		///<param name="targetTempHigh">New target high temperature for HVAC.</param>
		///<param name="targetTempLow">New target low temperature for HVAC.</param>
		///<param name="hvacMode">HVAC operation mode to set temperature to.</param>
		public void SetTemperature(ServiceTarget target, double? @temperature = null, double? @targetTempHigh = null, double? @targetTempLow = null, object? @hvacMode = null)
		{
			_haContext.CallService("climate", "set_temperature", target, new ClimateSetTemperatureParameters{Temperature = @temperature, TargetTempHigh = @targetTempHigh, TargetTempLow = @targetTempLow, HvacMode = @hvacMode});
		}

		///<summary>Turn climate device off.</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOff(ServiceTarget target)
		{
			_haContext.CallService("climate", "turn_off", target);
		}

		///<summary>Turn climate device on.</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOn(ServiceTarget target)
		{
			_haContext.CallService("climate", "turn_on", target);
		}
	}

	public record ClimateSetAuxHeatParameters
	{
		///<summary>New value of auxiliary heater.</summary>
		[JsonPropertyName("aux_heat")]
		public bool? AuxHeat { get; init; }
	}

	public record ClimateSetFanModeParameters
	{
		///<summary>New value of fan mode. eg: low</summary>
		[JsonPropertyName("fan_mode")]
		public string? FanMode { get; init; }
	}

	public record ClimateSetHumidityParameters
	{
		///<summary>New target humidity for climate device.</summary>
		[JsonPropertyName("humidity")]
		public long? Humidity { get; init; }
	}

	public record ClimateSetHvacModeParameters
	{
		///<summary>New value of operation mode.</summary>
		[JsonPropertyName("hvac_mode")]
		public object? HvacMode { get; init; }
	}

	public record ClimateSetPresetModeParameters
	{
		///<summary>New value of preset mode. eg: away</summary>
		[JsonPropertyName("preset_mode")]
		public string? PresetMode { get; init; }
	}

	public record ClimateSetSwingModeParameters
	{
		///<summary>New value of swing mode. eg: horizontal</summary>
		[JsonPropertyName("swing_mode")]
		public string? SwingMode { get; init; }
	}

	public record ClimateSetTemperatureParameters
	{
		///<summary>New target temperature for HVAC.</summary>
		[JsonPropertyName("temperature")]
		public double? Temperature { get; init; }

		///<summary>New target high temperature for HVAC.</summary>
		[JsonPropertyName("target_temp_high")]
		public double? TargetTempHigh { get; init; }

		///<summary>New target low temperature for HVAC.</summary>
		[JsonPropertyName("target_temp_low")]
		public double? TargetTempLow { get; init; }

		///<summary>HVAC operation mode to set temperature to.</summary>
		[JsonPropertyName("hvac_mode")]
		public object? HvacMode { get; init; }
	}

	public class CloudServices
	{
		private readonly IHaContext _haContext;
		public CloudServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Make instance UI available outside over NabuCasa cloud</summary>
		public void RemoteConnect()
		{
			_haContext.CallService("cloud", "remote_connect", null);
		}

		///<summary>Disconnect UI from NabuCasa cloud</summary>
		public void RemoteDisconnect()
		{
			_haContext.CallService("cloud", "remote_disconnect", null);
		}
	}

	public class CounterServices
	{
		private readonly IHaContext _haContext;
		public CounterServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Change counter parameters.</summary>
		///<param name="target">The target for this service call</param>
		public void Configure(ServiceTarget target, CounterConfigureParameters data)
		{
			_haContext.CallService("counter", "configure", target, data);
		}

		///<summary>Change counter parameters.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="minimum">New minimum value for the counter or None to remove minimum.</param>
		///<param name="maximum">New maximum value for the counter or None to remove maximum.</param>
		///<param name="step">New value for step.</param>
		///<param name="initial">New value for initial.</param>
		///<param name="value">New state value.</param>
		public void Configure(ServiceTarget target, long? @minimum = null, long? @maximum = null, long? @step = null, long? @initial = null, long? @value = null)
		{
			_haContext.CallService("counter", "configure", target, new CounterConfigureParameters{Minimum = @minimum, Maximum = @maximum, Step = @step, Initial = @initial, Value = @value});
		}

		///<summary>Decrement a counter.</summary>
		///<param name="target">The target for this service call</param>
		public void Decrement(ServiceTarget target)
		{
			_haContext.CallService("counter", "decrement", target);
		}

		///<summary>Increment a counter.</summary>
		///<param name="target">The target for this service call</param>
		public void Increment(ServiceTarget target)
		{
			_haContext.CallService("counter", "increment", target);
		}

		///<summary>Reset a counter.</summary>
		///<param name="target">The target for this service call</param>
		public void Reset(ServiceTarget target)
		{
			_haContext.CallService("counter", "reset", target);
		}
	}

	public record CounterConfigureParameters
	{
		///<summary>New minimum value for the counter or None to remove minimum.</summary>
		[JsonPropertyName("minimum")]
		public long? Minimum { get; init; }

		///<summary>New maximum value for the counter or None to remove maximum.</summary>
		[JsonPropertyName("maximum")]
		public long? Maximum { get; init; }

		///<summary>New value for step.</summary>
		[JsonPropertyName("step")]
		public long? Step { get; init; }

		///<summary>New value for initial.</summary>
		[JsonPropertyName("initial")]
		public long? Initial { get; init; }

		///<summary>New state value.</summary>
		[JsonPropertyName("value")]
		public long? Value { get; init; }
	}

	public class CoverServices
	{
		private readonly IHaContext _haContext;
		public CoverServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Close all or specified cover.</summary>
		///<param name="target">The target for this service call</param>
		public void CloseCover(ServiceTarget target)
		{
			_haContext.CallService("cover", "close_cover", target);
		}

		///<summary>Close all or specified cover tilt.</summary>
		///<param name="target">The target for this service call</param>
		public void CloseCoverTilt(ServiceTarget target)
		{
			_haContext.CallService("cover", "close_cover_tilt", target);
		}

		///<summary>Open all or specified cover.</summary>
		///<param name="target">The target for this service call</param>
		public void OpenCover(ServiceTarget target)
		{
			_haContext.CallService("cover", "open_cover", target);
		}

		///<summary>Open all or specified cover tilt.</summary>
		///<param name="target">The target for this service call</param>
		public void OpenCoverTilt(ServiceTarget target)
		{
			_haContext.CallService("cover", "open_cover_tilt", target);
		}

		///<summary>Move to specific position all or specified cover.</summary>
		///<param name="target">The target for this service call</param>
		public void SetCoverPosition(ServiceTarget target, CoverSetCoverPositionParameters data)
		{
			_haContext.CallService("cover", "set_cover_position", target, data);
		}

		///<summary>Move to specific position all or specified cover.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="position">Position of the cover</param>
		public void SetCoverPosition(ServiceTarget target, long @position)
		{
			_haContext.CallService("cover", "set_cover_position", target, new CoverSetCoverPositionParameters{Position = @position});
		}

		///<summary>Move to specific position all or specified cover tilt.</summary>
		///<param name="target">The target for this service call</param>
		public void SetCoverTiltPosition(ServiceTarget target, CoverSetCoverTiltPositionParameters data)
		{
			_haContext.CallService("cover", "set_cover_tilt_position", target, data);
		}

		///<summary>Move to specific position all or specified cover tilt.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="tiltPosition">Tilt position of the cover.</param>
		public void SetCoverTiltPosition(ServiceTarget target, long @tiltPosition)
		{
			_haContext.CallService("cover", "set_cover_tilt_position", target, new CoverSetCoverTiltPositionParameters{TiltPosition = @tiltPosition});
		}

		///<summary>Stop all or specified cover.</summary>
		///<param name="target">The target for this service call</param>
		public void StopCover(ServiceTarget target)
		{
			_haContext.CallService("cover", "stop_cover", target);
		}

		///<summary>Stop all or specified cover.</summary>
		///<param name="target">The target for this service call</param>
		public void StopCoverTilt(ServiceTarget target)
		{
			_haContext.CallService("cover", "stop_cover_tilt", target);
		}

		///<summary>Toggle a cover open/closed.</summary>
		///<param name="target">The target for this service call</param>
		public void Toggle(ServiceTarget target)
		{
			_haContext.CallService("cover", "toggle", target);
		}

		///<summary>Toggle a cover tilt open/closed.</summary>
		///<param name="target">The target for this service call</param>
		public void ToggleCoverTilt(ServiceTarget target)
		{
			_haContext.CallService("cover", "toggle_cover_tilt", target);
		}
	}

	public record CoverSetCoverPositionParameters
	{
		///<summary>Position of the cover</summary>
		[JsonPropertyName("position")]
		public long? Position { get; init; }
	}

	public record CoverSetCoverTiltPositionParameters
	{
		///<summary>Tilt position of the cover.</summary>
		[JsonPropertyName("tilt_position")]
		public long? TiltPosition { get; init; }
	}

	public class DeviceTrackerServices
	{
		private readonly IHaContext _haContext;
		public DeviceTrackerServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Control tracked device.</summary>
		public void See(DeviceTrackerSeeParameters data)
		{
			_haContext.CallService("device_tracker", "see", null, data);
		}

		///<summary>Control tracked device.</summary>
		///<param name="mac">MAC address of device eg: FF:FF:FF:FF:FF:FF</param>
		///<param name="devId">Id of device (find id in known_devices.yaml). eg: phonedave</param>
		///<param name="hostName">Hostname of device eg: Dave</param>
		///<param name="locationName">Name of location where device is located (not_home is away). eg: home</param>
		///<param name="gps">GPS coordinates where device is located (latitude, longitude). eg: [51.509802, -0.086692]</param>
		///<param name="gpsAccuracy">Accuracy of GPS coordinates.</param>
		///<param name="battery">Battery level of device.</param>
		public void See(string? @mac = null, string? @devId = null, string? @hostName = null, string? @locationName = null, object? @gps = null, long? @gpsAccuracy = null, long? @battery = null)
		{
			_haContext.CallService("device_tracker", "see", null, new DeviceTrackerSeeParameters{Mac = @mac, DevId = @devId, HostName = @hostName, LocationName = @locationName, Gps = @gps, GpsAccuracy = @gpsAccuracy, Battery = @battery});
		}
	}

	public record DeviceTrackerSeeParameters
	{
		///<summary>MAC address of device eg: FF:FF:FF:FF:FF:FF</summary>
		[JsonPropertyName("mac")]
		public string? Mac { get; init; }

		///<summary>Id of device (find id in known_devices.yaml). eg: phonedave</summary>
		[JsonPropertyName("dev_id")]
		public string? DevId { get; init; }

		///<summary>Hostname of device eg: Dave</summary>
		[JsonPropertyName("host_name")]
		public string? HostName { get; init; }

		///<summary>Name of location where device is located (not_home is away). eg: home</summary>
		[JsonPropertyName("location_name")]
		public string? LocationName { get; init; }

		///<summary>GPS coordinates where device is located (latitude, longitude). eg: [51.509802, -0.086692]</summary>
		[JsonPropertyName("gps")]
		public object? Gps { get; init; }

		///<summary>Accuracy of GPS coordinates.</summary>
		[JsonPropertyName("gps_accuracy")]
		public long? GpsAccuracy { get; init; }

		///<summary>Battery level of device.</summary>
		[JsonPropertyName("battery")]
		public long? Battery { get; init; }
	}

	public class EsphomeServices
	{
		private readonly IHaContext _haContext;
		public EsphomeServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Calls the service set_auto_off_time of the node basement-stair-lights-2</summary>
		public void BasementStairLights2SetAutoOffTime(EsphomeBasementStairLights2SetAutoOffTimeParameters data)
		{
			_haContext.CallService("esphome", "basement_stair_lights_2_set_auto_off_time", null, data);
		}

		///<summary>Calls the service set_auto_off_time of the node basement-stair-lights-2</summary>
		///<param name="autoOffTime"> eg: 42</param>
		public void BasementStairLights2SetAutoOffTime(long @autoOffTime)
		{
			_haContext.CallService("esphome", "basement_stair_lights_2_set_auto_off_time", null, new EsphomeBasementStairLights2SetAutoOffTimeParameters{AutoOffTime = @autoOffTime});
		}

		///<summary>Calls the service set_default_brightness of the node basement-stair-lights-2</summary>
		public void BasementStairLights2SetDefaultBrightness(EsphomeBasementStairLights2SetDefaultBrightnessParameters data)
		{
			_haContext.CallService("esphome", "basement_stair_lights_2_set_default_brightness", null, data);
		}

		///<summary>Calls the service set_default_brightness of the node basement-stair-lights-2</summary>
		///<param name="brightness"> eg: 42</param>
		public void BasementStairLights2SetDefaultBrightness(long @brightness)
		{
			_haContext.CallService("esphome", "basement_stair_lights_2_set_default_brightness", null, new EsphomeBasementStairLights2SetDefaultBrightnessParameters{Brightness = @brightness});
		}

		///<summary>Calls the service set_auto_off_time of the node basement-stair-lights</summary>
		public void BasementStairLightsSetAutoOffTime(EsphomeBasementStairLightsSetAutoOffTimeParameters data)
		{
			_haContext.CallService("esphome", "basement_stair_lights_set_auto_off_time", null, data);
		}

		///<summary>Calls the service set_auto_off_time of the node basement-stair-lights</summary>
		///<param name="autoOffTime"> eg: 42</param>
		public void BasementStairLightsSetAutoOffTime(long @autoOffTime)
		{
			_haContext.CallService("esphome", "basement_stair_lights_set_auto_off_time", null, new EsphomeBasementStairLightsSetAutoOffTimeParameters{AutoOffTime = @autoOffTime});
		}

		///<summary>Calls the service set_default_brightness of the node basement-stair-lights</summary>
		public void BasementStairLightsSetDefaultBrightness(EsphomeBasementStairLightsSetDefaultBrightnessParameters data)
		{
			_haContext.CallService("esphome", "basement_stair_lights_set_default_brightness", null, data);
		}

		///<summary>Calls the service set_default_brightness of the node basement-stair-lights</summary>
		///<param name="brightness"> eg: 42</param>
		public void BasementStairLightsSetDefaultBrightness(long @brightness)
		{
			_haContext.CallService("esphome", "basement_stair_lights_set_default_brightness", null, new EsphomeBasementStairLightsSetDefaultBrightnessParameters{Brightness = @brightness});
		}

		///<summary>Calls the service set_auto_off_time of the node computer-light</summary>
		public void ComputerLightSetAutoOffTime(EsphomeComputerLightSetAutoOffTimeParameters data)
		{
			_haContext.CallService("esphome", "computer_light_set_auto_off_time", null, data);
		}

		///<summary>Calls the service set_auto_off_time of the node computer-light</summary>
		///<param name="autoOffTime"> eg: 42</param>
		public void ComputerLightSetAutoOffTime(long @autoOffTime)
		{
			_haContext.CallService("esphome", "computer_light_set_auto_off_time", null, new EsphomeComputerLightSetAutoOffTimeParameters{AutoOffTime = @autoOffTime});
		}

		///<summary>Calls the service set_default_brightness of the node computer-light</summary>
		public void ComputerLightSetDefaultBrightness(EsphomeComputerLightSetDefaultBrightnessParameters data)
		{
			_haContext.CallService("esphome", "computer_light_set_default_brightness", null, data);
		}

		///<summary>Calls the service set_default_brightness of the node computer-light</summary>
		///<param name="brightness"> eg: 42</param>
		public void ComputerLightSetDefaultBrightness(long @brightness)
		{
			_haContext.CallService("esphome", "computer_light_set_default_brightness", null, new EsphomeComputerLightSetDefaultBrightnessParameters{Brightness = @brightness});
		}

		///<summary>Calls the service set_auto_off_time of the node dining-room-light</summary>
		public void DiningRoomLightSetAutoOffTime(EsphomeDiningRoomLightSetAutoOffTimeParameters data)
		{
			_haContext.CallService("esphome", "dining_room_light_set_auto_off_time", null, data);
		}

		///<summary>Calls the service set_auto_off_time of the node dining-room-light</summary>
		///<param name="autoOffTime"> eg: 42</param>
		public void DiningRoomLightSetAutoOffTime(long @autoOffTime)
		{
			_haContext.CallService("esphome", "dining_room_light_set_auto_off_time", null, new EsphomeDiningRoomLightSetAutoOffTimeParameters{AutoOffTime = @autoOffTime});
		}

		///<summary>Calls the service set_default_brightness of the node dining-room-light</summary>
		public void DiningRoomLightSetDefaultBrightness(EsphomeDiningRoomLightSetDefaultBrightnessParameters data)
		{
			_haContext.CallService("esphome", "dining_room_light_set_default_brightness", null, data);
		}

		///<summary>Calls the service set_default_brightness of the node dining-room-light</summary>
		///<param name="brightness"> eg: 42</param>
		public void DiningRoomLightSetDefaultBrightness(long @brightness)
		{
			_haContext.CallService("esphome", "dining_room_light_set_default_brightness", null, new EsphomeDiningRoomLightSetDefaultBrightnessParameters{Brightness = @brightness});
		}

		///<summary>Calls the service set_auto_off_time of the node family-room-light</summary>
		public void FamilyRoomLightSetAutoOffTime(EsphomeFamilyRoomLightSetAutoOffTimeParameters data)
		{
			_haContext.CallService("esphome", "family_room_light_set_auto_off_time", null, data);
		}

		///<summary>Calls the service set_auto_off_time of the node family-room-light</summary>
		///<param name="autoOffTime"> eg: 42</param>
		public void FamilyRoomLightSetAutoOffTime(long @autoOffTime)
		{
			_haContext.CallService("esphome", "family_room_light_set_auto_off_time", null, new EsphomeFamilyRoomLightSetAutoOffTimeParameters{AutoOffTime = @autoOffTime});
		}

		///<summary>Calls the service set_default_brightness of the node family-room-light</summary>
		public void FamilyRoomLightSetDefaultBrightness(EsphomeFamilyRoomLightSetDefaultBrightnessParameters data)
		{
			_haContext.CallService("esphome", "family_room_light_set_default_brightness", null, data);
		}

		///<summary>Calls the service set_default_brightness of the node family-room-light</summary>
		///<param name="brightness"> eg: 42</param>
		public void FamilyRoomLightSetDefaultBrightness(long @brightness)
		{
			_haContext.CallService("esphome", "family_room_light_set_default_brightness", null, new EsphomeFamilyRoomLightSetDefaultBrightnessParameters{Brightness = @brightness});
		}

		///<summary>Calls the service set_auto_off_time of the node front-entry-lights-2</summary>
		public void FrontEntryLights2SetAutoOffTime(EsphomeFrontEntryLights2SetAutoOffTimeParameters data)
		{
			_haContext.CallService("esphome", "front_entry_lights_2_set_auto_off_time", null, data);
		}

		///<summary>Calls the service set_auto_off_time of the node front-entry-lights-2</summary>
		///<param name="autoOffTime"> eg: 42</param>
		public void FrontEntryLights2SetAutoOffTime(long @autoOffTime)
		{
			_haContext.CallService("esphome", "front_entry_lights_2_set_auto_off_time", null, new EsphomeFrontEntryLights2SetAutoOffTimeParameters{AutoOffTime = @autoOffTime});
		}

		///<summary>Calls the service set_default_brightness of the node front-entry-lights-2</summary>
		public void FrontEntryLights2SetDefaultBrightness(EsphomeFrontEntryLights2SetDefaultBrightnessParameters data)
		{
			_haContext.CallService("esphome", "front_entry_lights_2_set_default_brightness", null, data);
		}

		///<summary>Calls the service set_default_brightness of the node front-entry-lights-2</summary>
		///<param name="brightness"> eg: 42</param>
		public void FrontEntryLights2SetDefaultBrightness(long @brightness)
		{
			_haContext.CallService("esphome", "front_entry_lights_2_set_default_brightness", null, new EsphomeFrontEntryLights2SetDefaultBrightnessParameters{Brightness = @brightness});
		}

		///<summary>Calls the service set_auto_off_time of the node front-entry-lights</summary>
		public void FrontEntryLightsSetAutoOffTime(EsphomeFrontEntryLightsSetAutoOffTimeParameters data)
		{
			_haContext.CallService("esphome", "front_entry_lights_set_auto_off_time", null, data);
		}

		///<summary>Calls the service set_auto_off_time of the node front-entry-lights</summary>
		///<param name="autoOffTime"> eg: 42</param>
		public void FrontEntryLightsSetAutoOffTime(long @autoOffTime)
		{
			_haContext.CallService("esphome", "front_entry_lights_set_auto_off_time", null, new EsphomeFrontEntryLightsSetAutoOffTimeParameters{AutoOffTime = @autoOffTime});
		}

		///<summary>Calls the service set_default_brightness of the node front-entry-lights</summary>
		public void FrontEntryLightsSetDefaultBrightness(EsphomeFrontEntryLightsSetDefaultBrightnessParameters data)
		{
			_haContext.CallService("esphome", "front_entry_lights_set_default_brightness", null, data);
		}

		///<summary>Calls the service set_default_brightness of the node front-entry-lights</summary>
		///<param name="brightness"> eg: 42</param>
		public void FrontEntryLightsSetDefaultBrightness(long @brightness)
		{
			_haContext.CallService("esphome", "front_entry_lights_set_default_brightness", null, new EsphomeFrontEntryLightsSetDefaultBrightnessParameters{Brightness = @brightness});
		}

		///<summary>Calls the service set_auto_off_time of the node front-lights</summary>
		public void FrontLightsSetAutoOffTime(EsphomeFrontLightsSetAutoOffTimeParameters data)
		{
			_haContext.CallService("esphome", "front_lights_set_auto_off_time", null, data);
		}

		///<summary>Calls the service set_auto_off_time of the node front-lights</summary>
		///<param name="autoOffTime"> eg: 42</param>
		public void FrontLightsSetAutoOffTime(long @autoOffTime)
		{
			_haContext.CallService("esphome", "front_lights_set_auto_off_time", null, new EsphomeFrontLightsSetAutoOffTimeParameters{AutoOffTime = @autoOffTime});
		}

		///<summary>Calls the service set_default_brightness of the node front-lights</summary>
		public void FrontLightsSetDefaultBrightness(EsphomeFrontLightsSetDefaultBrightnessParameters data)
		{
			_haContext.CallService("esphome", "front_lights_set_default_brightness", null, data);
		}

		///<summary>Calls the service set_default_brightness of the node front-lights</summary>
		///<param name="brightness"> eg: 42</param>
		public void FrontLightsSetDefaultBrightness(long @brightness)
		{
			_haContext.CallService("esphome", "front_lights_set_default_brightness", null, new EsphomeFrontLightsSetDefaultBrightnessParameters{Brightness = @brightness});
		}

		///<summary>Calls the service set_auto_off_time of the node kitchen-bar-lights</summary>
		public void KitchenBarLightsSetAutoOffTime(EsphomeKitchenBarLightsSetAutoOffTimeParameters data)
		{
			_haContext.CallService("esphome", "kitchen_bar_lights_set_auto_off_time", null, data);
		}

		///<summary>Calls the service set_auto_off_time of the node kitchen-bar-lights</summary>
		///<param name="autoOffTime"> eg: 42</param>
		public void KitchenBarLightsSetAutoOffTime(long @autoOffTime)
		{
			_haContext.CallService("esphome", "kitchen_bar_lights_set_auto_off_time", null, new EsphomeKitchenBarLightsSetAutoOffTimeParameters{AutoOffTime = @autoOffTime});
		}

		///<summary>Calls the service set_default_brightness of the node kitchen-bar-lights</summary>
		public void KitchenBarLightsSetDefaultBrightness(EsphomeKitchenBarLightsSetDefaultBrightnessParameters data)
		{
			_haContext.CallService("esphome", "kitchen_bar_lights_set_default_brightness", null, data);
		}

		///<summary>Calls the service set_default_brightness of the node kitchen-bar-lights</summary>
		///<param name="brightness"> eg: 42</param>
		public void KitchenBarLightsSetDefaultBrightness(long @brightness)
		{
			_haContext.CallService("esphome", "kitchen_bar_lights_set_default_brightness", null, new EsphomeKitchenBarLightsSetDefaultBrightnessParameters{Brightness = @brightness});
		}

		///<summary>Calls the service set_auto_off_time of the node kitchen-table-light</summary>
		public void KitchenTableLightSetAutoOffTime(EsphomeKitchenTableLightSetAutoOffTimeParameters data)
		{
			_haContext.CallService("esphome", "kitchen_table_light_set_auto_off_time", null, data);
		}

		///<summary>Calls the service set_auto_off_time of the node kitchen-table-light</summary>
		///<param name="autoOffTime"> eg: 42</param>
		public void KitchenTableLightSetAutoOffTime(long @autoOffTime)
		{
			_haContext.CallService("esphome", "kitchen_table_light_set_auto_off_time", null, new EsphomeKitchenTableLightSetAutoOffTimeParameters{AutoOffTime = @autoOffTime});
		}

		///<summary>Calls the service set_default_brightness of the node kitchen-table-light</summary>
		public void KitchenTableLightSetDefaultBrightness(EsphomeKitchenTableLightSetDefaultBrightnessParameters data)
		{
			_haContext.CallService("esphome", "kitchen_table_light_set_default_brightness", null, data);
		}

		///<summary>Calls the service set_default_brightness of the node kitchen-table-light</summary>
		///<param name="brightness"> eg: 42</param>
		public void KitchenTableLightSetDefaultBrightness(long @brightness)
		{
			_haContext.CallService("esphome", "kitchen_table_light_set_default_brightness", null, new EsphomeKitchenTableLightSetDefaultBrightnessParameters{Brightness = @brightness});
		}

		///<summary>Calls the service set_auto_off_time of the node living-room-lights</summary>
		public void LivingRoomLightsSetAutoOffTime(EsphomeLivingRoomLightsSetAutoOffTimeParameters data)
		{
			_haContext.CallService("esphome", "living_room_lights_set_auto_off_time", null, data);
		}

		///<summary>Calls the service set_auto_off_time of the node living-room-lights</summary>
		///<param name="autoOffTime"> eg: 42</param>
		public void LivingRoomLightsSetAutoOffTime(long @autoOffTime)
		{
			_haContext.CallService("esphome", "living_room_lights_set_auto_off_time", null, new EsphomeLivingRoomLightsSetAutoOffTimeParameters{AutoOffTime = @autoOffTime});
		}

		///<summary>Calls the service set_default_brightness of the node living-room-lights</summary>
		public void LivingRoomLightsSetDefaultBrightness(EsphomeLivingRoomLightsSetDefaultBrightnessParameters data)
		{
			_haContext.CallService("esphome", "living_room_lights_set_default_brightness", null, data);
		}

		///<summary>Calls the service set_default_brightness of the node living-room-lights</summary>
		///<param name="brightness"> eg: 42</param>
		public void LivingRoomLightsSetDefaultBrightness(long @brightness)
		{
			_haContext.CallService("esphome", "living_room_lights_set_default_brightness", null, new EsphomeLivingRoomLightsSetDefaultBrightnessParameters{Brightness = @brightness});
		}

		///<summary>Calls the service set_auto_off_time of the node master-bath-lights-2</summary>
		public void MasterBathLights2SetAutoOffTime(EsphomeMasterBathLights2SetAutoOffTimeParameters data)
		{
			_haContext.CallService("esphome", "master_bath_lights_2_set_auto_off_time", null, data);
		}

		///<summary>Calls the service set_auto_off_time of the node master-bath-lights-2</summary>
		///<param name="autoOffTime"> eg: 42</param>
		public void MasterBathLights2SetAutoOffTime(long @autoOffTime)
		{
			_haContext.CallService("esphome", "master_bath_lights_2_set_auto_off_time", null, new EsphomeMasterBathLights2SetAutoOffTimeParameters{AutoOffTime = @autoOffTime});
		}

		///<summary>Calls the service set_default_brightness of the node master-bath-lights-2</summary>
		public void MasterBathLights2SetDefaultBrightness(EsphomeMasterBathLights2SetDefaultBrightnessParameters data)
		{
			_haContext.CallService("esphome", "master_bath_lights_2_set_default_brightness", null, data);
		}

		///<summary>Calls the service set_default_brightness of the node master-bath-lights-2</summary>
		///<param name="brightness"> eg: 42</param>
		public void MasterBathLights2SetDefaultBrightness(long @brightness)
		{
			_haContext.CallService("esphome", "master_bath_lights_2_set_default_brightness", null, new EsphomeMasterBathLights2SetDefaultBrightnessParameters{Brightness = @brightness});
		}

		///<summary>Calls the service set_auto_off_time of the node master-bath-lights</summary>
		public void MasterBathLightsSetAutoOffTime(EsphomeMasterBathLightsSetAutoOffTimeParameters data)
		{
			_haContext.CallService("esphome", "master_bath_lights_set_auto_off_time", null, data);
		}

		///<summary>Calls the service set_auto_off_time of the node master-bath-lights</summary>
		///<param name="autoOffTime"> eg: 42</param>
		public void MasterBathLightsSetAutoOffTime(long @autoOffTime)
		{
			_haContext.CallService("esphome", "master_bath_lights_set_auto_off_time", null, new EsphomeMasterBathLightsSetAutoOffTimeParameters{AutoOffTime = @autoOffTime});
		}

		///<summary>Calls the service set_default_brightness of the node master-bath-lights</summary>
		public void MasterBathLightsSetDefaultBrightness(EsphomeMasterBathLightsSetDefaultBrightnessParameters data)
		{
			_haContext.CallService("esphome", "master_bath_lights_set_default_brightness", null, data);
		}

		///<summary>Calls the service set_default_brightness of the node master-bath-lights</summary>
		///<param name="brightness"> eg: 42</param>
		public void MasterBathLightsSetDefaultBrightness(long @brightness)
		{
			_haContext.CallService("esphome", "master_bath_lights_set_default_brightness", null, new EsphomeMasterBathLightsSetDefaultBrightnessParameters{Brightness = @brightness});
		}

		///<summary>Calls the service set_auto_off_time of the node office-light</summary>
		public void OfficeLightSetAutoOffTime(EsphomeOfficeLightSetAutoOffTimeParameters data)
		{
			_haContext.CallService("esphome", "office_light_set_auto_off_time", null, data);
		}

		///<summary>Calls the service set_auto_off_time of the node office-light</summary>
		///<param name="autoOffTime"> eg: 42</param>
		public void OfficeLightSetAutoOffTime(long @autoOffTime)
		{
			_haContext.CallService("esphome", "office_light_set_auto_off_time", null, new EsphomeOfficeLightSetAutoOffTimeParameters{AutoOffTime = @autoOffTime});
		}

		///<summary>Calls the service set_default_brightness of the node office-light</summary>
		public void OfficeLightSetDefaultBrightness(EsphomeOfficeLightSetDefaultBrightnessParameters data)
		{
			_haContext.CallService("esphome", "office_light_set_default_brightness", null, data);
		}

		///<summary>Calls the service set_default_brightness of the node office-light</summary>
		///<param name="brightness"> eg: 42</param>
		public void OfficeLightSetDefaultBrightness(long @brightness)
		{
			_haContext.CallService("esphome", "office_light_set_default_brightness", null, new EsphomeOfficeLightSetDefaultBrightnessParameters{Brightness = @brightness});
		}

		///<summary>Calls the service color_sync_reset of the node pool-and-patio-lights</summary>
		public void PoolAndPatioLightsColorSyncReset()
		{
			_haContext.CallService("esphome", "pool_and_patio_lights_color_sync_reset", null);
		}
	}

	public record EsphomeBasementStairLights2SetAutoOffTimeParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("auto_off_time")]
		public long? AutoOffTime { get; init; }
	}

	public record EsphomeBasementStairLights2SetDefaultBrightnessParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("brightness")]
		public long? Brightness { get; init; }
	}

	public record EsphomeBasementStairLightsSetAutoOffTimeParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("auto_off_time")]
		public long? AutoOffTime { get; init; }
	}

	public record EsphomeBasementStairLightsSetDefaultBrightnessParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("brightness")]
		public long? Brightness { get; init; }
	}

	public record EsphomeComputerLightSetAutoOffTimeParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("auto_off_time")]
		public long? AutoOffTime { get; init; }
	}

	public record EsphomeComputerLightSetDefaultBrightnessParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("brightness")]
		public long? Brightness { get; init; }
	}

	public record EsphomeDiningRoomLightSetAutoOffTimeParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("auto_off_time")]
		public long? AutoOffTime { get; init; }
	}

	public record EsphomeDiningRoomLightSetDefaultBrightnessParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("brightness")]
		public long? Brightness { get; init; }
	}

	public record EsphomeFamilyRoomLightSetAutoOffTimeParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("auto_off_time")]
		public long? AutoOffTime { get; init; }
	}

	public record EsphomeFamilyRoomLightSetDefaultBrightnessParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("brightness")]
		public long? Brightness { get; init; }
	}

	public record EsphomeFrontEntryLights2SetAutoOffTimeParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("auto_off_time")]
		public long? AutoOffTime { get; init; }
	}

	public record EsphomeFrontEntryLights2SetDefaultBrightnessParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("brightness")]
		public long? Brightness { get; init; }
	}

	public record EsphomeFrontEntryLightsSetAutoOffTimeParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("auto_off_time")]
		public long? AutoOffTime { get; init; }
	}

	public record EsphomeFrontEntryLightsSetDefaultBrightnessParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("brightness")]
		public long? Brightness { get; init; }
	}

	public record EsphomeFrontLightsSetAutoOffTimeParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("auto_off_time")]
		public long? AutoOffTime { get; init; }
	}

	public record EsphomeFrontLightsSetDefaultBrightnessParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("brightness")]
		public long? Brightness { get; init; }
	}

	public record EsphomeKitchenBarLightsSetAutoOffTimeParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("auto_off_time")]
		public long? AutoOffTime { get; init; }
	}

	public record EsphomeKitchenBarLightsSetDefaultBrightnessParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("brightness")]
		public long? Brightness { get; init; }
	}

	public record EsphomeKitchenTableLightSetAutoOffTimeParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("auto_off_time")]
		public long? AutoOffTime { get; init; }
	}

	public record EsphomeKitchenTableLightSetDefaultBrightnessParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("brightness")]
		public long? Brightness { get; init; }
	}

	public record EsphomeLivingRoomLightsSetAutoOffTimeParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("auto_off_time")]
		public long? AutoOffTime { get; init; }
	}

	public record EsphomeLivingRoomLightsSetDefaultBrightnessParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("brightness")]
		public long? Brightness { get; init; }
	}

	public record EsphomeMasterBathLights2SetAutoOffTimeParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("auto_off_time")]
		public long? AutoOffTime { get; init; }
	}

	public record EsphomeMasterBathLights2SetDefaultBrightnessParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("brightness")]
		public long? Brightness { get; init; }
	}

	public record EsphomeMasterBathLightsSetAutoOffTimeParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("auto_off_time")]
		public long? AutoOffTime { get; init; }
	}

	public record EsphomeMasterBathLightsSetDefaultBrightnessParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("brightness")]
		public long? Brightness { get; init; }
	}

	public record EsphomeOfficeLightSetAutoOffTimeParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("auto_off_time")]
		public long? AutoOffTime { get; init; }
	}

	public record EsphomeOfficeLightSetDefaultBrightnessParameters
	{
		///<summary> eg: 42</summary>
		[JsonPropertyName("brightness")]
		public long? Brightness { get; init; }
	}

	public class FanServices
	{
		private readonly IHaContext _haContext;
		public FanServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Decrease the speed of the fan by one speed or a percentage_step.</summary>
		///<param name="target">The target for this service call</param>
		public void DecreaseSpeed(ServiceTarget target, FanDecreaseSpeedParameters data)
		{
			_haContext.CallService("fan", "decrease_speed", target, data);
		}

		///<summary>Decrease the speed of the fan by one speed or a percentage_step.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="percentageStep">Decrease speed by a percentage.</param>
		public void DecreaseSpeed(ServiceTarget target, long? @percentageStep = null)
		{
			_haContext.CallService("fan", "decrease_speed", target, new FanDecreaseSpeedParameters{PercentageStep = @percentageStep});
		}

		///<summary>Increase the speed of the fan by one speed or a percentage_step.</summary>
		///<param name="target">The target for this service call</param>
		public void IncreaseSpeed(ServiceTarget target, FanIncreaseSpeedParameters data)
		{
			_haContext.CallService("fan", "increase_speed", target, data);
		}

		///<summary>Increase the speed of the fan by one speed or a percentage_step.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="percentageStep">Increase speed by a percentage.</param>
		public void IncreaseSpeed(ServiceTarget target, long? @percentageStep = null)
		{
			_haContext.CallService("fan", "increase_speed", target, new FanIncreaseSpeedParameters{PercentageStep = @percentageStep});
		}

		///<summary>Oscillate the fan.</summary>
		///<param name="target">The target for this service call</param>
		public void Oscillate(ServiceTarget target, FanOscillateParameters data)
		{
			_haContext.CallService("fan", "oscillate", target, data);
		}

		///<summary>Oscillate the fan.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="oscillating">Flag to turn on/off oscillation.</param>
		public void Oscillate(ServiceTarget target, bool @oscillating)
		{
			_haContext.CallService("fan", "oscillate", target, new FanOscillateParameters{Oscillating = @oscillating});
		}

		///<summary>Set the fan rotation.</summary>
		///<param name="target">The target for this service call</param>
		public void SetDirection(ServiceTarget target, FanSetDirectionParameters data)
		{
			_haContext.CallService("fan", "set_direction", target, data);
		}

		///<summary>Set the fan rotation.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="direction">The direction to rotate.</param>
		public void SetDirection(ServiceTarget target, object @direction)
		{
			_haContext.CallService("fan", "set_direction", target, new FanSetDirectionParameters{Direction = @direction});
		}

		///<summary>Set fan speed percentage.</summary>
		///<param name="target">The target for this service call</param>
		public void SetPercentage(ServiceTarget target, FanSetPercentageParameters data)
		{
			_haContext.CallService("fan", "set_percentage", target, data);
		}

		///<summary>Set fan speed percentage.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="percentage">Percentage speed setting.</param>
		public void SetPercentage(ServiceTarget target, long @percentage)
		{
			_haContext.CallService("fan", "set_percentage", target, new FanSetPercentageParameters{Percentage = @percentage});
		}

		///<summary>Set preset mode for a fan device.</summary>
		///<param name="target">The target for this service call</param>
		public void SetPresetMode(ServiceTarget target, FanSetPresetModeParameters data)
		{
			_haContext.CallService("fan", "set_preset_mode", target, data);
		}

		///<summary>Set preset mode for a fan device.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="presetMode">New value of preset mode. eg: auto</param>
		public void SetPresetMode(ServiceTarget target, string @presetMode)
		{
			_haContext.CallService("fan", "set_preset_mode", target, new FanSetPresetModeParameters{PresetMode = @presetMode});
		}

		///<summary>Toggle the fan on/off.</summary>
		///<param name="target">The target for this service call</param>
		public void Toggle(ServiceTarget target)
		{
			_haContext.CallService("fan", "toggle", target);
		}

		///<summary>Turn fan off.</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOff(ServiceTarget target)
		{
			_haContext.CallService("fan", "turn_off", target);
		}

		///<summary>Turn fan on.</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOn(ServiceTarget target, FanTurnOnParameters data)
		{
			_haContext.CallService("fan", "turn_on", target, data);
		}

		///<summary>Turn fan on.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="speed">Speed setting. eg: high</param>
		///<param name="percentage">Percentage speed setting.</param>
		///<param name="presetMode">Preset mode setting. eg: auto</param>
		public void TurnOn(ServiceTarget target, string? @speed = null, long? @percentage = null, string? @presetMode = null)
		{
			_haContext.CallService("fan", "turn_on", target, new FanTurnOnParameters{Speed = @speed, Percentage = @percentage, PresetMode = @presetMode});
		}
	}

	public record FanDecreaseSpeedParameters
	{
		///<summary>Decrease speed by a percentage.</summary>
		[JsonPropertyName("percentage_step")]
		public long? PercentageStep { get; init; }
	}

	public record FanIncreaseSpeedParameters
	{
		///<summary>Increase speed by a percentage.</summary>
		[JsonPropertyName("percentage_step")]
		public long? PercentageStep { get; init; }
	}

	public record FanOscillateParameters
	{
		///<summary>Flag to turn on/off oscillation.</summary>
		[JsonPropertyName("oscillating")]
		public bool? Oscillating { get; init; }
	}

	public record FanSetDirectionParameters
	{
		///<summary>The direction to rotate.</summary>
		[JsonPropertyName("direction")]
		public object? Direction { get; init; }
	}

	public record FanSetPercentageParameters
	{
		///<summary>Percentage speed setting.</summary>
		[JsonPropertyName("percentage")]
		public long? Percentage { get; init; }
	}

	public record FanSetPresetModeParameters
	{
		///<summary>New value of preset mode. eg: auto</summary>
		[JsonPropertyName("preset_mode")]
		public string? PresetMode { get; init; }
	}

	public record FanTurnOnParameters
	{
		///<summary>Speed setting. eg: high</summary>
		[JsonPropertyName("speed")]
		public string? Speed { get; init; }

		///<summary>Percentage speed setting.</summary>
		[JsonPropertyName("percentage")]
		public long? Percentage { get; init; }

		///<summary>Preset mode setting. eg: auto</summary>
		[JsonPropertyName("preset_mode")]
		public string? PresetMode { get; init; }
	}

	public class FfmpegServices
	{
		private readonly IHaContext _haContext;
		public FfmpegServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Send a restart command to a ffmpeg based sensor.</summary>
		public void Restart(FfmpegRestartParameters data)
		{
			_haContext.CallService("ffmpeg", "restart", null, data);
		}

		///<summary>Send a restart command to a ffmpeg based sensor.</summary>
		///<param name="entityId">Name of entity that will restart. Platform dependent.</param>
		public void Restart(string? @entityId = null)
		{
			_haContext.CallService("ffmpeg", "restart", null, new FfmpegRestartParameters{EntityId = @entityId});
		}

		///<summary>Send a start command to a ffmpeg based sensor.</summary>
		public void Start(FfmpegStartParameters data)
		{
			_haContext.CallService("ffmpeg", "start", null, data);
		}

		///<summary>Send a start command to a ffmpeg based sensor.</summary>
		///<param name="entityId">Name of entity that will start. Platform dependent.</param>
		public void Start(string? @entityId = null)
		{
			_haContext.CallService("ffmpeg", "start", null, new FfmpegStartParameters{EntityId = @entityId});
		}

		///<summary>Send a stop command to a ffmpeg based sensor.</summary>
		public void Stop(FfmpegStopParameters data)
		{
			_haContext.CallService("ffmpeg", "stop", null, data);
		}

		///<summary>Send a stop command to a ffmpeg based sensor.</summary>
		///<param name="entityId">Name of entity that will stop. Platform dependent.</param>
		public void Stop(string? @entityId = null)
		{
			_haContext.CallService("ffmpeg", "stop", null, new FfmpegStopParameters{EntityId = @entityId});
		}
	}

	public record FfmpegRestartParameters
	{
		///<summary>Name of entity that will restart. Platform dependent.</summary>
		[JsonPropertyName("entity_id")]
		public string? EntityId { get; init; }
	}

	public record FfmpegStartParameters
	{
		///<summary>Name of entity that will start. Platform dependent.</summary>
		[JsonPropertyName("entity_id")]
		public string? EntityId { get; init; }
	}

	public record FfmpegStopParameters
	{
		///<summary>Name of entity that will stop. Platform dependent.</summary>
		[JsonPropertyName("entity_id")]
		public string? EntityId { get; init; }
	}

	public class FrontendServices
	{
		private readonly IHaContext _haContext;
		public FrontendServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Reload themes from YAML configuration.</summary>
		public void ReloadThemes()
		{
			_haContext.CallService("frontend", "reload_themes", null);
		}

		///<summary>Set a theme unless the client selected per-device theme.</summary>
		public void SetTheme(FrontendSetThemeParameters data)
		{
			_haContext.CallService("frontend", "set_theme", null, data);
		}

		///<summary>Set a theme unless the client selected per-device theme.</summary>
		///<param name="name">Name of a predefined theme eg: default</param>
		///<param name="mode">The mode the theme is for.</param>
		public void SetTheme(object @name, object? @mode = null)
		{
			_haContext.CallService("frontend", "set_theme", null, new FrontendSetThemeParameters{Name = @name, Mode = @mode});
		}
	}

	public record FrontendSetThemeParameters
	{
		///<summary>Name of a predefined theme eg: default</summary>
		[JsonPropertyName("name")]
		public object? Name { get; init; }

		///<summary>The mode the theme is for.</summary>
		[JsonPropertyName("mode")]
		public object? Mode { get; init; }
	}

	public class GarbageCollectionServices
	{
		private readonly IHaContext _haContext;
		public GarbageCollectionServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Manually add collection date.</summary>
		///<param name="target">The target for this service call</param>
		public void AddDate(ServiceTarget target, GarbageCollectionAddDateParameters data)
		{
			_haContext.CallService("garbage_collection", "add_date", target, data);
		}

		///<summary>Manually add collection date.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="entityId">The garbage_collection sensor entity_id eg: sensor.general_waste</param>
		///<param name="date">Collection date to add eg: "2020-08-16"</param>
		public void AddDate(ServiceTarget target, object? @entityId = null, object? @date = null)
		{
			_haContext.CallService("garbage_collection", "add_date", target, new GarbageCollectionAddDateParameters{EntityId = @entityId, Date = @date});
		}

		///<summary>Set the last_collection attribute to the current date and time.</summary>
		///<param name="target">The target for this service call</param>
		public void CollectGarbage(ServiceTarget target, GarbageCollectionCollectGarbageParameters data)
		{
			_haContext.CallService("garbage_collection", "collect_garbage", target, data);
		}

		///<summary>Set the last_collection attribute to the current date and time.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="entityId">The garbage_collection sensor entity_id eg: sensor.general_waste</param>
		///<param name="lastCollection">Date and time of the last collection (optional) eg: 2020-08-16 10:54:00</param>
		public void CollectGarbage(ServiceTarget target, object? @entityId = null, object? @lastCollection = null)
		{
			_haContext.CallService("garbage_collection", "collect_garbage", target, new GarbageCollectionCollectGarbageParameters{EntityId = @entityId, LastCollection = @lastCollection});
		}

		///<summary>Move the collection date by a number of days.</summary>
		///<param name="target">The target for this service call</param>
		public void OffsetDate(ServiceTarget target, GarbageCollectionOffsetDateParameters data)
		{
			_haContext.CallService("garbage_collection", "offset_date", target, data);
		}

		///<summary>Move the collection date by a number of days.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="entityId">The garbage_collection sensor entity_id eg: sensor.general_waste</param>
		///<param name="date">Collection date to move eg: "2020-08-16"</param>
		///<param name="offset">Nuber of days to move (negative number will move it back) eg: 1</param>
		public void OffsetDate(ServiceTarget target, object? @entityId = null, object? @date = null, object? @offset = null)
		{
			_haContext.CallService("garbage_collection", "offset_date", target, new GarbageCollectionOffsetDateParameters{EntityId = @entityId, Date = @date, Offset = @offset});
		}

		///<summary>Remove automatically calculated collection date.</summary>
		///<param name="target">The target for this service call</param>
		public void RemoveDate(ServiceTarget target, GarbageCollectionRemoveDateParameters data)
		{
			_haContext.CallService("garbage_collection", "remove_date", target, data);
		}

		///<summary>Remove automatically calculated collection date.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="entityId">The garbage_collection sensor entity_id eg: sensor.general_waste</param>
		///<param name="date">Collection date to remove eg: "2020-08-16"</param>
		public void RemoveDate(ServiceTarget target, object? @entityId = null, object? @date = null)
		{
			_haContext.CallService("garbage_collection", "remove_date", target, new GarbageCollectionRemoveDateParameters{EntityId = @entityId, Date = @date});
		}

		///<summary>Update the entity state and attributes. Used with the manual_update option, do defer the update after changing the automatically created schedule by automation trigered by the garbage_collection_loaded event.</summary>
		///<param name="target">The target for this service call</param>
		public void UpdateState(ServiceTarget target, GarbageCollectionUpdateStateParameters data)
		{
			_haContext.CallService("garbage_collection", "update_state", target, data);
		}

		///<summary>Update the entity state and attributes. Used with the manual_update option, do defer the update after changing the automatically created schedule by automation trigered by the garbage_collection_loaded event.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="entityId">The garbage_collection sensor entity_id eg: sensor.general_waste</param>
		public void UpdateState(ServiceTarget target, object? @entityId = null)
		{
			_haContext.CallService("garbage_collection", "update_state", target, new GarbageCollectionUpdateStateParameters{EntityId = @entityId});
		}
	}

	public record GarbageCollectionAddDateParameters
	{
		///<summary>The garbage_collection sensor entity_id eg: sensor.general_waste</summary>
		[JsonPropertyName("entity_id")]
		public object? EntityId { get; init; }

		///<summary>Collection date to add eg: "2020-08-16"</summary>
		[JsonPropertyName("date")]
		public object? Date { get; init; }
	}

	public record GarbageCollectionCollectGarbageParameters
	{
		///<summary>The garbage_collection sensor entity_id eg: sensor.general_waste</summary>
		[JsonPropertyName("entity_id")]
		public object? EntityId { get; init; }

		///<summary>Date and time of the last collection (optional) eg: 2020-08-16 10:54:00</summary>
		[JsonPropertyName("last_collection")]
		public object? LastCollection { get; init; }
	}

	public record GarbageCollectionOffsetDateParameters
	{
		///<summary>The garbage_collection sensor entity_id eg: sensor.general_waste</summary>
		[JsonPropertyName("entity_id")]
		public object? EntityId { get; init; }

		///<summary>Collection date to move eg: "2020-08-16"</summary>
		[JsonPropertyName("date")]
		public object? Date { get; init; }

		///<summary>Nuber of days to move (negative number will move it back) eg: 1</summary>
		[JsonPropertyName("offset")]
		public object? Offset { get; init; }
	}

	public record GarbageCollectionRemoveDateParameters
	{
		///<summary>The garbage_collection sensor entity_id eg: sensor.general_waste</summary>
		[JsonPropertyName("entity_id")]
		public object? EntityId { get; init; }

		///<summary>Collection date to remove eg: "2020-08-16"</summary>
		[JsonPropertyName("date")]
		public object? Date { get; init; }
	}

	public record GarbageCollectionUpdateStateParameters
	{
		///<summary>The garbage_collection sensor entity_id eg: sensor.general_waste</summary>
		[JsonPropertyName("entity_id")]
		public object? EntityId { get; init; }
	}

	public class GoogleServices
	{
		private readonly IHaContext _haContext;
		public GoogleServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Add a new calendar event.</summary>
		public void AddEvent(GoogleAddEventParameters data)
		{
			_haContext.CallService("google", "add_event", null, data);
		}

		///<summary>Add a new calendar event.</summary>
		///<param name="calendarId">The id of the calendar you want. eg: Your email</param>
		///<param name="summary">Acts as the title of the event. eg: Bowling</param>
		///<param name="description">The description of the event. Optional. eg: Birthday bowling</param>
		///<param name="startDateTime">The date and time the event should start. eg: 2019-03-22 20:00:00</param>
		///<param name="endDateTime">The date and time the event should end. eg: 2019-03-22 22:00:00</param>
		///<param name="startDate">The date the whole day event should start. eg: 2019-03-10</param>
		///<param name="endDate">The date the whole day event should end. eg: 2019-03-11</param>
		///<param name="in">Days or weeks that you want to create the event in. eg: "days": 2 or "weeks": 2</param>
		public void AddEvent(string @calendarId, string @summary, string? @description = null, string? @startDateTime = null, string? @endDateTime = null, string? @startDate = null, string? @endDate = null, object? @in = null)
		{
			_haContext.CallService("google", "add_event", null, new GoogleAddEventParameters{CalendarId = @calendarId, Summary = @summary, Description = @description, StartDateTime = @startDateTime, EndDateTime = @endDateTime, StartDate = @startDate, EndDate = @endDate, In = @in});
		}

		///<summary>Scan for new calendars.</summary>
		public void ScanForCalendars()
		{
			_haContext.CallService("google", "scan_for_calendars", null);
		}
	}

	public record GoogleAddEventParameters
	{
		///<summary>The id of the calendar you want. eg: Your email</summary>
		[JsonPropertyName("calendar_id")]
		public string? CalendarId { get; init; }

		///<summary>Acts as the title of the event. eg: Bowling</summary>
		[JsonPropertyName("summary")]
		public string? Summary { get; init; }

		///<summary>The description of the event. Optional. eg: Birthday bowling</summary>
		[JsonPropertyName("description")]
		public string? Description { get; init; }

		///<summary>The date and time the event should start. eg: 2019-03-22 20:00:00</summary>
		[JsonPropertyName("start_date_time")]
		public string? StartDateTime { get; init; }

		///<summary>The date and time the event should end. eg: 2019-03-22 22:00:00</summary>
		[JsonPropertyName("end_date_time")]
		public string? EndDateTime { get; init; }

		///<summary>The date the whole day event should start. eg: 2019-03-10</summary>
		[JsonPropertyName("start_date")]
		public string? StartDate { get; init; }

		///<summary>The date the whole day event should end. eg: 2019-03-11</summary>
		[JsonPropertyName("end_date")]
		public string? EndDate { get; init; }

		///<summary>Days or weeks that you want to create the event in. eg: "days": 2 or "weeks": 2</summary>
		[JsonPropertyName("in")]
		public object? In { get; init; }
	}

	public class HarmonyServices
	{
		private readonly IHaContext _haContext;
		public HarmonyServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Sends change channel command to the Harmony HUB</summary>
		///<param name="target">The target for this service call</param>
		public void ChangeChannel(ServiceTarget target, HarmonyChangeChannelParameters data)
		{
			_haContext.CallService("harmony", "change_channel", target, data);
		}

		///<summary>Sends change channel command to the Harmony HUB</summary>
		///<param name="target">The target for this service call</param>
		///<param name="channel">Channel number to change to</param>
		public void ChangeChannel(ServiceTarget target, long @channel)
		{
			_haContext.CallService("harmony", "change_channel", target, new HarmonyChangeChannelParameters{Channel = @channel});
		}

		///<summary>Syncs the remote's configuration.</summary>
		///<param name="target">The target for this service call</param>
		public void Sync(ServiceTarget target)
		{
			_haContext.CallService("harmony", "sync", target);
		}
	}

	public record HarmonyChangeChannelParameters
	{
		///<summary>Channel number to change to</summary>
		[JsonPropertyName("channel")]
		public long? Channel { get; init; }
	}

	public class HistoryStatsServices
	{
		private readonly IHaContext _haContext;
		public HistoryStatsServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Reload all history_stats entities.</summary>
		public void Reload()
		{
			_haContext.CallService("history_stats", "reload", null);
		}
	}

	public class HomeassistantServices
	{
		private readonly IHaContext _haContext;
		public HomeassistantServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Check the Home Assistant configuration files for errors. Errors will be displayed in the Home Assistant log.</summary>
		public void CheckConfig()
		{
			_haContext.CallService("homeassistant", "check_config", null);
		}

		///<summary>Reload a config entry that matches a target.</summary>
		///<param name="target">The target for this service call</param>
		public void ReloadConfigEntry(ServiceTarget target, HomeassistantReloadConfigEntryParameters data)
		{
			_haContext.CallService("homeassistant", "reload_config_entry", target, data);
		}

		///<summary>Reload a config entry that matches a target.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="entryId">A configuration entry id eg: 8955375327824e14ba89e4b29cc3ec9a</param>
		public void ReloadConfigEntry(ServiceTarget target, string? @entryId = null)
		{
			_haContext.CallService("homeassistant", "reload_config_entry", target, new HomeassistantReloadConfigEntryParameters{EntryId = @entryId});
		}

		///<summary>Reload the core configuration.</summary>
		public void ReloadCoreConfig()
		{
			_haContext.CallService("homeassistant", "reload_core_config", null);
		}

		///<summary>Restart the Home Assistant service.</summary>
		public void Restart()
		{
			_haContext.CallService("homeassistant", "restart", null);
		}

		///<summary>Save the persistent states (for entities derived from RestoreEntity) immediately. Maintain the normal periodic saving interval.</summary>
		public void SavePersistentStates()
		{
			_haContext.CallService("homeassistant", "save_persistent_states", null);
		}

		///<summary>Update the Home Assistant location.</summary>
		public void SetLocation(HomeassistantSetLocationParameters data)
		{
			_haContext.CallService("homeassistant", "set_location", null, data);
		}

		///<summary>Update the Home Assistant location.</summary>
		///<param name="latitude">Latitude of your location. eg: 32.87336</param>
		///<param name="longitude">Longitude of your location. eg: 117.22743</param>
		public void SetLocation(string @latitude, string @longitude)
		{
			_haContext.CallService("homeassistant", "set_location", null, new HomeassistantSetLocationParameters{Latitude = @latitude, Longitude = @longitude});
		}

		///<summary>Stop the Home Assistant service.</summary>
		public void Stop()
		{
			_haContext.CallService("homeassistant", "stop", null);
		}

		///<summary>Generic service to toggle devices on/off under any domain</summary>
		///<param name="target">The target for this service call</param>
		public void Toggle(ServiceTarget target)
		{
			_haContext.CallService("homeassistant", "toggle", target);
		}

		///<summary>Generic service to turn devices off under any domain.</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOff(ServiceTarget target)
		{
			_haContext.CallService("homeassistant", "turn_off", target);
		}

		///<summary>Generic service to turn devices on under any domain.</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOn(ServiceTarget target)
		{
			_haContext.CallService("homeassistant", "turn_on", target);
		}

		///<summary>Force one or more entities to update its data</summary>
		///<param name="target">The target for this service call</param>
		public void UpdateEntity(ServiceTarget target)
		{
			_haContext.CallService("homeassistant", "update_entity", target);
		}
	}

	public record HomeassistantReloadConfigEntryParameters
	{
		///<summary>A configuration entry id eg: 8955375327824e14ba89e4b29cc3ec9a</summary>
		[JsonPropertyName("entry_id")]
		public string? EntryId { get; init; }
	}

	public record HomeassistantSetLocationParameters
	{
		///<summary>Latitude of your location. eg: 32.87336</summary>
		[JsonPropertyName("latitude")]
		public string? Latitude { get; init; }

		///<summary>Longitude of your location. eg: 117.22743</summary>
		[JsonPropertyName("longitude")]
		public string? Longitude { get; init; }
	}

	public class InputBooleanServices
	{
		private readonly IHaContext _haContext;
		public InputBooleanServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Reload the input_boolean configuration</summary>
		public void Reload()
		{
			_haContext.CallService("input_boolean", "reload", null);
		}

		///<summary>Toggle an input boolean</summary>
		///<param name="target">The target for this service call</param>
		public void Toggle(ServiceTarget target)
		{
			_haContext.CallService("input_boolean", "toggle", target);
		}

		///<summary>Turn off an input boolean</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOff(ServiceTarget target)
		{
			_haContext.CallService("input_boolean", "turn_off", target);
		}

		///<summary>Turn on an input boolean</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOn(ServiceTarget target)
		{
			_haContext.CallService("input_boolean", "turn_on", target);
		}
	}

	public class InputButtonServices
	{
		private readonly IHaContext _haContext;
		public InputButtonServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Press the input button entity.</summary>
		///<param name="target">The target for this service call</param>
		public void Press(ServiceTarget target)
		{
			_haContext.CallService("input_button", "press", target);
		}

		public void Reload()
		{
			_haContext.CallService("input_button", "reload", null);
		}
	}

	public class InputDatetimeServices
	{
		private readonly IHaContext _haContext;
		public InputDatetimeServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Reload the input_datetime configuration.</summary>
		public void Reload()
		{
			_haContext.CallService("input_datetime", "reload", null);
		}

		///<summary>This can be used to dynamically set the date and/or time.</summary>
		///<param name="target">The target for this service call</param>
		public void SetDatetime(ServiceTarget target, InputDatetimeSetDatetimeParameters data)
		{
			_haContext.CallService("input_datetime", "set_datetime", target, data);
		}

		///<summary>This can be used to dynamically set the date and/or time.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="date">The target date the entity should be set to. eg: "2019-04-20"</param>
		///<param name="time">The target time the entity should be set to. eg: "05:04:20"</param>
		///<param name="datetime">The target date & time the entity should be set to. eg: "2019-04-20 05:04:20"</param>
		///<param name="timestamp">The target date & time the entity should be set to as expressed by a UNIX timestamp.</param>
		public void SetDatetime(ServiceTarget target, string? @date = null, DateTime? @time = null, string? @datetime = null, long? @timestamp = null)
		{
			_haContext.CallService("input_datetime", "set_datetime", target, new InputDatetimeSetDatetimeParameters{Date = @date, Time = @time, Datetime = @datetime, Timestamp = @timestamp});
		}
	}

	public record InputDatetimeSetDatetimeParameters
	{
		///<summary>The target date the entity should be set to. eg: "2019-04-20"</summary>
		[JsonPropertyName("date")]
		public string? Date { get; init; }

		///<summary>The target time the entity should be set to. eg: "05:04:20"</summary>
		[JsonPropertyName("time")]
		public DateTime? Time { get; init; }

		///<summary>The target date & time the entity should be set to. eg: "2019-04-20 05:04:20"</summary>
		[JsonPropertyName("datetime")]
		public string? Datetime { get; init; }

		///<summary>The target date & time the entity should be set to as expressed by a UNIX timestamp.</summary>
		[JsonPropertyName("timestamp")]
		public long? Timestamp { get; init; }
	}

	public class InputNumberServices
	{
		private readonly IHaContext _haContext;
		public InputNumberServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Decrement the value of an input number entity by its stepping.</summary>
		///<param name="target">The target for this service call</param>
		public void Decrement(ServiceTarget target)
		{
			_haContext.CallService("input_number", "decrement", target);
		}

		///<summary>Increment the value of an input number entity by its stepping.</summary>
		///<param name="target">The target for this service call</param>
		public void Increment(ServiceTarget target)
		{
			_haContext.CallService("input_number", "increment", target);
		}

		///<summary>Reload the input_number configuration.</summary>
		public void Reload()
		{
			_haContext.CallService("input_number", "reload", null);
		}

		///<summary>Set the value of an input number entity.</summary>
		///<param name="target">The target for this service call</param>
		public void SetValue(ServiceTarget target, InputNumberSetValueParameters data)
		{
			_haContext.CallService("input_number", "set_value", target, data);
		}

		///<summary>Set the value of an input number entity.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="value">The target value the entity should be set to.</param>
		public void SetValue(ServiceTarget target, double @value)
		{
			_haContext.CallService("input_number", "set_value", target, new InputNumberSetValueParameters{Value = @value});
		}
	}

	public record InputNumberSetValueParameters
	{
		///<summary>The target value the entity should be set to.</summary>
		[JsonPropertyName("value")]
		public double? Value { get; init; }
	}

	public class InputSelectServices
	{
		private readonly IHaContext _haContext;
		public InputSelectServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Reload the input_select configuration.</summary>
		public void Reload()
		{
			_haContext.CallService("input_select", "reload", null);
		}

		///<summary>Select the first option of an input select entity.</summary>
		///<param name="target">The target for this service call</param>
		public void SelectFirst(ServiceTarget target)
		{
			_haContext.CallService("input_select", "select_first", target);
		}

		///<summary>Select the last option of an input select entity.</summary>
		///<param name="target">The target for this service call</param>
		public void SelectLast(ServiceTarget target)
		{
			_haContext.CallService("input_select", "select_last", target);
		}

		///<summary>Select the next options of an input select entity.</summary>
		///<param name="target">The target for this service call</param>
		public void SelectNext(ServiceTarget target, InputSelectSelectNextParameters data)
		{
			_haContext.CallService("input_select", "select_next", target, data);
		}

		///<summary>Select the next options of an input select entity.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="cycle">If the option should cycle from the last to the first.</param>
		public void SelectNext(ServiceTarget target, bool? @cycle = null)
		{
			_haContext.CallService("input_select", "select_next", target, new InputSelectSelectNextParameters{Cycle = @cycle});
		}

		///<summary>Select an option of an input select entity.</summary>
		///<param name="target">The target for this service call</param>
		public void SelectOption(ServiceTarget target, InputSelectSelectOptionParameters data)
		{
			_haContext.CallService("input_select", "select_option", target, data);
		}

		///<summary>Select an option of an input select entity.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="option">Option to be selected. eg: "Item A"</param>
		public void SelectOption(ServiceTarget target, string @option)
		{
			_haContext.CallService("input_select", "select_option", target, new InputSelectSelectOptionParameters{Option = @option});
		}

		///<summary>Select the previous options of an input select entity.</summary>
		///<param name="target">The target for this service call</param>
		public void SelectPrevious(ServiceTarget target, InputSelectSelectPreviousParameters data)
		{
			_haContext.CallService("input_select", "select_previous", target, data);
		}

		///<summary>Select the previous options of an input select entity.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="cycle">If the option should cycle from the first to the last.</param>
		public void SelectPrevious(ServiceTarget target, bool? @cycle = null)
		{
			_haContext.CallService("input_select", "select_previous", target, new InputSelectSelectPreviousParameters{Cycle = @cycle});
		}

		///<summary>Set the options of an input select entity.</summary>
		///<param name="target">The target for this service call</param>
		public void SetOptions(ServiceTarget target, InputSelectSetOptionsParameters data)
		{
			_haContext.CallService("input_select", "set_options", target, data);
		}

		///<summary>Set the options of an input select entity.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="options">Options for the input select entity. eg: ["Item A", "Item B", "Item C"]</param>
		public void SetOptions(ServiceTarget target, object @options)
		{
			_haContext.CallService("input_select", "set_options", target, new InputSelectSetOptionsParameters{Options = @options});
		}
	}

	public record InputSelectSelectNextParameters
	{
		///<summary>If the option should cycle from the last to the first.</summary>
		[JsonPropertyName("cycle")]
		public bool? Cycle { get; init; }
	}

	public record InputSelectSelectOptionParameters
	{
		///<summary>Option to be selected. eg: "Item A"</summary>
		[JsonPropertyName("option")]
		public string? Option { get; init; }
	}

	public record InputSelectSelectPreviousParameters
	{
		///<summary>If the option should cycle from the first to the last.</summary>
		[JsonPropertyName("cycle")]
		public bool? Cycle { get; init; }
	}

	public record InputSelectSetOptionsParameters
	{
		///<summary>Options for the input select entity. eg: ["Item A", "Item B", "Item C"]</summary>
		[JsonPropertyName("options")]
		public object? Options { get; init; }
	}

	public class InputTextServices
	{
		private readonly IHaContext _haContext;
		public InputTextServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Reload the input_text configuration.</summary>
		public void Reload()
		{
			_haContext.CallService("input_text", "reload", null);
		}

		///<summary>Set the value of an input text entity.</summary>
		///<param name="target">The target for this service call</param>
		public void SetValue(ServiceTarget target, InputTextSetValueParameters data)
		{
			_haContext.CallService("input_text", "set_value", target, data);
		}

		///<summary>Set the value of an input text entity.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="value">The target value the entity should be set to. eg: This is an example text</param>
		public void SetValue(ServiceTarget target, string @value)
		{
			_haContext.CallService("input_text", "set_value", target, new InputTextSetValueParameters{Value = @value});
		}
	}

	public record InputTextSetValueParameters
	{
		///<summary>The target value the entity should be set to. eg: This is an example text</summary>
		[JsonPropertyName("value")]
		public string? Value { get; init; }
	}

	public class LightServices
	{
		private readonly IHaContext _haContext;
		public LightServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Toggles one or more lights, from on to off, or, off to on, based on their current state. </summary>
		///<param name="target">The target for this service call</param>
		public void Toggle(ServiceTarget target, LightToggleParameters data)
		{
			_haContext.CallService("light", "toggle", target, data);
		}

		///<summary>Toggles one or more lights, from on to off, or, off to on, based on their current state. </summary>
		///<param name="target">The target for this service call</param>
		///<param name="transition">Duration it takes to get to next state.</param>
		///<param name="rgbColor">Color for the light in RGB-format. eg: [255, 100, 100]</param>
		///<param name="colorName">A human readable color name.</param>
		///<param name="hsColor">Color for the light in hue/sat format. Hue is 0-360 and Sat is 0-100. eg: [300, 70]</param>
		///<param name="xyColor">Color for the light in XY-format. eg: [0.52, 0.43]</param>
		///<param name="colorTemp">Color temperature for the light in mireds.</param>
		///<param name="kelvin">Color temperature for the light in Kelvin.</param>
		///<param name="whiteValue">Number indicating level of white.</param>
		///<param name="brightness">Number indicating brightness, where 0 turns the light off, 1 is the minimum brightness and 255 is the maximum brightness supported by the light.</param>
		///<param name="brightnessPct">Number indicating percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness and 100 is the maximum brightness supported by the light.</param>
		///<param name="profile">Name of a light profile to use. eg: relax</param>
		///<param name="flash">If the light should flash.</param>
		///<param name="effect">Light effect.</param>
		public void Toggle(ServiceTarget target, long? @transition = null, object? @rgbColor = null, object? @colorName = null, object? @hsColor = null, object? @xyColor = null, object? @colorTemp = null, long? @kelvin = null, long? @whiteValue = null, long? @brightness = null, long? @brightnessPct = null, string? @profile = null, object? @flash = null, string? @effect = null)
		{
			_haContext.CallService("light", "toggle", target, new LightToggleParameters{Transition = @transition, RgbColor = @rgbColor, ColorName = @colorName, HsColor = @hsColor, XyColor = @xyColor, ColorTemp = @colorTemp, Kelvin = @kelvin, WhiteValue = @whiteValue, Brightness = @brightness, BrightnessPct = @brightnessPct, Profile = @profile, Flash = @flash, Effect = @effect});
		}

		///<summary>Turns off one or more lights.</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOff(ServiceTarget target, LightTurnOffParameters data)
		{
			_haContext.CallService("light", "turn_off", target, data);
		}

		///<summary>Turns off one or more lights.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="transition">Duration it takes to get to next state.</param>
		///<param name="flash">If the light should flash.</param>
		public void TurnOff(ServiceTarget target, long? @transition = null, object? @flash = null)
		{
			_haContext.CallService("light", "turn_off", target, new LightTurnOffParameters{Transition = @transition, Flash = @flash});
		}

		///<summary>Turn on one or more lights and adjust properties of the light, even when they are turned on already. </summary>
		///<param name="target">The target for this service call</param>
		public void TurnOn(ServiceTarget target, LightTurnOnParameters data)
		{
			_haContext.CallService("light", "turn_on", target, data);
		}

		///<summary>Turn on one or more lights and adjust properties of the light, even when they are turned on already. </summary>
		///<param name="target">The target for this service call</param>
		///<param name="transition">Duration it takes to get to next state.</param>
		///<param name="rgbColor">The color for the light (based on RGB - red, green, blue).</param>
		///<param name="rgbwColor">A list containing four integers between 0 and 255 representing the RGBW (red, green, blue, white) color for the light. eg: [255, 100, 100, 50]</param>
		///<param name="rgbwwColor">A list containing five integers between 0 and 255 representing the RGBWW (red, green, blue, cold white, warm white) color for the light. eg: [255, 100, 100, 50, 70]</param>
		///<param name="colorName">A human readable color name.</param>
		///<param name="hsColor">Color for the light in hue/sat format. Hue is 0-360 and Sat is 0-100. eg: [300, 70]</param>
		///<param name="xyColor">Color for the light in XY-format. eg: [0.52, 0.43]</param>
		///<param name="colorTemp">Color temperature for the light in mireds.</param>
		///<param name="kelvin">Color temperature for the light in Kelvin.</param>
		///<param name="brightness">Number indicating brightness, where 0 turns the light off, 1 is the minimum brightness and 255 is the maximum brightness supported by the light.</param>
		///<param name="brightnessPct">Number indicating percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness and 100 is the maximum brightness supported by the light.</param>
		///<param name="brightnessStep">Change brightness by an amount.</param>
		///<param name="brightnessStepPct">Change brightness by a percentage.</param>
		///<param name="white">Set the light to white mode and change its brightness, where 0 turns the light off, 1 is the minimum brightness and 255 is the maximum brightness supported by the light.</param>
		///<param name="profile">Name of a light profile to use. eg: relax</param>
		///<param name="flash">If the light should flash.</param>
		///<param name="effect">Light effect.</param>
		public void TurnOn(ServiceTarget target, long? @transition = null, object? @rgbColor = null, object? @rgbwColor = null, object? @rgbwwColor = null, object? @colorName = null, object? @hsColor = null, object? @xyColor = null, object? @colorTemp = null, long? @kelvin = null, long? @brightness = null, long? @brightnessPct = null, long? @brightnessStep = null, long? @brightnessStepPct = null, long? @white = null, string? @profile = null, object? @flash = null, string? @effect = null)
		{
			_haContext.CallService("light", "turn_on", target, new LightTurnOnParameters{Transition = @transition, RgbColor = @rgbColor, RgbwColor = @rgbwColor, RgbwwColor = @rgbwwColor, ColorName = @colorName, HsColor = @hsColor, XyColor = @xyColor, ColorTemp = @colorTemp, Kelvin = @kelvin, Brightness = @brightness, BrightnessPct = @brightnessPct, BrightnessStep = @brightnessStep, BrightnessStepPct = @brightnessStepPct, White = @white, Profile = @profile, Flash = @flash, Effect = @effect});
		}
	}

	public record LightToggleParameters
	{
		///<summary>Duration it takes to get to next state.</summary>
		[JsonPropertyName("transition")]
		public long? Transition { get; init; }

		///<summary>Color for the light in RGB-format. eg: [255, 100, 100]</summary>
		[JsonPropertyName("rgb_color")]
		public object? RgbColor { get; init; }

		///<summary>A human readable color name.</summary>
		[JsonPropertyName("color_name")]
		public object? ColorName { get; init; }

		///<summary>Color for the light in hue/sat format. Hue is 0-360 and Sat is 0-100. eg: [300, 70]</summary>
		[JsonPropertyName("hs_color")]
		public object? HsColor { get; init; }

		///<summary>Color for the light in XY-format. eg: [0.52, 0.43]</summary>
		[JsonPropertyName("xy_color")]
		public object? XyColor { get; init; }

		///<summary>Color temperature for the light in mireds.</summary>
		[JsonPropertyName("color_temp")]
		public object? ColorTemp { get; init; }

		///<summary>Color temperature for the light in Kelvin.</summary>
		[JsonPropertyName("kelvin")]
		public long? Kelvin { get; init; }

		///<summary>Number indicating level of white.</summary>
		[JsonPropertyName("white_value")]
		public long? WhiteValue { get; init; }

		///<summary>Number indicating brightness, where 0 turns the light off, 1 is the minimum brightness and 255 is the maximum brightness supported by the light.</summary>
		[JsonPropertyName("brightness")]
		public long? Brightness { get; init; }

		///<summary>Number indicating percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness and 100 is the maximum brightness supported by the light.</summary>
		[JsonPropertyName("brightness_pct")]
		public long? BrightnessPct { get; init; }

		///<summary>Name of a light profile to use. eg: relax</summary>
		[JsonPropertyName("profile")]
		public string? Profile { get; init; }

		///<summary>If the light should flash.</summary>
		[JsonPropertyName("flash")]
		public object? Flash { get; init; }

		///<summary>Light effect.</summary>
		[JsonPropertyName("effect")]
		public string? Effect { get; init; }
	}

	public record LightTurnOffParameters
	{
		///<summary>Duration it takes to get to next state.</summary>
		[JsonPropertyName("transition")]
		public long? Transition { get; init; }

		///<summary>If the light should flash.</summary>
		[JsonPropertyName("flash")]
		public object? Flash { get; init; }
	}

	public record LightTurnOnParameters
	{
		///<summary>Duration it takes to get to next state.</summary>
		[JsonPropertyName("transition")]
		public long? Transition { get; init; }

		///<summary>The color for the light (based on RGB - red, green, blue).</summary>
		[JsonPropertyName("rgb_color")]
		public object? RgbColor { get; init; }

		///<summary>A list containing four integers between 0 and 255 representing the RGBW (red, green, blue, white) color for the light. eg: [255, 100, 100, 50]</summary>
		[JsonPropertyName("rgbw_color")]
		public object? RgbwColor { get; init; }

		///<summary>A list containing five integers between 0 and 255 representing the RGBWW (red, green, blue, cold white, warm white) color for the light. eg: [255, 100, 100, 50, 70]</summary>
		[JsonPropertyName("rgbww_color")]
		public object? RgbwwColor { get; init; }

		///<summary>A human readable color name.</summary>
		[JsonPropertyName("color_name")]
		public object? ColorName { get; init; }

		///<summary>Color for the light in hue/sat format. Hue is 0-360 and Sat is 0-100. eg: [300, 70]</summary>
		[JsonPropertyName("hs_color")]
		public object? HsColor { get; init; }

		///<summary>Color for the light in XY-format. eg: [0.52, 0.43]</summary>
		[JsonPropertyName("xy_color")]
		public object? XyColor { get; init; }

		///<summary>Color temperature for the light in mireds.</summary>
		[JsonPropertyName("color_temp")]
		public object? ColorTemp { get; init; }

		///<summary>Color temperature for the light in Kelvin.</summary>
		[JsonPropertyName("kelvin")]
		public long? Kelvin { get; init; }

		///<summary>Number indicating brightness, where 0 turns the light off, 1 is the minimum brightness and 255 is the maximum brightness supported by the light.</summary>
		[JsonPropertyName("brightness")]
		public long? Brightness { get; init; }

		///<summary>Number indicating percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness and 100 is the maximum brightness supported by the light.</summary>
		[JsonPropertyName("brightness_pct")]
		public long? BrightnessPct { get; init; }

		///<summary>Change brightness by an amount.</summary>
		[JsonPropertyName("brightness_step")]
		public long? BrightnessStep { get; init; }

		///<summary>Change brightness by a percentage.</summary>
		[JsonPropertyName("brightness_step_pct")]
		public long? BrightnessStepPct { get; init; }

		///<summary>Set the light to white mode and change its brightness, where 0 turns the light off, 1 is the minimum brightness and 255 is the maximum brightness supported by the light.</summary>
		[JsonPropertyName("white")]
		public long? White { get; init; }

		///<summary>Name of a light profile to use. eg: relax</summary>
		[JsonPropertyName("profile")]
		public string? Profile { get; init; }

		///<summary>If the light should flash.</summary>
		[JsonPropertyName("flash")]
		public object? Flash { get; init; }

		///<summary>Light effect.</summary>
		[JsonPropertyName("effect")]
		public string? Effect { get; init; }
	}

	public class LockServices
	{
		private readonly IHaContext _haContext;
		public LockServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Lock all or specified locks.</summary>
		///<param name="target">The target for this service call</param>
		public void Lock(ServiceTarget target, LockLockParameters data)
		{
			_haContext.CallService("lock", "lock", target, data);
		}

		///<summary>Lock all or specified locks.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="code">An optional code to lock the lock with. eg: 1234</param>
		public void Lock(ServiceTarget target, string? @code = null)
		{
			_haContext.CallService("lock", "lock", target, new LockLockParameters{Code = @code});
		}

		///<summary>Open all or specified locks.</summary>
		///<param name="target">The target for this service call</param>
		public void Open(ServiceTarget target, LockOpenParameters data)
		{
			_haContext.CallService("lock", "open", target, data);
		}

		///<summary>Open all or specified locks.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="code">An optional code to open the lock with. eg: 1234</param>
		public void Open(ServiceTarget target, string? @code = null)
		{
			_haContext.CallService("lock", "open", target, new LockOpenParameters{Code = @code});
		}

		///<summary>Unlock all or specified locks.</summary>
		///<param name="target">The target for this service call</param>
		public void Unlock(ServiceTarget target, LockUnlockParameters data)
		{
			_haContext.CallService("lock", "unlock", target, data);
		}

		///<summary>Unlock all or specified locks.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="code">An optional code to unlock the lock with. eg: 1234</param>
		public void Unlock(ServiceTarget target, string? @code = null)
		{
			_haContext.CallService("lock", "unlock", target, new LockUnlockParameters{Code = @code});
		}
	}

	public record LockLockParameters
	{
		///<summary>An optional code to lock the lock with. eg: 1234</summary>
		[JsonPropertyName("code")]
		public string? Code { get; init; }
	}

	public record LockOpenParameters
	{
		///<summary>An optional code to open the lock with. eg: 1234</summary>
		[JsonPropertyName("code")]
		public string? Code { get; init; }
	}

	public record LockUnlockParameters
	{
		///<summary>An optional code to unlock the lock with. eg: 1234</summary>
		[JsonPropertyName("code")]
		public string? Code { get; init; }
	}

	public class LogbookServices
	{
		private readonly IHaContext _haContext;
		public LogbookServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Create a custom entry in your logbook.</summary>
		public void Log(LogbookLogParameters data)
		{
			_haContext.CallService("logbook", "log", null, data);
		}

		///<summary>Create a custom entry in your logbook.</summary>
		///<param name="name">Custom name for an entity, can be referenced with entity_id. eg: Kitchen</param>
		///<param name="message">Message of the custom logbook entry. eg: is being used</param>
		///<param name="entityId">Entity to reference in custom logbook entry.</param>
		///<param name="domain">Icon of domain to display in custom logbook entry. eg: light</param>
		public void Log(string @name, string @message, string? @entityId = null, string? @domain = null)
		{
			_haContext.CallService("logbook", "log", null, new LogbookLogParameters{Name = @name, Message = @message, EntityId = @entityId, Domain = @domain});
		}
	}

	public record LogbookLogParameters
	{
		///<summary>Custom name for an entity, can be referenced with entity_id. eg: Kitchen</summary>
		[JsonPropertyName("name")]
		public string? Name { get; init; }

		///<summary>Message of the custom logbook entry. eg: is being used</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Entity to reference in custom logbook entry.</summary>
		[JsonPropertyName("entity_id")]
		public string? EntityId { get; init; }

		///<summary>Icon of domain to display in custom logbook entry. eg: light</summary>
		[JsonPropertyName("domain")]
		public string? Domain { get; init; }
	}

	public class LoggerServices
	{
		private readonly IHaContext _haContext;
		public LoggerServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Set the default log level for integrations.</summary>
		public void SetDefaultLevel(LoggerSetDefaultLevelParameters data)
		{
			_haContext.CallService("logger", "set_default_level", null, data);
		}

		///<summary>Set the default log level for integrations.</summary>
		///<param name="level">Default severity level for all integrations.</param>
		public void SetDefaultLevel(object? @level = null)
		{
			_haContext.CallService("logger", "set_default_level", null, new LoggerSetDefaultLevelParameters{Level = @level});
		}

		///<summary>Set log level for integrations.</summary>
		public void SetLevel()
		{
			_haContext.CallService("logger", "set_level", null);
		}
	}

	public record LoggerSetDefaultLevelParameters
	{
		///<summary>Default severity level for all integrations.</summary>
		[JsonPropertyName("level")]
		public object? Level { get; init; }
	}

	public class LovelaceServices
	{
		private readonly IHaContext _haContext;
		public LovelaceServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Reload Lovelace resources from YAML configuration</summary>
		public void ReloadResources()
		{
			_haContext.CallService("lovelace", "reload_resources", null);
		}
	}

	public class MediaPlayerServices
	{
		private readonly IHaContext _haContext;
		public MediaPlayerServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Send the media player the command to clear players playlist.</summary>
		///<param name="target">The target for this service call</param>
		public void ClearPlaylist(ServiceTarget target)
		{
			_haContext.CallService("media_player", "clear_playlist", target);
		}

		///<summary>Group players together. Only works on platforms with support for player groups.</summary>
		///<param name="target">The target for this service call</param>
		public void Join(ServiceTarget target, MediaPlayerJoinParameters data)
		{
			_haContext.CallService("media_player", "join", target, data);
		}

		///<summary>Group players together. Only works on platforms with support for player groups.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="groupMembers">The players which will be synced with the target player. eg: ["media_player.multiroom_player2","media_player.multiroom_player3"]</param>
		public void Join(ServiceTarget target, object? @groupMembers = null)
		{
			_haContext.CallService("media_player", "join", target, new MediaPlayerJoinParameters{GroupMembers = @groupMembers});
		}

		///<summary>Send the media player the command for next track.</summary>
		///<param name="target">The target for this service call</param>
		public void MediaNextTrack(ServiceTarget target)
		{
			_haContext.CallService("media_player", "media_next_track", target);
		}

		///<summary>Send the media player the command for pause.</summary>
		///<param name="target">The target for this service call</param>
		public void MediaPause(ServiceTarget target)
		{
			_haContext.CallService("media_player", "media_pause", target);
		}

		///<summary>Send the media player the command for play.</summary>
		///<param name="target">The target for this service call</param>
		public void MediaPlay(ServiceTarget target)
		{
			_haContext.CallService("media_player", "media_play", target);
		}

		///<summary>Toggle media player play/pause state.</summary>
		///<param name="target">The target for this service call</param>
		public void MediaPlayPause(ServiceTarget target)
		{
			_haContext.CallService("media_player", "media_play_pause", target);
		}

		///<summary>Send the media player the command for previous track.</summary>
		///<param name="target">The target for this service call</param>
		public void MediaPreviousTrack(ServiceTarget target)
		{
			_haContext.CallService("media_player", "media_previous_track", target);
		}

		///<summary>Send the media player the command to seek in current playing media.</summary>
		///<param name="target">The target for this service call</param>
		public void MediaSeek(ServiceTarget target, MediaPlayerMediaSeekParameters data)
		{
			_haContext.CallService("media_player", "media_seek", target, data);
		}

		///<summary>Send the media player the command to seek in current playing media.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="seekPosition">Position to seek to. The format is platform dependent.</param>
		public void MediaSeek(ServiceTarget target, double @seekPosition)
		{
			_haContext.CallService("media_player", "media_seek", target, new MediaPlayerMediaSeekParameters{SeekPosition = @seekPosition});
		}

		///<summary>Send the media player the stop command.</summary>
		///<param name="target">The target for this service call</param>
		public void MediaStop(ServiceTarget target)
		{
			_haContext.CallService("media_player", "media_stop", target);
		}

		///<summary>Send the media player the command for playing media.</summary>
		///<param name="target">The target for this service call</param>
		public void PlayMedia(ServiceTarget target, MediaPlayerPlayMediaParameters data)
		{
			_haContext.CallService("media_player", "play_media", target, data);
		}

		///<summary>Send the media player the command for playing media.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="mediaContentId">The ID of the content to play. Platform dependent. eg: https://home-assistant.io/images/cast/splash.png</param>
		///<param name="mediaContentType">The type of the content to play. Like image, music, tvshow, video, episode, channel or playlist. eg: music</param>
		///<param name="enqueue">If the content should be played now or be added to the queue.</param>
		///<param name="announce">If the media should be played as an announcement. eg: true</param>
		public void PlayMedia(ServiceTarget target, string @mediaContentId, string @mediaContentType, object? @enqueue = null, bool? @announce = null)
		{
			_haContext.CallService("media_player", "play_media", target, new MediaPlayerPlayMediaParameters{MediaContentId = @mediaContentId, MediaContentType = @mediaContentType, Enqueue = @enqueue, Announce = @announce});
		}

		///<summary>Set repeat mode</summary>
		///<param name="target">The target for this service call</param>
		public void RepeatSet(ServiceTarget target, MediaPlayerRepeatSetParameters data)
		{
			_haContext.CallService("media_player", "repeat_set", target, data);
		}

		///<summary>Set repeat mode</summary>
		///<param name="target">The target for this service call</param>
		///<param name="repeat">Repeat mode to set.</param>
		public void RepeatSet(ServiceTarget target, object @repeat)
		{
			_haContext.CallService("media_player", "repeat_set", target, new MediaPlayerRepeatSetParameters{Repeat = @repeat});
		}

		///<summary>Send the media player the command to change sound mode.</summary>
		///<param name="target">The target for this service call</param>
		public void SelectSoundMode(ServiceTarget target, MediaPlayerSelectSoundModeParameters data)
		{
			_haContext.CallService("media_player", "select_sound_mode", target, data);
		}

		///<summary>Send the media player the command to change sound mode.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="soundMode">Name of the sound mode to switch to. eg: Music</param>
		public void SelectSoundMode(ServiceTarget target, string? @soundMode = null)
		{
			_haContext.CallService("media_player", "select_sound_mode", target, new MediaPlayerSelectSoundModeParameters{SoundMode = @soundMode});
		}

		///<summary>Send the media player the command to change input source.</summary>
		///<param name="target">The target for this service call</param>
		public void SelectSource(ServiceTarget target, MediaPlayerSelectSourceParameters data)
		{
			_haContext.CallService("media_player", "select_source", target, data);
		}

		///<summary>Send the media player the command to change input source.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="source">Name of the source to switch to. Platform dependent. eg: video1</param>
		public void SelectSource(ServiceTarget target, string @source)
		{
			_haContext.CallService("media_player", "select_source", target, new MediaPlayerSelectSourceParameters{Source = @source});
		}

		///<summary>Set shuffling state.</summary>
		///<param name="target">The target for this service call</param>
		public void ShuffleSet(ServiceTarget target, MediaPlayerShuffleSetParameters data)
		{
			_haContext.CallService("media_player", "shuffle_set", target, data);
		}

		///<summary>Set shuffling state.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="shuffle">True/false for enabling/disabling shuffle.</param>
		public void ShuffleSet(ServiceTarget target, bool @shuffle)
		{
			_haContext.CallService("media_player", "shuffle_set", target, new MediaPlayerShuffleSetParameters{Shuffle = @shuffle});
		}

		///<summary>Toggles a media player power state.</summary>
		///<param name="target">The target for this service call</param>
		public void Toggle(ServiceTarget target)
		{
			_haContext.CallService("media_player", "toggle", target);
		}

		///<summary>Turn a media player power off.</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOff(ServiceTarget target)
		{
			_haContext.CallService("media_player", "turn_off", target);
		}

		///<summary>Turn a media player power on.</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOn(ServiceTarget target)
		{
			_haContext.CallService("media_player", "turn_on", target);
		}

		///<summary>Unjoin the player from a group. Only works on platforms with support for player groups.</summary>
		///<param name="target">The target for this service call</param>
		public void Unjoin(ServiceTarget target)
		{
			_haContext.CallService("media_player", "unjoin", target);
		}

		///<summary>Turn a media player volume down.</summary>
		///<param name="target">The target for this service call</param>
		public void VolumeDown(ServiceTarget target)
		{
			_haContext.CallService("media_player", "volume_down", target);
		}

		///<summary>Mute a media player's volume.</summary>
		///<param name="target">The target for this service call</param>
		public void VolumeMute(ServiceTarget target, MediaPlayerVolumeMuteParameters data)
		{
			_haContext.CallService("media_player", "volume_mute", target, data);
		}

		///<summary>Mute a media player's volume.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="isVolumeMuted">True/false for mute/unmute.</param>
		public void VolumeMute(ServiceTarget target, bool @isVolumeMuted)
		{
			_haContext.CallService("media_player", "volume_mute", target, new MediaPlayerVolumeMuteParameters{IsVolumeMuted = @isVolumeMuted});
		}

		///<summary>Set a media player's volume level.</summary>
		///<param name="target">The target for this service call</param>
		public void VolumeSet(ServiceTarget target, MediaPlayerVolumeSetParameters data)
		{
			_haContext.CallService("media_player", "volume_set", target, data);
		}

		///<summary>Set a media player's volume level.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="volumeLevel">Volume level to set as float.</param>
		public void VolumeSet(ServiceTarget target, double @volumeLevel)
		{
			_haContext.CallService("media_player", "volume_set", target, new MediaPlayerVolumeSetParameters{VolumeLevel = @volumeLevel});
		}

		///<summary>Turn a media player volume up.</summary>
		///<param name="target">The target for this service call</param>
		public void VolumeUp(ServiceTarget target)
		{
			_haContext.CallService("media_player", "volume_up", target);
		}
	}

	public record MediaPlayerJoinParameters
	{
		///<summary>The players which will be synced with the target player. eg: ["media_player.multiroom_player2","media_player.multiroom_player3"]</summary>
		[JsonPropertyName("group_members")]
		public object? GroupMembers { get; init; }
	}

	public record MediaPlayerMediaSeekParameters
	{
		///<summary>Position to seek to. The format is platform dependent.</summary>
		[JsonPropertyName("seek_position")]
		public double? SeekPosition { get; init; }
	}

	public record MediaPlayerPlayMediaParameters
	{
		///<summary>The ID of the content to play. Platform dependent. eg: https://home-assistant.io/images/cast/splash.png</summary>
		[JsonPropertyName("media_content_id")]
		public string? MediaContentId { get; init; }

		///<summary>The type of the content to play. Like image, music, tvshow, video, episode, channel or playlist. eg: music</summary>
		[JsonPropertyName("media_content_type")]
		public string? MediaContentType { get; init; }

		///<summary>If the content should be played now or be added to the queue.</summary>
		[JsonPropertyName("enqueue")]
		public object? Enqueue { get; init; }

		///<summary>If the media should be played as an announcement. eg: true</summary>
		[JsonPropertyName("announce")]
		public bool? Announce { get; init; }
	}

	public record MediaPlayerRepeatSetParameters
	{
		///<summary>Repeat mode to set.</summary>
		[JsonPropertyName("repeat")]
		public object? Repeat { get; init; }
	}

	public record MediaPlayerSelectSoundModeParameters
	{
		///<summary>Name of the sound mode to switch to. eg: Music</summary>
		[JsonPropertyName("sound_mode")]
		public string? SoundMode { get; init; }
	}

	public record MediaPlayerSelectSourceParameters
	{
		///<summary>Name of the source to switch to. Platform dependent. eg: video1</summary>
		[JsonPropertyName("source")]
		public string? Source { get; init; }
	}

	public record MediaPlayerShuffleSetParameters
	{
		///<summary>True/false for enabling/disabling shuffle.</summary>
		[JsonPropertyName("shuffle")]
		public bool? Shuffle { get; init; }
	}

	public record MediaPlayerVolumeMuteParameters
	{
		///<summary>True/false for mute/unmute.</summary>
		[JsonPropertyName("is_volume_muted")]
		public bool? IsVolumeMuted { get; init; }
	}

	public record MediaPlayerVolumeSetParameters
	{
		///<summary>Volume level to set as float.</summary>
		[JsonPropertyName("volume_level")]
		public double? VolumeLevel { get; init; }
	}

	public class NeatoServices
	{
		private readonly IHaContext _haContext;
		public NeatoServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Zone Cleaning service call specific to Neato Botvacs.</summary>
		///<param name="target">The target for this service call</param>
		public void CustomCleaning(ServiceTarget target, NeatoCustomCleaningParameters data)
		{
			_haContext.CallService("neato", "custom_cleaning", target, data);
		}

		///<summary>Zone Cleaning service call specific to Neato Botvacs.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="mode">Set the cleaning mode: 1 for eco and 2 for turbo. Defaults to turbo if not set.</param>
		///<param name="navigation">Set the navigation mode: 1 for normal, 2 for extra care, 3 for deep. Defaults to normal if not set.</param>
		///<param name="category">Whether to use a persistent map or not for cleaning (i.e. No go lines): 2 for no map, 4 for map. Default to using map if not set (and fallback to no map if no map is found).</param>
		///<param name="zone">Only supported on the Botvac D7. Name of the zone to clean. Defaults to no zone i.e. complete house cleanup. eg: Kitchen</param>
		public void CustomCleaning(ServiceTarget target, long? @mode = null, long? @navigation = null, long? @category = null, string? @zone = null)
		{
			_haContext.CallService("neato", "custom_cleaning", target, new NeatoCustomCleaningParameters{Mode = @mode, Navigation = @navigation, Category = @category, Zone = @zone});
		}
	}

	public record NeatoCustomCleaningParameters
	{
		///<summary>Set the cleaning mode: 1 for eco and 2 for turbo. Defaults to turbo if not set.</summary>
		[JsonPropertyName("mode")]
		public long? Mode { get; init; }

		///<summary>Set the navigation mode: 1 for normal, 2 for extra care, 3 for deep. Defaults to normal if not set.</summary>
		[JsonPropertyName("navigation")]
		public long? Navigation { get; init; }

		///<summary>Whether to use a persistent map or not for cleaning (i.e. No go lines): 2 for no map, 4 for map. Default to using map if not set (and fallback to no map if no map is found).</summary>
		[JsonPropertyName("category")]
		public long? Category { get; init; }

		///<summary>Only supported on the Botvac D7. Name of the zone to clean. Defaults to no zone i.e. complete house cleanup. eg: Kitchen</summary>
		[JsonPropertyName("zone")]
		public string? Zone { get; init; }
	}

	public class NetdaemonServices
	{
		private readonly IHaContext _haContext;
		public NetdaemonServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Create an entity</summary>
		public void EntityCreate(NetdaemonEntityCreateParameters data)
		{
			_haContext.CallService("netdaemon", "entity_create", null, data);
		}

		///<summary>Create an entity</summary>
		///<param name="entityId">The entity ID of the entity eg: sensor.awesome</param>
		///<param name="state">The state of the entity eg: Lorem ipsum</param>
		///<param name="icon">The icon for the entity eg: mdi:rocket-launch-outline</param>
		///<param name="unit">The unit of measurement for the entity</param>
		///<param name="options">List of options for a select entity</param>
		///<param name="attributes">The attributes of the entity</param>
		public void EntityCreate(object? @entityId = null, object? @state = null, object? @icon = null, object? @unit = null, object? @options = null, object? @attributes = null)
		{
			_haContext.CallService("netdaemon", "entity_create", null, new NetdaemonEntityCreateParameters{EntityId = @entityId, State = @state, Icon = @icon, Unit = @unit, Options = @options, Attributes = @attributes});
		}

		///<summary>Remove an entity</summary>
		public void EntityRemove(NetdaemonEntityRemoveParameters data)
		{
			_haContext.CallService("netdaemon", "entity_remove", null, data);
		}

		///<summary>Remove an entity</summary>
		///<param name="entityId">The entity ID of the entity eg: sensor.awesome</param>
		public void EntityRemove(object? @entityId = null)
		{
			_haContext.CallService("netdaemon", "entity_remove", null, new NetdaemonEntityRemoveParameters{EntityId = @entityId});
		}

		///<summary>Update an entity</summary>
		public void EntityUpdate(NetdaemonEntityUpdateParameters data)
		{
			_haContext.CallService("netdaemon", "entity_update", null, data);
		}

		///<summary>Update an entity</summary>
		///<param name="entityId">The entity ID of the entity eg: sensor.awesome</param>
		///<param name="state">The state of the entity eg: Lorem ipsum</param>
		///<param name="icon">The icon for the entity eg: mdi:rocket-launch-outline</param>
		///<param name="unit">The unit of measurement for the entity</param>
		///<param name="options">List of options for a select entity</param>
		///<param name="attributes">The attributes of the entity</param>
		public void EntityUpdate(object? @entityId = null, object? @state = null, object? @icon = null, object? @unit = null, object? @options = null, object? @attributes = null)
		{
			_haContext.CallService("netdaemon", "entity_update", null, new NetdaemonEntityUpdateParameters{EntityId = @entityId, State = @state, Icon = @icon, Unit = @unit, Options = @options, Attributes = @attributes});
		}

		///<summary>Register a new service for netdaemon, used by the daemon and not to be used by users</summary>
		public void RegisterService(NetdaemonRegisterServiceParameters data)
		{
			_haContext.CallService("netdaemon", "register_service", null, data);
		}

		///<summary>Register a new service for netdaemon, used by the daemon and not to be used by users</summary>
		///<param name="service">The name of the service to register</param>
		///<param name="class">The class that implements the service call</param>
		///<param name="method">The method to call</param>
		public void RegisterService(object? @service = null, object? @class = null, object? @method = null)
		{
			_haContext.CallService("netdaemon", "register_service", null, new NetdaemonRegisterServiceParameters{Service = @service, Class = @class, Method = @method});
		}

		public void ReloadApps()
		{
			_haContext.CallService("netdaemon", "reload_apps", null);
		}
	}

	public record NetdaemonEntityCreateParameters
	{
		///<summary>The entity ID of the entity eg: sensor.awesome</summary>
		[JsonPropertyName("entity_id")]
		public object? EntityId { get; init; }

		///<summary>The state of the entity eg: Lorem ipsum</summary>
		[JsonPropertyName("state")]
		public object? State { get; init; }

		///<summary>The icon for the entity eg: mdi:rocket-launch-outline</summary>
		[JsonPropertyName("icon")]
		public object? Icon { get; init; }

		///<summary>The unit of measurement for the entity</summary>
		[JsonPropertyName("unit")]
		public object? Unit { get; init; }

		///<summary>List of options for a select entity</summary>
		[JsonPropertyName("options")]
		public object? Options { get; init; }

		///<summary>The attributes of the entity</summary>
		[JsonPropertyName("attributes")]
		public object? Attributes { get; init; }
	}

	public record NetdaemonEntityRemoveParameters
	{
		///<summary>The entity ID of the entity eg: sensor.awesome</summary>
		[JsonPropertyName("entity_id")]
		public object? EntityId { get; init; }
	}

	public record NetdaemonEntityUpdateParameters
	{
		///<summary>The entity ID of the entity eg: sensor.awesome</summary>
		[JsonPropertyName("entity_id")]
		public object? EntityId { get; init; }

		///<summary>The state of the entity eg: Lorem ipsum</summary>
		[JsonPropertyName("state")]
		public object? State { get; init; }

		///<summary>The icon for the entity eg: mdi:rocket-launch-outline</summary>
		[JsonPropertyName("icon")]
		public object? Icon { get; init; }

		///<summary>The unit of measurement for the entity</summary>
		[JsonPropertyName("unit")]
		public object? Unit { get; init; }

		///<summary>List of options for a select entity</summary>
		[JsonPropertyName("options")]
		public object? Options { get; init; }

		///<summary>The attributes of the entity</summary>
		[JsonPropertyName("attributes")]
		public object? Attributes { get; init; }
	}

	public record NetdaemonRegisterServiceParameters
	{
		///<summary>The name of the service to register</summary>
		[JsonPropertyName("service")]
		public object? Service { get; init; }

		///<summary>The class that implements the service call</summary>
		[JsonPropertyName("class")]
		public object? Class { get; init; }

		///<summary>The method to call</summary>
		[JsonPropertyName("method")]
		public object? Method { get; init; }
	}

	public class NotifyServices
	{
		private readonly IHaContext _haContext;
		public NotifyServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Sends a notification message using the alexa_media service.</summary>
		public void AlexaMedia(NotifyAlexaMediaParameters data)
		{
			_haContext.CallService("notify", "alexa_media", null, data);
		}

		///<summary>Sends a notification message using the alexa_media service.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMedia(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media", null, new NotifyAlexaMediaParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_basement_echo integration.</summary>
		public void AlexaMediaBasementEcho(NotifyAlexaMediaBasementEchoParameters data)
		{
			_haContext.CallService("notify", "alexa_media_basement_echo", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_basement_echo integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaBasementEcho(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_basement_echo", null, new NotifyAlexaMediaBasementEchoParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_basement_fire_tv integration.</summary>
		public void AlexaMediaBasementFireTv(NotifyAlexaMediaBasementFireTvParameters data)
		{
			_haContext.CallService("notify", "alexa_media_basement_fire_tv", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_basement_fire_tv integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaBasementFireTv(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_basement_fire_tv", null, new NotifyAlexaMediaBasementFireTvParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_christopher_s_2nd_echo_flex integration.</summary>
		public void AlexaMediaChristopherS2ndEchoFlex(NotifyAlexaMediaChristopherS2ndEchoFlexParameters data)
		{
			_haContext.CallService("notify", "alexa_media_christopher_s_2nd_echo_flex", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_christopher_s_2nd_echo_flex integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaChristopherS2ndEchoFlex(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_christopher_s_2nd_echo_flex", null, new NotifyAlexaMediaChristopherS2ndEchoFlexParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_christopher_s_3rd_echo_flex integration.</summary>
		public void AlexaMediaChristopherS3rdEchoFlex(NotifyAlexaMediaChristopherS3rdEchoFlexParameters data)
		{
			_haContext.CallService("notify", "alexa_media_christopher_s_3rd_echo_flex", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_christopher_s_3rd_echo_flex integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaChristopherS3rdEchoFlex(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_christopher_s_3rd_echo_flex", null, new NotifyAlexaMediaChristopherS3rdEchoFlexParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_christopher_s_6th_echo_dot integration.</summary>
		public void AlexaMediaChristopherS6thEchoDot(NotifyAlexaMediaChristopherS6thEchoDotParameters data)
		{
			_haContext.CallService("notify", "alexa_media_christopher_s_6th_echo_dot", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_christopher_s_6th_echo_dot integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaChristopherS6thEchoDot(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_christopher_s_6th_echo_dot", null, new NotifyAlexaMediaChristopherS6thEchoDotParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_christopher_s_echo_auto integration.</summary>
		public void AlexaMediaChristopherSEchoAuto(NotifyAlexaMediaChristopherSEchoAutoParameters data)
		{
			_haContext.CallService("notify", "alexa_media_christopher_s_echo_auto", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_christopher_s_echo_auto integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaChristopherSEchoAuto(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_christopher_s_echo_auto", null, new NotifyAlexaMediaChristopherSEchoAutoParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_christopher_s_echo_dot integration.</summary>
		public void AlexaMediaChristopherSEchoDot(NotifyAlexaMediaChristopherSEchoDotParameters data)
		{
			_haContext.CallService("notify", "alexa_media_christopher_s_echo_dot", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_christopher_s_echo_dot integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaChristopherSEchoDot(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_christopher_s_echo_dot", null, new NotifyAlexaMediaChristopherSEchoDotParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_christopher_s_echo_dot_2 integration.</summary>
		public void AlexaMediaChristopherSEchoDot2(NotifyAlexaMediaChristopherSEchoDot2Parameters data)
		{
			_haContext.CallService("notify", "alexa_media_christopher_s_echo_dot_2", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_christopher_s_echo_dot_2 integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaChristopherSEchoDot2(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_christopher_s_echo_dot_2", null, new NotifyAlexaMediaChristopherSEchoDot2Parameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_christopher_s_echo_flex integration.</summary>
		public void AlexaMediaChristopherSEchoFlex(NotifyAlexaMediaChristopherSEchoFlexParameters data)
		{
			_haContext.CallService("notify", "alexa_media_christopher_s_echo_flex", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_christopher_s_echo_flex integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaChristopherSEchoFlex(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_christopher_s_echo_flex", null, new NotifyAlexaMediaChristopherSEchoFlexParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_christopher_s_echo_link_amp integration.</summary>
		public void AlexaMediaChristopherSEchoLinkAmp(NotifyAlexaMediaChristopherSEchoLinkAmpParameters data)
		{
			_haContext.CallService("notify", "alexa_media_christopher_s_echo_link_amp", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_christopher_s_echo_link_amp integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaChristopherSEchoLinkAmp(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_christopher_s_echo_link_amp", null, new NotifyAlexaMediaChristopherSEchoLinkAmpParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_christopher_s_fire integration.</summary>
		public void AlexaMediaChristopherSFire(NotifyAlexaMediaChristopherSFireParameters data)
		{
			_haContext.CallService("notify", "alexa_media_christopher_s_fire", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_christopher_s_fire integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaChristopherSFire(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_christopher_s_fire", null, new NotifyAlexaMediaChristopherSFireParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_christopher_s_fire_tv integration.</summary>
		public void AlexaMediaChristopherSFireTv(NotifyAlexaMediaChristopherSFireTvParameters data)
		{
			_haContext.CallService("notify", "alexa_media_christopher_s_fire_tv", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_christopher_s_fire_tv integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaChristopherSFireTv(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_christopher_s_fire_tv", null, new NotifyAlexaMediaChristopherSFireTvParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_devices_everywhere integration.</summary>
		public void AlexaMediaDevicesEverywhere(NotifyAlexaMediaDevicesEverywhereParameters data)
		{
			_haContext.CallService("notify", "alexa_media_devices_everywhere", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_devices_everywhere integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaDevicesEverywhere(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_devices_everywhere", null, new NotifyAlexaMediaDevicesEverywhereParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_devices_inside integration.</summary>
		public void AlexaMediaDevicesInside(NotifyAlexaMediaDevicesInsideParameters data)
		{
			_haContext.CallService("notify", "alexa_media_devices_inside", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_devices_inside integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaDevicesInside(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_devices_inside", null, new NotifyAlexaMediaDevicesInsideParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_dining_room integration.</summary>
		public void AlexaMediaDiningRoom(NotifyAlexaMediaDiningRoomParameters data)
		{
			_haContext.CallService("notify", "alexa_media_dining_room", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_dining_room integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaDiningRoom(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_dining_room", null, new NotifyAlexaMediaDiningRoomParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_family_room integration.</summary>
		public void AlexaMediaFamilyRoom(NotifyAlexaMediaFamilyRoomParameters data)
		{
			_haContext.CallService("notify", "alexa_media_family_room", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_family_room integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaFamilyRoom(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_family_room", null, new NotifyAlexaMediaFamilyRoomParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_family_room_tv integration.</summary>
		public void AlexaMediaFamilyRoomTv(NotifyAlexaMediaFamilyRoomTvParameters data)
		{
			_haContext.CallService("notify", "alexa_media_family_room_tv", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_family_room_tv integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaFamilyRoomTv(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_family_room_tv", null, new NotifyAlexaMediaFamilyRoomTvParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_front_entry integration.</summary>
		public void AlexaMediaFrontEntry(NotifyAlexaMediaFrontEntryParameters data)
		{
			_haContext.CallService("notify", "alexa_media_front_entry", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_front_entry integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaFrontEntry(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_front_entry", null, new NotifyAlexaMediaFrontEntryParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_kitchen integration.</summary>
		public void AlexaMediaKitchen(NotifyAlexaMediaKitchenParameters data)
		{
			_haContext.CallService("notify", "alexa_media_kitchen", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_kitchen integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaKitchen(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_kitchen", null, new NotifyAlexaMediaKitchenParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_last_called integration.</summary>
		public void AlexaMediaLastCalled(NotifyAlexaMediaLastCalledParameters data)
		{
			_haContext.CallService("notify", "alexa_media_last_called", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_last_called integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaLastCalled(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_last_called", null, new NotifyAlexaMediaLastCalledParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_living_room integration.</summary>
		public void AlexaMediaLivingRoom(NotifyAlexaMediaLivingRoomParameters data)
		{
			_haContext.CallService("notify", "alexa_media_living_room", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_living_room integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaLivingRoom(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_living_room", null, new NotifyAlexaMediaLivingRoomParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_living_room_2 integration.</summary>
		public void AlexaMediaLivingRoom2(NotifyAlexaMediaLivingRoom2Parameters data)
		{
			_haContext.CallService("notify", "alexa_media_living_room_2", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_living_room_2 integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaLivingRoom2(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_living_room_2", null, new NotifyAlexaMediaLivingRoom2Parameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_main_floor integration.</summary>
		public void AlexaMediaMainFloor(NotifyAlexaMediaMainFloorParameters data)
		{
			_haContext.CallService("notify", "alexa_media_main_floor", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_main_floor integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaMainFloor(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_main_floor", null, new NotifyAlexaMediaMainFloorParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_master_bedroom_fire_tv integration.</summary>
		public void AlexaMediaMasterBedroomFireTv(NotifyAlexaMediaMasterBedroomFireTvParameters data)
		{
			_haContext.CallService("notify", "alexa_media_master_bedroom_fire_tv", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_master_bedroom_fire_tv integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaMasterBedroomFireTv(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_master_bedroom_fire_tv", null, new NotifyAlexaMediaMasterBedroomFireTvParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_office_echo_show integration.</summary>
		public void AlexaMediaOfficeEchoShow(NotifyAlexaMediaOfficeEchoShowParameters data)
		{
			_haContext.CallService("notify", "alexa_media_office_echo_show", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_office_echo_show integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaOfficeEchoShow(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_office_echo_show", null, new NotifyAlexaMediaOfficeEchoShowParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_speakers_everywhere integration.</summary>
		public void AlexaMediaSpeakersEverywhere(NotifyAlexaMediaSpeakersEverywhereParameters data)
		{
			_haContext.CallService("notify", "alexa_media_speakers_everywhere", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_speakers_everywhere integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaSpeakersEverywhere(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_speakers_everywhere", null, new NotifyAlexaMediaSpeakersEverywhereParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_speakers_main_floor integration.</summary>
		public void AlexaMediaSpeakersMainFloor(NotifyAlexaMediaSpeakersMainFloorParameters data)
		{
			_haContext.CallService("notify", "alexa_media_speakers_main_floor", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_speakers_main_floor integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaSpeakersMainFloor(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_speakers_main_floor", null, new NotifyAlexaMediaSpeakersMainFloorParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the alexa_media_this_device_2 integration.</summary>
		public void AlexaMediaThisDevice2(NotifyAlexaMediaThisDevice2Parameters data)
		{
			_haContext.CallService("notify", "alexa_media_this_device_2", null, data);
		}

		///<summary>Sends a notification message using the alexa_media_this_device_2 integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void AlexaMediaThisDevice2(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "alexa_media_this_device_2", null, new NotifyAlexaMediaThisDevice2Parameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the basement_tv service.</summary>
		public void BasementTv(NotifyBasementTvParameters data)
		{
			_haContext.CallService("notify", "basement_tv", null, data);
		}

		///<summary>Sends a notification message using the basement_tv service.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void BasementTv(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "basement_tv", null, new NotifyBasementTvParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the master_bedroom_tv service.</summary>
		public void MasterBedroomTv(NotifyMasterBedroomTvParameters data)
		{
			_haContext.CallService("notify", "master_bedroom_tv", null, data);
		}

		///<summary>Sends a notification message using the master_bedroom_tv service.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void MasterBedroomTv(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "master_bedroom_tv", null, new NotifyMasterBedroomTvParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the mobile_app_mayson_s_tablet integration.</summary>
		public void MobileAppMaysonSTablet(NotifyMobileAppMaysonSTabletParameters data)
		{
			_haContext.CallService("notify", "mobile_app_mayson_s_tablet", null, data);
		}

		///<summary>Sends a notification message using the mobile_app_mayson_s_tablet integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void MobileAppMaysonSTablet(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "mobile_app_mayson_s_tablet", null, new NotifyMobileAppMaysonSTabletParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the mobile_app_mayson_s_v350u integration.</summary>
		public void MobileAppMaysonSV350u(NotifyMobileAppMaysonSV350uParameters data)
		{
			_haContext.CallService("notify", "mobile_app_mayson_s_v350u", null, data);
		}

		///<summary>Sends a notification message using the mobile_app_mayson_s_v350u integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void MobileAppMaysonSV350u(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "mobile_app_mayson_s_v350u", null, new NotifyMobileAppMaysonSV350uParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the mobile_app_phone_chris integration.</summary>
		public void MobileAppPhoneChris(NotifyMobileAppPhoneChrisParameters data)
		{
			_haContext.CallService("notify", "mobile_app_phone_chris", null, data);
		}

		///<summary>Sends a notification message using the mobile_app_phone_chris integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void MobileAppPhoneChris(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "mobile_app_phone_chris", null, new NotifyMobileAppPhoneChrisParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the mobile_app_sm_g965u1 integration.</summary>
		public void MobileAppSmG965u1(NotifyMobileAppSmG965u1Parameters data)
		{
			_haContext.CallService("notify", "mobile_app_sm_g965u1", null, data);
		}

		///<summary>Sends a notification message using the mobile_app_sm_g965u1 integration.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void MobileAppSmG965u1(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "mobile_app_sm_g965u1", null, new NotifyMobileAppSmG965u1Parameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification message using the notify service.</summary>
		public void Notify(NotifyNotifyParameters data)
		{
			_haContext.CallService("notify", "notify", null, data);
		}

		///<summary>Sends a notification message using the notify service.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		///<param name="target">An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</param>
		///<param name="data">Extended information for notification. Optional depending on the platform. eg: platform specific</param>
		public void Notify(string @message, string? @title = null, object? @target = null, object? @data = null)
		{
			_haContext.CallService("notify", "notify", null, new NotifyNotifyParameters{Message = @message, Title = @title, Target = @target, Data = @data});
		}

		///<summary>Sends a notification that is visible in the front-end.</summary>
		public void PersistentNotification(NotifyPersistentNotificationParameters data)
		{
			_haContext.CallService("notify", "persistent_notification", null, data);
		}

		///<summary>Sends a notification that is visible in the front-end.</summary>
		///<param name="message">Message body of the notification. eg: The garage door has been open for 10 minutes.</param>
		///<param name="title">Title for your notification. eg: Your Garage Door Friend</param>
		public void PersistentNotification(string @message, string? @title = null)
		{
			_haContext.CallService("notify", "persistent_notification", null, new NotifyPersistentNotificationParameters{Message = @message, Title = @title});
		}
	}

	public record NotifyAlexaMediaParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaBasementEchoParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaBasementFireTvParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaChristopherS2ndEchoFlexParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaChristopherS3rdEchoFlexParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaChristopherS6thEchoDotParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaChristopherSEchoAutoParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaChristopherSEchoDotParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaChristopherSEchoDot2Parameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaChristopherSEchoFlexParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaChristopherSEchoLinkAmpParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaChristopherSFireParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaChristopherSFireTvParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaDevicesEverywhereParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaDevicesInsideParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaDiningRoomParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaFamilyRoomParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaFamilyRoomTvParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaFrontEntryParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaKitchenParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaLastCalledParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaLivingRoomParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaLivingRoom2Parameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaMainFloorParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaMasterBedroomFireTvParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaOfficeEchoShowParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaSpeakersEverywhereParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaSpeakersMainFloorParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyAlexaMediaThisDevice2Parameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyBasementTvParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyMasterBedroomTvParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyMobileAppMaysonSTabletParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyMobileAppMaysonSV350uParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyMobileAppPhoneChrisParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyMobileAppSmG965u1Parameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyNotifyParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>An array of targets to send the notification to. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("target")]
		public object? Target { get; init; }

		///<summary>Extended information for notification. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("data")]
		public object? Data { get; init; }
	}

	public record NotifyPersistentNotificationParameters
	{
		///<summary>Message body of the notification. eg: The garage door has been open for 10 minutes.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Title for your notification. eg: Your Garage Door Friend</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }
	}

	public class NumberServices
	{
		private readonly IHaContext _haContext;
		public NumberServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Set the value of a Number entity.</summary>
		///<param name="target">The target for this service call</param>
		public void SetValue(ServiceTarget target, NumberSetValueParameters data)
		{
			_haContext.CallService("number", "set_value", target, data);
		}

		///<summary>Set the value of a Number entity.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="value">The target value the entity should be set to. eg: 42</param>
		public void SetValue(ServiceTarget target, string? @value = null)
		{
			_haContext.CallService("number", "set_value", target, new NumberSetValueParameters{Value = @value});
		}
	}

	public record NumberSetValueParameters
	{
		///<summary>The target value the entity should be set to. eg: 42</summary>
		[JsonPropertyName("value")]
		public string? Value { get; init; }
	}

	public class OnvifServices
	{
		private readonly IHaContext _haContext;
		public OnvifServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>If your ONVIF camera supports PTZ, you will be able to pan, tilt or zoom your camera.</summary>
		///<param name="target">The target for this service call</param>
		public void Ptz(ServiceTarget target, OnvifPtzParameters data)
		{
			_haContext.CallService("onvif", "ptz", target, data);
		}

		///<summary>If your ONVIF camera supports PTZ, you will be able to pan, tilt or zoom your camera.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="tilt">Tilt direction.</param>
		///<param name="pan">Pan direction.</param>
		///<param name="zoom">Zoom.</param>
		///<param name="distance">Distance coefficient. Sets how much PTZ should be executed in one request.</param>
		///<param name="speed">Speed coefficient. Sets how fast PTZ will be executed.</param>
		///<param name="continuousDuration">Set ContinuousMove delay in seconds before stopping the move</param>
		///<param name="preset">PTZ preset profile token. Sets the preset profile token which is executed with GotoPreset eg: 1</param>
		///<param name="moveMode">PTZ moving mode.</param>
		public void Ptz(ServiceTarget target, object? @tilt = null, object? @pan = null, object? @zoom = null, double? @distance = null, double? @speed = null, double? @continuousDuration = null, string? @preset = null, object? @moveMode = null)
		{
			_haContext.CallService("onvif", "ptz", target, new OnvifPtzParameters{Tilt = @tilt, Pan = @pan, Zoom = @zoom, Distance = @distance, Speed = @speed, ContinuousDuration = @continuousDuration, Preset = @preset, MoveMode = @moveMode});
		}
	}

	public record OnvifPtzParameters
	{
		///<summary>Tilt direction.</summary>
		[JsonPropertyName("tilt")]
		public object? Tilt { get; init; }

		///<summary>Pan direction.</summary>
		[JsonPropertyName("pan")]
		public object? Pan { get; init; }

		///<summary>Zoom.</summary>
		[JsonPropertyName("zoom")]
		public object? Zoom { get; init; }

		///<summary>Distance coefficient. Sets how much PTZ should be executed in one request.</summary>
		[JsonPropertyName("distance")]
		public double? Distance { get; init; }

		///<summary>Speed coefficient. Sets how fast PTZ will be executed.</summary>
		[JsonPropertyName("speed")]
		public double? Speed { get; init; }

		///<summary>Set ContinuousMove delay in seconds before stopping the move</summary>
		[JsonPropertyName("continuous_duration")]
		public double? ContinuousDuration { get; init; }

		///<summary>PTZ preset profile token. Sets the preset profile token which is executed with GotoPreset eg: 1</summary>
		[JsonPropertyName("preset")]
		public string? Preset { get; init; }

		///<summary>PTZ moving mode.</summary>
		[JsonPropertyName("move_mode")]
		public object? MoveMode { get; init; }
	}

	public class PersistentNotificationServices
	{
		private readonly IHaContext _haContext;
		public PersistentNotificationServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Show a notification in the frontend.</summary>
		public void Create(PersistentNotificationCreateParameters data)
		{
			_haContext.CallService("persistent_notification", "create", null, data);
		}

		///<summary>Show a notification in the frontend.</summary>
		///<param name="message">Message body of the notification. [Templates accepted] eg: Please check your configuration.yaml.</param>
		///<param name="title">Optional title for your notification. [Templates accepted] eg: Test notification</param>
		///<param name="notificationId">Target ID of the notification, will replace a notification with the same ID. eg: 1234</param>
		public void Create(string @message, string? @title = null, string? @notificationId = null)
		{
			_haContext.CallService("persistent_notification", "create", null, new PersistentNotificationCreateParameters{Message = @message, Title = @title, NotificationId = @notificationId});
		}

		///<summary>Remove a notification from the frontend.</summary>
		public void Dismiss(PersistentNotificationDismissParameters data)
		{
			_haContext.CallService("persistent_notification", "dismiss", null, data);
		}

		///<summary>Remove a notification from the frontend.</summary>
		///<param name="notificationId">Target ID of the notification, which should be removed. eg: 1234</param>
		public void Dismiss(string @notificationId)
		{
			_haContext.CallService("persistent_notification", "dismiss", null, new PersistentNotificationDismissParameters{NotificationId = @notificationId});
		}

		///<summary>Mark a notification read.</summary>
		public void MarkRead(PersistentNotificationMarkReadParameters data)
		{
			_haContext.CallService("persistent_notification", "mark_read", null, data);
		}

		///<summary>Mark a notification read.</summary>
		///<param name="notificationId">Target ID of the notification, which should be mark read. eg: 1234</param>
		public void MarkRead(string @notificationId)
		{
			_haContext.CallService("persistent_notification", "mark_read", null, new PersistentNotificationMarkReadParameters{NotificationId = @notificationId});
		}
	}

	public record PersistentNotificationCreateParameters
	{
		///<summary>Message body of the notification. [Templates accepted] eg: Please check your configuration.yaml.</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Optional title for your notification. [Templates accepted] eg: Test notification</summary>
		[JsonPropertyName("title")]
		public string? Title { get; init; }

		///<summary>Target ID of the notification, will replace a notification with the same ID. eg: 1234</summary>
		[JsonPropertyName("notification_id")]
		public string? NotificationId { get; init; }
	}

	public record PersistentNotificationDismissParameters
	{
		///<summary>Target ID of the notification, which should be removed. eg: 1234</summary>
		[JsonPropertyName("notification_id")]
		public string? NotificationId { get; init; }
	}

	public record PersistentNotificationMarkReadParameters
	{
		///<summary>Target ID of the notification, which should be mark read. eg: 1234</summary>
		[JsonPropertyName("notification_id")]
		public string? NotificationId { get; init; }
	}

	public class PersonServices
	{
		private readonly IHaContext _haContext;
		public PersonServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Reload the person configuration.</summary>
		public void Reload()
		{
			_haContext.CallService("person", "reload", null);
		}
	}

	public class PiHoleServices
	{
		private readonly IHaContext _haContext;
		public PiHoleServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Disable configured Pi-hole(s) for an amount of time</summary>
		///<param name="target">The target for this service call</param>
		public void Disable(ServiceTarget target, PiHoleDisableParameters data)
		{
			_haContext.CallService("pi_hole", "disable", target, data);
		}

		///<summary>Disable configured Pi-hole(s) for an amount of time</summary>
		///<param name="target">The target for this service call</param>
		///<param name="duration">Time that the Pi-hole should be disabled for eg: 00:00:15</param>
		public void Disable(ServiceTarget target, string @duration)
		{
			_haContext.CallService("pi_hole", "disable", target, new PiHoleDisableParameters{Duration = @duration});
		}
	}

	public record PiHoleDisableParameters
	{
		///<summary>Time that the Pi-hole should be disabled for eg: 00:00:15</summary>
		[JsonPropertyName("duration")]
		public string? Duration { get; init; }
	}

	public class PythonScriptServices
	{
		private readonly IHaContext _haContext;
		public PythonScriptServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Reload all available python_scripts</summary>
		public void Reload()
		{
			_haContext.CallService("python_script", "reload", null);
		}

		public void ShutdownBasementTv()
		{
			_haContext.CallService("python_script", "shutdown_basement_tv", null);
		}
	}

	public class RecorderServices
	{
		private readonly IHaContext _haContext;
		public RecorderServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Stop the recording of events and state changes</summary>
		public void Disable()
		{
			_haContext.CallService("recorder", "disable", null);
		}

		///<summary>Start the recording of events and state changes</summary>
		public void Enable()
		{
			_haContext.CallService("recorder", "enable", null);
		}

		///<summary>Start purge task - to clean up old data from your database.</summary>
		public void Purge(RecorderPurgeParameters data)
		{
			_haContext.CallService("recorder", "purge", null, data);
		}

		///<summary>Start purge task - to clean up old data from your database.</summary>
		///<param name="keepDays">Number of history days to keep in database after purge.</param>
		///<param name="repack">Attempt to save disk space by rewriting the entire database file.</param>
		///<param name="applyFilter">Apply entity_id and event_type filter in addition to time based purge.</param>
		public void Purge(long? @keepDays = null, bool? @repack = null, bool? @applyFilter = null)
		{
			_haContext.CallService("recorder", "purge", null, new RecorderPurgeParameters{KeepDays = @keepDays, Repack = @repack, ApplyFilter = @applyFilter});
		}

		///<summary>Start purge task to remove specific entities from your database.</summary>
		///<param name="target">The target for this service call</param>
		public void PurgeEntities(ServiceTarget target, RecorderPurgeEntitiesParameters data)
		{
			_haContext.CallService("recorder", "purge_entities", target, data);
		}

		///<summary>Start purge task to remove specific entities from your database.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="domains">List the domains that need to be removed from the recorder database. eg: sun</param>
		///<param name="entityGlobs">List the glob patterns to select entities for removal from the recorder database. eg: domain*.object_id*</param>
		public void PurgeEntities(ServiceTarget target, object? @domains = null, object? @entityGlobs = null)
		{
			_haContext.CallService("recorder", "purge_entities", target, new RecorderPurgeEntitiesParameters{Domains = @domains, EntityGlobs = @entityGlobs});
		}
	}

	public record RecorderPurgeParameters
	{
		///<summary>Number of history days to keep in database after purge.</summary>
		[JsonPropertyName("keep_days")]
		public long? KeepDays { get; init; }

		///<summary>Attempt to save disk space by rewriting the entire database file.</summary>
		[JsonPropertyName("repack")]
		public bool? Repack { get; init; }

		///<summary>Apply entity_id and event_type filter in addition to time based purge.</summary>
		[JsonPropertyName("apply_filter")]
		public bool? ApplyFilter { get; init; }
	}

	public record RecorderPurgeEntitiesParameters
	{
		///<summary>List the domains that need to be removed from the recorder database. eg: sun</summary>
		[JsonPropertyName("domains")]
		public object? Domains { get; init; }

		///<summary>List the glob patterns to select entities for removal from the recorder database. eg: domain*.object_id*</summary>
		[JsonPropertyName("entity_globs")]
		public object? EntityGlobs { get; init; }
	}

	public class RemoteServices
	{
		private readonly IHaContext _haContext;
		public RemoteServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Deletes a command or a list of commands from the database.</summary>
		///<param name="target">The target for this service call</param>
		public void DeleteCommand(ServiceTarget target, RemoteDeleteCommandParameters data)
		{
			_haContext.CallService("remote", "delete_command", target, data);
		}

		///<summary>Deletes a command or a list of commands from the database.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="device">Name of the device from which commands will be deleted. eg: television</param>
		///<param name="command">A single command or a list of commands to delete. eg: Mute</param>
		public void DeleteCommand(ServiceTarget target, object @command, string? @device = null)
		{
			_haContext.CallService("remote", "delete_command", target, new RemoteDeleteCommandParameters{Device = @device, Command = @command});
		}

		///<summary>Learns a command or a list of commands from a device.</summary>
		///<param name="target">The target for this service call</param>
		public void LearnCommand(ServiceTarget target, RemoteLearnCommandParameters data)
		{
			_haContext.CallService("remote", "learn_command", target, data);
		}

		///<summary>Learns a command or a list of commands from a device.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="device">Device ID to learn command from. eg: television</param>
		///<param name="command">A single command or a list of commands to learn. eg: Turn on</param>
		///<param name="commandType">The type of command to be learned.</param>
		///<param name="alternative">If code must be stored as alternative (useful for discrete remotes).</param>
		///<param name="timeout">Timeout for the command to be learned.</param>
		public void LearnCommand(ServiceTarget target, string? @device = null, object? @command = null, object? @commandType = null, bool? @alternative = null, long? @timeout = null)
		{
			_haContext.CallService("remote", "learn_command", target, new RemoteLearnCommandParameters{Device = @device, Command = @command, CommandType = @commandType, Alternative = @alternative, Timeout = @timeout});
		}

		///<summary>Sends a command or a list of commands to a device.</summary>
		///<param name="target">The target for this service call</param>
		public void SendCommand(ServiceTarget target, RemoteSendCommandParameters data)
		{
			_haContext.CallService("remote", "send_command", target, data);
		}

		///<summary>Sends a command or a list of commands to a device.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="device">Device ID to send command to. eg: 32756745</param>
		///<param name="command">A single command or a list of commands to send. eg: Play</param>
		///<param name="numRepeats">The number of times you want to repeat the command(s).</param>
		///<param name="delaySecs">The time you want to wait in between repeated commands.</param>
		///<param name="holdSecs">The time you want to have it held before the release is send.</param>
		public void SendCommand(ServiceTarget target, object @command, string? @device = null, long? @numRepeats = null, double? @delaySecs = null, double? @holdSecs = null)
		{
			_haContext.CallService("remote", "send_command", target, new RemoteSendCommandParameters{Device = @device, Command = @command, NumRepeats = @numRepeats, DelaySecs = @delaySecs, HoldSecs = @holdSecs});
		}

		///<summary>Toggles a device.</summary>
		///<param name="target">The target for this service call</param>
		public void Toggle(ServiceTarget target)
		{
			_haContext.CallService("remote", "toggle", target);
		}

		///<summary>Sends the Power Off Command.</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOff(ServiceTarget target)
		{
			_haContext.CallService("remote", "turn_off", target);
		}

		///<summary>Sends the Power On Command.</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOn(ServiceTarget target, RemoteTurnOnParameters data)
		{
			_haContext.CallService("remote", "turn_on", target, data);
		}

		///<summary>Sends the Power On Command.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="activity">Activity ID or Activity Name to start. eg: BedroomTV</param>
		public void TurnOn(ServiceTarget target, string? @activity = null)
		{
			_haContext.CallService("remote", "turn_on", target, new RemoteTurnOnParameters{Activity = @activity});
		}
	}

	public record RemoteDeleteCommandParameters
	{
		///<summary>Name of the device from which commands will be deleted. eg: television</summary>
		[JsonPropertyName("device")]
		public string? Device { get; init; }

		///<summary>A single command or a list of commands to delete. eg: Mute</summary>
		[JsonPropertyName("command")]
		public object? Command { get; init; }
	}

	public record RemoteLearnCommandParameters
	{
		///<summary>Device ID to learn command from. eg: television</summary>
		[JsonPropertyName("device")]
		public string? Device { get; init; }

		///<summary>A single command or a list of commands to learn. eg: Turn on</summary>
		[JsonPropertyName("command")]
		public object? Command { get; init; }

		///<summary>The type of command to be learned.</summary>
		[JsonPropertyName("command_type")]
		public object? CommandType { get; init; }

		///<summary>If code must be stored as alternative (useful for discrete remotes).</summary>
		[JsonPropertyName("alternative")]
		public bool? Alternative { get; init; }

		///<summary>Timeout for the command to be learned.</summary>
		[JsonPropertyName("timeout")]
		public long? Timeout { get; init; }
	}

	public record RemoteSendCommandParameters
	{
		///<summary>Device ID to send command to. eg: 32756745</summary>
		[JsonPropertyName("device")]
		public string? Device { get; init; }

		///<summary>A single command or a list of commands to send. eg: Play</summary>
		[JsonPropertyName("command")]
		public object? Command { get; init; }

		///<summary>The number of times you want to repeat the command(s).</summary>
		[JsonPropertyName("num_repeats")]
		public long? NumRepeats { get; init; }

		///<summary>The time you want to wait in between repeated commands.</summary>
		[JsonPropertyName("delay_secs")]
		public double? DelaySecs { get; init; }

		///<summary>The time you want to have it held before the release is send.</summary>
		[JsonPropertyName("hold_secs")]
		public double? HoldSecs { get; init; }
	}

	public record RemoteTurnOnParameters
	{
		///<summary>Activity ID or Activity Name to start. eg: BedroomTV</summary>
		[JsonPropertyName("activity")]
		public string? Activity { get; init; }
	}

	public class RestCommandServices
	{
		private readonly IHaContext _haContext;
		public RestCommandServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		public void RedeployNetdaemon()
		{
			_haContext.CallService("rest_command", "redeploy_netdaemon", null);
		}
	}

	public class RingServices
	{
		private readonly IHaContext _haContext;
		public RingServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Updates the data we have for all your ring devices</summary>
		public void Update()
		{
			_haContext.CallService("ring", "update", null);
		}
	}

	public class SceneServices
	{
		private readonly IHaContext _haContext;
		public SceneServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Activate a scene with configuration.</summary>
		public void Apply(SceneApplyParameters data)
		{
			_haContext.CallService("scene", "apply", null, data);
		}

		///<summary>Activate a scene with configuration.</summary>
		///<param name="entities">The entities and the state that they need to be. eg: {"light.kitchen":"on","light.ceiling":{"state":"on","brightness":80}}</param>
		///<param name="transition">Transition duration it takes to bring devices to the state defined in the scene.</param>
		public void Apply(object @entities, long? @transition = null)
		{
			_haContext.CallService("scene", "apply", null, new SceneApplyParameters{Entities = @entities, Transition = @transition});
		}

		///<summary>Creates a new scene.</summary>
		public void Create(SceneCreateParameters data)
		{
			_haContext.CallService("scene", "create", null, data);
		}

		///<summary>Creates a new scene.</summary>
		///<param name="sceneId">The entity_id of the new scene. eg: all_lights</param>
		///<param name="entities">The entities to control with the scene. eg: {"light.tv_back_light":"on","light.ceiling":{"state":"on","brightness":200}}</param>
		///<param name="snapshotEntities">The entities of which a snapshot is to be taken eg: ["light.ceiling","light.kitchen"]</param>
		public void Create(string @sceneId, object? @entities = null, object? @snapshotEntities = null)
		{
			_haContext.CallService("scene", "create", null, new SceneCreateParameters{SceneId = @sceneId, Entities = @entities, SnapshotEntities = @snapshotEntities});
		}

		///<summary>Reload the scene configuration.</summary>
		public void Reload()
		{
			_haContext.CallService("scene", "reload", null);
		}

		///<summary>Activate a scene.</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOn(ServiceTarget target, SceneTurnOnParameters data)
		{
			_haContext.CallService("scene", "turn_on", target, data);
		}

		///<summary>Activate a scene.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="transition">Transition duration it takes to bring devices to the state defined in the scene.</param>
		public void TurnOn(ServiceTarget target, long? @transition = null)
		{
			_haContext.CallService("scene", "turn_on", target, new SceneTurnOnParameters{Transition = @transition});
		}
	}

	public record SceneApplyParameters
	{
		///<summary>The entities and the state that they need to be. eg: {"light.kitchen":"on","light.ceiling":{"state":"on","brightness":80}}</summary>
		[JsonPropertyName("entities")]
		public object? Entities { get; init; }

		///<summary>Transition duration it takes to bring devices to the state defined in the scene.</summary>
		[JsonPropertyName("transition")]
		public long? Transition { get; init; }
	}

	public record SceneCreateParameters
	{
		///<summary>The entity_id of the new scene. eg: all_lights</summary>
		[JsonPropertyName("scene_id")]
		public string? SceneId { get; init; }

		///<summary>The entities to control with the scene. eg: {"light.tv_back_light":"on","light.ceiling":{"state":"on","brightness":200}}</summary>
		[JsonPropertyName("entities")]
		public object? Entities { get; init; }

		///<summary>The entities of which a snapshot is to be taken eg: ["light.ceiling","light.kitchen"]</summary>
		[JsonPropertyName("snapshot_entities")]
		public object? SnapshotEntities { get; init; }
	}

	public record SceneTurnOnParameters
	{
		///<summary>Transition duration it takes to bring devices to the state defined in the scene.</summary>
		[JsonPropertyName("transition")]
		public long? Transition { get; init; }
	}

	public class ScriptServices
	{
		private readonly IHaContext _haContext;
		public ScriptServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		public void AnnounceAppointmentReminder()
		{
			_haContext.CallService("script", "announce_appointment_reminder", null);
		}

		public void AudioNotify()
		{
			_haContext.CallService("script", "audio_notify", null);
		}

		public void CreditTaskTime()
		{
			_haContext.CallService("script", "credit_task_time", null);
		}

		///<summary>Reload all the available scripts</summary>
		public void Reload()
		{
			_haContext.CallService("script", "reload", null);
		}

		public void ScriptCloseMainGarageDoor()
		{
			_haContext.CallService("script", "script_close_main_garage_door", null);
		}

		public void ScriptStartChrisCar()
		{
			_haContext.CallService("script", "script_start_chris_car", null);
		}

		public void ScriptStartMelissasCar()
		{
			_haContext.CallService("script", "script_start_melissas_car", null);
		}

		public void ShutdownBasementTv()
		{
			_haContext.CallService("script", "shutdown_basement_tv", null);
		}

		///<summary>Toggle script</summary>
		///<param name="target">The target for this service call</param>
		public void Toggle(ServiceTarget target)
		{
			_haContext.CallService("script", "toggle", target);
		}

		///<summary>Turn off script</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOff(ServiceTarget target)
		{
			_haContext.CallService("script", "turn_off", target);
		}

		///<summary>Turn on script</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOn(ServiceTarget target)
		{
			_haContext.CallService("script", "turn_on", target);
		}
	}

	public class SelectServices
	{
		private readonly IHaContext _haContext;
		public SelectServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Select an option of an select entity.</summary>
		///<param name="target">The target for this service call</param>
		public void SelectOption(ServiceTarget target, SelectSelectOptionParameters data)
		{
			_haContext.CallService("select", "select_option", target, data);
		}

		///<summary>Select an option of an select entity.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="option">Option to be selected. eg: "Item A"</param>
		public void SelectOption(ServiceTarget target, string @option)
		{
			_haContext.CallService("select", "select_option", target, new SelectSelectOptionParameters{Option = @option});
		}
	}

	public record SelectSelectOptionParameters
	{
		///<summary>Option to be selected. eg: "Item A"</summary>
		[JsonPropertyName("option")]
		public string? Option { get; init; }
	}

	public class SirenServices
	{
		private readonly IHaContext _haContext;
		public SirenServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Toggles a siren.</summary>
		///<param name="target">The target for this service call</param>
		public void Toggle(ServiceTarget target)
		{
			_haContext.CallService("siren", "toggle", target);
		}

		///<summary>Turn siren off.</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOff(ServiceTarget target)
		{
			_haContext.CallService("siren", "turn_off", target);
		}

		///<summary>Turn siren on.</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOn(ServiceTarget target, SirenTurnOnParameters data)
		{
			_haContext.CallService("siren", "turn_on", target, data);
		}

		///<summary>Turn siren on.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="tone">The tone to emit when turning the siren on. When `available_tones` property is a map, either the key or the value can be used. Must be supported by the integration. eg: fire</param>
		///<param name="volumeLevel">The volume level of the noise to emit when turning the siren on. Must be supported by the integration. eg: 0.5</param>
		///<param name="duration">The duration in seconds of the noise to emit when turning the siren on. Must be supported by the integration. eg: 15</param>
		public void TurnOn(ServiceTarget target, string? @tone = null, double? @volumeLevel = null, string? @duration = null)
		{
			_haContext.CallService("siren", "turn_on", target, new SirenTurnOnParameters{Tone = @tone, VolumeLevel = @volumeLevel, Duration = @duration});
		}
	}

	public record SirenTurnOnParameters
	{
		///<summary>The tone to emit when turning the siren on. When `available_tones` property is a map, either the key or the value can be used. Must be supported by the integration. eg: fire</summary>
		[JsonPropertyName("tone")]
		public string? Tone { get; init; }

		///<summary>The volume level of the noise to emit when turning the siren on. Must be supported by the integration. eg: 0.5</summary>
		[JsonPropertyName("volume_level")]
		public double? VolumeLevel { get; init; }

		///<summary>The duration in seconds of the noise to emit when turning the siren on. Must be supported by the integration. eg: 15</summary>
		[JsonPropertyName("duration")]
		public string? Duration { get; init; }
	}

	public class SpeedtestdotnetServices
	{
		private readonly IHaContext _haContext;
		public SpeedtestdotnetServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Immediately execute a speed test with Speedtest.net</summary>
		public void Speedtest()
		{
			_haContext.CallService("speedtestdotnet", "speedtest", null);
		}
	}

	public class StatisticsServices
	{
		private readonly IHaContext _haContext;
		public StatisticsServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Reload all statistics entities.</summary>
		public void Reload()
		{
			_haContext.CallService("statistics", "reload", null);
		}
	}

	public class SwitchServices
	{
		private readonly IHaContext _haContext;
		public SwitchServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Toggles a switch state</summary>
		///<param name="target">The target for this service call</param>
		public void Toggle(ServiceTarget target)
		{
			_haContext.CallService("switch", "toggle", target);
		}

		///<summary>Turn a switch off</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOff(ServiceTarget target)
		{
			_haContext.CallService("switch", "turn_off", target);
		}

		///<summary>Turn a switch on</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOn(ServiceTarget target)
		{
			_haContext.CallService("switch", "turn_on", target);
		}
	}

	public class SynologyDsmServices
	{
		private readonly IHaContext _haContext;
		public SynologyDsmServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Reboot the NAS. This service is deprecated and will be removed in future release. Please use the corresponding button entity.</summary>
		public void Reboot(SynologyDsmRebootParameters data)
		{
			_haContext.CallService("synology_dsm", "reboot", null, data);
		}

		///<summary>Reboot the NAS. This service is deprecated and will be removed in future release. Please use the corresponding button entity.</summary>
		///<param name="serial">serial of the NAS to reboot; required when multiple NAS are configured. eg: 1NDVC86409</param>
		public void Reboot(string? @serial = null)
		{
			_haContext.CallService("synology_dsm", "reboot", null, new SynologyDsmRebootParameters{Serial = @serial});
		}

		///<summary>Shutdown the NAS. This service is deprecated and will be removed in future release. Please use the corresponding button entity.</summary>
		public void Shutdown(SynologyDsmShutdownParameters data)
		{
			_haContext.CallService("synology_dsm", "shutdown", null, data);
		}

		///<summary>Shutdown the NAS. This service is deprecated and will be removed in future release. Please use the corresponding button entity.</summary>
		///<param name="serial">serial of the NAS to shutdown; required when multiple NAS are configured. eg: 1NDVC86409</param>
		public void Shutdown(string? @serial = null)
		{
			_haContext.CallService("synology_dsm", "shutdown", null, new SynologyDsmShutdownParameters{Serial = @serial});
		}
	}

	public record SynologyDsmRebootParameters
	{
		///<summary>serial of the NAS to reboot; required when multiple NAS are configured. eg: 1NDVC86409</summary>
		[JsonPropertyName("serial")]
		public string? Serial { get; init; }
	}

	public record SynologyDsmShutdownParameters
	{
		///<summary>serial of the NAS to shutdown; required when multiple NAS are configured. eg: 1NDVC86409</summary>
		[JsonPropertyName("serial")]
		public string? Serial { get; init; }
	}

	public class SystemLogServices
	{
		private readonly IHaContext _haContext;
		public SystemLogServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Clear all log entries.</summary>
		public void Clear()
		{
			_haContext.CallService("system_log", "clear", null);
		}

		///<summary>Write log entry.</summary>
		public void Write(SystemLogWriteParameters data)
		{
			_haContext.CallService("system_log", "write", null, data);
		}

		///<summary>Write log entry.</summary>
		///<param name="message">Message to log. eg: Something went wrong</param>
		///<param name="level">Log level.</param>
		///<param name="logger">Logger name under which to log the message. Defaults to 'system_log.external'. eg: mycomponent.myplatform</param>
		public void Write(string @message, object? @level = null, string? @logger = null)
		{
			_haContext.CallService("system_log", "write", null, new SystemLogWriteParameters{Message = @message, Level = @level, Logger = @logger});
		}
	}

	public record SystemLogWriteParameters
	{
		///<summary>Message to log. eg: Something went wrong</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Log level.</summary>
		[JsonPropertyName("level")]
		public object? Level { get; init; }

		///<summary>Logger name under which to log the message. Defaults to 'system_log.external'. eg: mycomponent.myplatform</summary>
		[JsonPropertyName("logger")]
		public string? Logger { get; init; }
	}

	public class TemplateServices
	{
		private readonly IHaContext _haContext;
		public TemplateServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Reload all template entities.</summary>
		public void Reload()
		{
			_haContext.CallService("template", "reload", null);
		}
	}

	public class TimerServices
	{
		private readonly IHaContext _haContext;
		public TimerServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Cancel a timer.</summary>
		///<param name="target">The target for this service call</param>
		public void Cancel(ServiceTarget target)
		{
			_haContext.CallService("timer", "cancel", target);
		}

		///<summary>Finish a timer.</summary>
		///<param name="target">The target for this service call</param>
		public void Finish(ServiceTarget target)
		{
			_haContext.CallService("timer", "finish", target);
		}

		///<summary>Pause a timer.</summary>
		///<param name="target">The target for this service call</param>
		public void Pause(ServiceTarget target)
		{
			_haContext.CallService("timer", "pause", target);
		}

		public void Reload()
		{
			_haContext.CallService("timer", "reload", null);
		}

		///<summary>Start a timer</summary>
		///<param name="target">The target for this service call</param>
		public void Start(ServiceTarget target, TimerStartParameters data)
		{
			_haContext.CallService("timer", "start", target, data);
		}

		///<summary>Start a timer</summary>
		///<param name="target">The target for this service call</param>
		///<param name="duration">Duration the timer requires to finish. [optional] eg: 00:01:00 or 60</param>
		public void Start(ServiceTarget target, string? @duration = null)
		{
			_haContext.CallService("timer", "start", target, new TimerStartParameters{Duration = @duration});
		}
	}

	public record TimerStartParameters
	{
		///<summary>Duration the timer requires to finish. [optional] eg: 00:01:00 or 60</summary>
		[JsonPropertyName("duration")]
		public string? Duration { get; init; }
	}

	public class TtsServices
	{
		private readonly IHaContext _haContext;
		public TtsServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Remove all text-to-speech cache files and RAM cache.</summary>
		public void ClearCache()
		{
			_haContext.CallService("tts", "clear_cache", null);
		}

		///<summary>Say something using text-to-speech on a media player with cloud.</summary>
		public void CloudSay(TtsCloudSayParameters data)
		{
			_haContext.CallService("tts", "cloud_say", null, data);
		}

		///<summary>Say something using text-to-speech on a media player with cloud.</summary>
		///<param name="entityId">Name(s) of media player entities.</param>
		///<param name="message">Text to speak on devices. eg: My name is hanna</param>
		///<param name="cache">Control file cache of this message.</param>
		///<param name="language">Language to use for speech generation. eg: ru</param>
		///<param name="options">A dictionary containing platform-specific options. Optional depending on the platform. eg: platform specific</param>
		public void CloudSay(string @entityId, string @message, bool? @cache = null, string? @language = null, object? @options = null)
		{
			_haContext.CallService("tts", "cloud_say", null, new TtsCloudSayParameters{EntityId = @entityId, Message = @message, Cache = @cache, Language = @language, Options = @options});
		}

		///<summary>Say something using text-to-speech on a media player with google_translate.</summary>
		public void GoogleTranslateSay(TtsGoogleTranslateSayParameters data)
		{
			_haContext.CallService("tts", "google_translate_say", null, data);
		}

		///<summary>Say something using text-to-speech on a media player with google_translate.</summary>
		///<param name="entityId">Name(s) of media player entities.</param>
		///<param name="message">Text to speak on devices. eg: My name is hanna</param>
		///<param name="cache">Control file cache of this message.</param>
		///<param name="language">Language to use for speech generation. eg: ru</param>
		///<param name="options">A dictionary containing platform-specific options. Optional depending on the platform. eg: platform specific</param>
		public void GoogleTranslateSay(string @entityId, string @message, bool? @cache = null, string? @language = null, object? @options = null)
		{
			_haContext.CallService("tts", "google_translate_say", null, new TtsGoogleTranslateSayParameters{EntityId = @entityId, Message = @message, Cache = @cache, Language = @language, Options = @options});
		}
	}

	public record TtsCloudSayParameters
	{
		///<summary>Name(s) of media player entities.</summary>
		[JsonPropertyName("entity_id")]
		public string? EntityId { get; init; }

		///<summary>Text to speak on devices. eg: My name is hanna</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Control file cache of this message.</summary>
		[JsonPropertyName("cache")]
		public bool? Cache { get; init; }

		///<summary>Language to use for speech generation. eg: ru</summary>
		[JsonPropertyName("language")]
		public string? Language { get; init; }

		///<summary>A dictionary containing platform-specific options. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("options")]
		public object? Options { get; init; }
	}

	public record TtsGoogleTranslateSayParameters
	{
		///<summary>Name(s) of media player entities.</summary>
		[JsonPropertyName("entity_id")]
		public string? EntityId { get; init; }

		///<summary>Text to speak on devices. eg: My name is hanna</summary>
		[JsonPropertyName("message")]
		public string? Message { get; init; }

		///<summary>Control file cache of this message.</summary>
		[JsonPropertyName("cache")]
		public bool? Cache { get; init; }

		///<summary>Language to use for speech generation. eg: ru</summary>
		[JsonPropertyName("language")]
		public string? Language { get; init; }

		///<summary>A dictionary containing platform-specific options. Optional depending on the platform. eg: platform specific</summary>
		[JsonPropertyName("options")]
		public object? Options { get; init; }
	}

	public class UnifiServices
	{
		private readonly IHaContext _haContext;
		public UnifiServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Try to get wireless client to reconnect to UniFi Network</summary>
		public void ReconnectClient(UnifiReconnectClientParameters data)
		{
			_haContext.CallService("unifi", "reconnect_client", null, data);
		}

		///<summary>Try to get wireless client to reconnect to UniFi Network</summary>
		///<param name="deviceId">Try reconnect client to wireless network</param>
		public void ReconnectClient(string @deviceId)
		{
			_haContext.CallService("unifi", "reconnect_client", null, new UnifiReconnectClientParameters{DeviceId = @deviceId});
		}

		///<summary>Clean up clients that has only been associated with the controller for a short period of time.</summary>
		public void RemoveClients()
		{
			_haContext.CallService("unifi", "remove_clients", null);
		}
	}

	public record UnifiReconnectClientParameters
	{
		///<summary>Try reconnect client to wireless network</summary>
		[JsonPropertyName("device_id")]
		public string? DeviceId { get; init; }
	}

	public class UpdateServices
	{
		private readonly IHaContext _haContext;
		public UpdateServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Removes the skipped version marker from an update.</summary>
		///<param name="target">The target for this service call</param>
		public void ClearSkipped(ServiceTarget target)
		{
			_haContext.CallService("update", "clear_skipped", target);
		}

		///<summary>Install an update for this device or service</summary>
		///<param name="target">The target for this service call</param>
		public void Install(ServiceTarget target, UpdateInstallParameters data)
		{
			_haContext.CallService("update", "install", target, data);
		}

		///<summary>Install an update for this device or service</summary>
		///<param name="target">The target for this service call</param>
		///<param name="version">Version to install, if omitted, the latest version will be installed. eg: 1.0.0</param>
		///<param name="backup">Backup before installing the update, if supported by the integration.</param>
		public void Install(ServiceTarget target, string? @version = null, bool? @backup = null)
		{
			_haContext.CallService("update", "install", target, new UpdateInstallParameters{Version = @version, Backup = @backup});
		}

		///<summary>Mark currently available update as skipped.</summary>
		///<param name="target">The target for this service call</param>
		public void Skip(ServiceTarget target)
		{
			_haContext.CallService("update", "skip", target);
		}
	}

	public record UpdateInstallParameters
	{
		///<summary>Version to install, if omitted, the latest version will be installed. eg: 1.0.0</summary>
		[JsonPropertyName("version")]
		public string? Version { get; init; }

		///<summary>Backup before installing the update, if supported by the integration.</summary>
		[JsonPropertyName("backup")]
		public bool? Backup { get; init; }
	}

	public class UtilityMeterServices
	{
		private readonly IHaContext _haContext;
		public UtilityMeterServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Calibrates a utility meter sensor.</summary>
		///<param name="target">The target for this service call</param>
		public void Calibrate(ServiceTarget target, UtilityMeterCalibrateParameters data)
		{
			_haContext.CallService("utility_meter", "calibrate", target, data);
		}

		///<summary>Calibrates a utility meter sensor.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="value">Value to which set the meter eg: 100</param>
		public void Calibrate(ServiceTarget target, string @value)
		{
			_haContext.CallService("utility_meter", "calibrate", target, new UtilityMeterCalibrateParameters{Value = @value});
		}

		///<summary>Changes the tariff to the next one.</summary>
		///<param name="target">The target for this service call</param>
		public void NextTariff(ServiceTarget target)
		{
			_haContext.CallService("utility_meter", "next_tariff", target);
		}

		///<summary>Resets all counters of a utility meter.</summary>
		///<param name="target">The target for this service call</param>
		public void Reset(ServiceTarget target)
		{
			_haContext.CallService("utility_meter", "reset", target);
		}

		///<summary>Selects the current tariff of a utility meter.</summary>
		///<param name="target">The target for this service call</param>
		public void SelectTariff(ServiceTarget target, UtilityMeterSelectTariffParameters data)
		{
			_haContext.CallService("utility_meter", "select_tariff", target, data);
		}

		///<summary>Selects the current tariff of a utility meter.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="tariff">Name of the tariff to switch to eg: offpeak</param>
		public void SelectTariff(ServiceTarget target, string @tariff)
		{
			_haContext.CallService("utility_meter", "select_tariff", target, new UtilityMeterSelectTariffParameters{Tariff = @tariff});
		}
	}

	public record UtilityMeterCalibrateParameters
	{
		///<summary>Value to which set the meter eg: 100</summary>
		[JsonPropertyName("value")]
		public string? Value { get; init; }
	}

	public record UtilityMeterSelectTariffParameters
	{
		///<summary>Name of the tariff to switch to eg: offpeak</summary>
		[JsonPropertyName("tariff")]
		public string? Tariff { get; init; }
	}

	public class VacuumServices
	{
		private readonly IHaContext _haContext;
		public VacuumServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Tell the vacuum cleaner to do a spot clean-up.</summary>
		///<param name="target">The target for this service call</param>
		public void CleanSpot(ServiceTarget target)
		{
			_haContext.CallService("vacuum", "clean_spot", target);
		}

		///<summary>Locate the vacuum cleaner robot.</summary>
		///<param name="target">The target for this service call</param>
		public void Locate(ServiceTarget target)
		{
			_haContext.CallService("vacuum", "locate", target);
		}

		///<summary>Pause the cleaning task.</summary>
		///<param name="target">The target for this service call</param>
		public void Pause(ServiceTarget target)
		{
			_haContext.CallService("vacuum", "pause", target);
		}

		///<summary>Tell the vacuum cleaner to return to its dock.</summary>
		///<param name="target">The target for this service call</param>
		public void ReturnToBase(ServiceTarget target)
		{
			_haContext.CallService("vacuum", "return_to_base", target);
		}

		///<summary>Send a raw command to the vacuum cleaner.</summary>
		///<param name="target">The target for this service call</param>
		public void SendCommand(ServiceTarget target, VacuumSendCommandParameters data)
		{
			_haContext.CallService("vacuum", "send_command", target, data);
		}

		///<summary>Send a raw command to the vacuum cleaner.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="command">Command to execute. eg: set_dnd_timer</param>
		///<param name="params">Parameters for the command. eg: { "key": "value" }</param>
		public void SendCommand(ServiceTarget target, string @command, object? @params = null)
		{
			_haContext.CallService("vacuum", "send_command", target, new VacuumSendCommandParameters{Command = @command, Params = @params});
		}

		///<summary>Set the fan speed of the vacuum cleaner.</summary>
		///<param name="target">The target for this service call</param>
		public void SetFanSpeed(ServiceTarget target, VacuumSetFanSpeedParameters data)
		{
			_haContext.CallService("vacuum", "set_fan_speed", target, data);
		}

		///<summary>Set the fan speed of the vacuum cleaner.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="fanSpeed">Platform dependent vacuum cleaner fan speed, with speed steps, like 'medium' or by percentage, between 0 and 100. eg: low</param>
		public void SetFanSpeed(ServiceTarget target, string @fanSpeed)
		{
			_haContext.CallService("vacuum", "set_fan_speed", target, new VacuumSetFanSpeedParameters{FanSpeed = @fanSpeed});
		}

		///<summary>Start or resume the cleaning task.</summary>
		///<param name="target">The target for this service call</param>
		public void Start(ServiceTarget target)
		{
			_haContext.CallService("vacuum", "start", target);
		}

		///<summary>Start, pause, or resume the cleaning task.</summary>
		///<param name="target">The target for this service call</param>
		public void StartPause(ServiceTarget target)
		{
			_haContext.CallService("vacuum", "start_pause", target);
		}

		///<summary>Stop the current cleaning task.</summary>
		///<param name="target">The target for this service call</param>
		public void Stop(ServiceTarget target)
		{
			_haContext.CallService("vacuum", "stop", target);
		}

		public void Toggle()
		{
			_haContext.CallService("vacuum", "toggle", null);
		}

		///<summary>Stop the current cleaning task and return to home.</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOff(ServiceTarget target)
		{
			_haContext.CallService("vacuum", "turn_off", target);
		}

		///<summary>Start a new cleaning task.</summary>
		///<param name="target">The target for this service call</param>
		public void TurnOn(ServiceTarget target)
		{
			_haContext.CallService("vacuum", "turn_on", target);
		}
	}

	public record VacuumSendCommandParameters
	{
		///<summary>Command to execute. eg: set_dnd_timer</summary>
		[JsonPropertyName("command")]
		public string? Command { get; init; }

		///<summary>Parameters for the command. eg: { "key": "value" }</summary>
		[JsonPropertyName("params")]
		public object? Params { get; init; }
	}

	public record VacuumSetFanSpeedParameters
	{
		///<summary>Platform dependent vacuum cleaner fan speed, with speed steps, like 'medium' or by percentage, between 0 and 100. eg: low</summary>
		[JsonPropertyName("fan_speed")]
		public string? FanSpeed { get; init; }
	}

	public class WaterHeaterServices
	{
		private readonly IHaContext _haContext;
		public WaterHeaterServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Turn away mode on/off for water_heater device.</summary>
		///<param name="target">The target for this service call</param>
		public void SetAwayMode(ServiceTarget target, WaterHeaterSetAwayModeParameters data)
		{
			_haContext.CallService("water_heater", "set_away_mode", target, data);
		}

		///<summary>Turn away mode on/off for water_heater device.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="awayMode">New value of away mode.</param>
		public void SetAwayMode(ServiceTarget target, bool @awayMode)
		{
			_haContext.CallService("water_heater", "set_away_mode", target, new WaterHeaterSetAwayModeParameters{AwayMode = @awayMode});
		}

		///<summary>Set operation mode for water_heater device.</summary>
		///<param name="target">The target for this service call</param>
		public void SetOperationMode(ServiceTarget target, WaterHeaterSetOperationModeParameters data)
		{
			_haContext.CallService("water_heater", "set_operation_mode", target, data);
		}

		///<summary>Set operation mode for water_heater device.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="operationMode">New value of operation mode. eg: eco</param>
		public void SetOperationMode(ServiceTarget target, string @operationMode)
		{
			_haContext.CallService("water_heater", "set_operation_mode", target, new WaterHeaterSetOperationModeParameters{OperationMode = @operationMode});
		}

		///<summary>Set target temperature of water_heater device.</summary>
		///<param name="target">The target for this service call</param>
		public void SetTemperature(ServiceTarget target, WaterHeaterSetTemperatureParameters data)
		{
			_haContext.CallService("water_heater", "set_temperature", target, data);
		}

		///<summary>Set target temperature of water_heater device.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="temperature">New target temperature for water heater.</param>
		///<param name="operationMode">New value of operation mode. eg: eco</param>
		public void SetTemperature(ServiceTarget target, double @temperature, string? @operationMode = null)
		{
			_haContext.CallService("water_heater", "set_temperature", target, new WaterHeaterSetTemperatureParameters{Temperature = @temperature, OperationMode = @operationMode});
		}

		public void TurnOff()
		{
			_haContext.CallService("water_heater", "turn_off", null);
		}

		public void TurnOn()
		{
			_haContext.CallService("water_heater", "turn_on", null);
		}
	}

	public record WaterHeaterSetAwayModeParameters
	{
		///<summary>New value of away mode.</summary>
		[JsonPropertyName("away_mode")]
		public bool? AwayMode { get; init; }
	}

	public record WaterHeaterSetOperationModeParameters
	{
		///<summary>New value of operation mode. eg: eco</summary>
		[JsonPropertyName("operation_mode")]
		public string? OperationMode { get; init; }
	}

	public record WaterHeaterSetTemperatureParameters
	{
		///<summary>New target temperature for water heater.</summary>
		[JsonPropertyName("temperature")]
		public double? Temperature { get; init; }

		///<summary>New value of operation mode. eg: eco</summary>
		[JsonPropertyName("operation_mode")]
		public string? OperationMode { get; init; }
	}

	public class ZoneServices
	{
		private readonly IHaContext _haContext;
		public ZoneServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Reload the YAML-based zone configuration.</summary>
		public void Reload()
		{
			_haContext.CallService("zone", "reload", null);
		}
	}

	public class ZwaveJsServices
	{
		private readonly IHaContext _haContext;
		public ZwaveJsServices(IHaContext haContext)
		{
			_haContext = haContext;
		}

		///<summary>Allow for bulk setting partial parameters. Useful when multiple partial parameters have to be set at the same time.</summary>
		///<param name="target">The target for this service call</param>
		public void BulkSetPartialConfigParameters(ServiceTarget target, ZwaveJsBulkSetPartialConfigParametersParameters data)
		{
			_haContext.CallService("zwave_js", "bulk_set_partial_config_parameters", target, data);
		}

		///<summary>Allow for bulk setting partial parameters. Useful when multiple partial parameters have to be set at the same time.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="parameter">The id of the configuration parameter you want to configure. eg: 9</param>
		///<param name="value">The new value(s) to set for this configuration parameter. Can either be a raw integer value to represent the bulk change or a mapping where the key is the bitmask (either in hex or integer form) and the value is the new value you want to set for that partial parameter. eg: {"0x1":1,"0x10":1,"0x20":1,"0x40":1}</param>
		public void BulkSetPartialConfigParameters(ServiceTarget target, string @parameter, object @value)
		{
			_haContext.CallService("zwave_js", "bulk_set_partial_config_parameters", target, new ZwaveJsBulkSetPartialConfigParametersParameters{Parameter = @parameter, Value = @value});
		}

		///<summary>Allows for calling a Command Class API on a node. Some Command Classes can't be fully controlled via the `set_value` service and require direct calls to the Command Class API.</summary>
		///<param name="target">The target for this service call</param>
		public void InvokeCcApi(ServiceTarget target, ZwaveJsInvokeCcApiParameters data)
		{
			_haContext.CallService("zwave_js", "invoke_cc_api", target, data);
		}

		///<summary>Allows for calling a Command Class API on a node. Some Command Classes can't be fully controlled via the `set_value` service and require direct calls to the Command Class API.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="commandClass">The ID of the command class that you want to issue a command to. eg: 132</param>
		///<param name="endpoint">The endpoint to call the API on. If an endpoint is specified, that endpoint will be targeted for all nodes associated with the target areas, devices, and/or entities. If an endpoint is not specified, the root endpoint (0) will be targeted for nodes associated with target areas and devices, and the endpoint for the primary value of each entity will be targeted. eg: 1</param>
		///<param name="methodName">The name of the API method to call. Refer to the Z-Wave JS Command Class API documentation (https://zwave-js.github.io/node-zwave-js/#/api/CCs/index) for available methods. eg: setInterval</param>
		///<param name="parameters">A list of parameters to pass to the API method. Refer to the Z-Wave JS Command Class API documentation (https://zwave-js.github.io/node-zwave-js/#/api/CCs/index) for parameters. eg: [1,1]</param>
		public void InvokeCcApi(ServiceTarget target, string @commandClass, string @methodName, object @parameters, string? @endpoint = null)
		{
			_haContext.CallService("zwave_js", "invoke_cc_api", target, new ZwaveJsInvokeCcApiParameters{CommandClass = @commandClass, Endpoint = @endpoint, MethodName = @methodName, Parameters = @parameters});
		}

		///<summary>Allow for changing any value that Z-Wave JS recognizes on multiple Z-Wave devices using multicast, so all devices receive the message simultaneously. This service has minimal validation so only use this service if you know what you are doing.</summary>
		///<param name="target">The target for this service call</param>
		public void MulticastSetValue(ServiceTarget target, ZwaveJsMulticastSetValueParameters data)
		{
			_haContext.CallService("zwave_js", "multicast_set_value", target, data);
		}

		///<summary>Allow for changing any value that Z-Wave JS recognizes on multiple Z-Wave devices using multicast, so all devices receive the message simultaneously. This service has minimal validation so only use this service if you know what you are doing.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="broadcast">Whether command should be broadcast to all devices on the network. eg: True</param>
		///<param name="commandClass">The ID of the command class for the value. eg: 117</param>
		///<param name="endpoint">The endpoint for the value. eg: 1</param>
		///<param name="property">The ID of the property for the value. eg: currentValue</param>
		///<param name="propertyKey">The ID of the property key for the value eg: 1</param>
		///<param name="options">Set value options map. Refer to the Z-Wave JS documentation for more information on what options can be set.</param>
		///<param name="value">The new value to set. eg: ffbb99</param>
		public void MulticastSetValue(ServiceTarget target, string @commandClass, string @property, object @value, bool? @broadcast = null, string? @endpoint = null, string? @propertyKey = null, object? @options = null)
		{
			_haContext.CallService("zwave_js", "multicast_set_value", target, new ZwaveJsMulticastSetValueParameters{Broadcast = @broadcast, CommandClass = @commandClass, Endpoint = @endpoint, Property = @property, PropertyKey = @propertyKey, Options = @options, Value = @value});
		}

		///<summary>Forces Z-Wave JS to try to reach a node. This can be used to update the status of the node in Z-Wave JS when you think it doesn't accurately reflect reality, e.g. reviving a failed/dead node or marking the node as asleep.</summary>
		///<param name="target">The target for this service call</param>
		public void Ping(ServiceTarget target)
		{
			_haContext.CallService("zwave_js", "ping", target);
		}

		///<summary>Force update value(s) for a Z-Wave entity</summary>
		public void RefreshValue(ZwaveJsRefreshValueParameters data)
		{
			_haContext.CallService("zwave_js", "refresh_value", null, data);
		}

		///<summary>Force update value(s) for a Z-Wave entity</summary>
		///<param name="entityId">Entity whose value(s) should be refreshed eg: sensor.family_room_motion</param>
		///<param name="refreshAllValues">Whether to refresh all values (true) or just the primary value (false)</param>
		public void RefreshValue(string @entityId, bool? @refreshAllValues = null)
		{
			_haContext.CallService("zwave_js", "refresh_value", null, new ZwaveJsRefreshValueParameters{EntityId = @entityId, RefreshAllValues = @refreshAllValues});
		}

		///<summary>Resets the meter(s) on a node.</summary>
		///<param name="target">The target for this service call</param>
		public void ResetMeter(ServiceTarget target, ZwaveJsResetMeterParameters data)
		{
			_haContext.CallService("zwave_js", "reset_meter", target, data);
		}

		///<summary>Resets the meter(s) on a node.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="meterType">The type of meter to reset. Not all meters support the ability to pick a meter type to reset. eg: 1</param>
		///<param name="value">The value that meter(s) should be reset to. Not all meters support the ability to be reset to a specific value. eg: 5</param>
		public void ResetMeter(ServiceTarget target, string? @meterType = null, string? @value = null)
		{
			_haContext.CallService("zwave_js", "reset_meter", target, new ZwaveJsResetMeterParameters{MeterType = @meterType, Value = @value});
		}

		///<summary>Allow for changing configuration parameters of your Z-Wave devices.</summary>
		///<param name="target">The target for this service call</param>
		public void SetConfigParameter(ServiceTarget target, ZwaveJsSetConfigParameterParameters data)
		{
			_haContext.CallService("zwave_js", "set_config_parameter", target, data);
		}

		///<summary>Allow for changing configuration parameters of your Z-Wave devices.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="parameter">The (name or id of the) configuration parameter you want to configure. eg: Minimum brightness level</param>
		///<param name="value">The new value to set for this configuration parameter. eg: 5</param>
		///<param name="bitmask">Target a specific bitmask (see the documentation for more information).</param>
		public void SetConfigParameter(ServiceTarget target, string @parameter, string @value, string? @bitmask = null)
		{
			_haContext.CallService("zwave_js", "set_config_parameter", target, new ZwaveJsSetConfigParameterParameters{Parameter = @parameter, Value = @value, Bitmask = @bitmask});
		}

		///<summary>Allow for changing any value that Z-Wave JS recognizes on a Z-Wave device. This service has minimal validation so only use this service if you know what you are doing.</summary>
		///<param name="target">The target for this service call</param>
		public void SetValue(ServiceTarget target, ZwaveJsSetValueParameters data)
		{
			_haContext.CallService("zwave_js", "set_value", target, data);
		}

		///<summary>Allow for changing any value that Z-Wave JS recognizes on a Z-Wave device. This service has minimal validation so only use this service if you know what you are doing.</summary>
		///<param name="target">The target for this service call</param>
		///<param name="commandClass">The ID of the command class for the value. eg: 117</param>
		///<param name="endpoint">The endpoint for the value. eg: 1</param>
		///<param name="property">The ID of the property for the value. eg: currentValue</param>
		///<param name="propertyKey">The ID of the property key for the value eg: 1</param>
		///<param name="value">The new value to set. eg: ffbb99</param>
		///<param name="options">Set value options map. Refer to the Z-Wave JS documentation for more information on what options can be set.</param>
		///<param name="waitForResult">Whether or not to wait for a response from the node. If not included in the payload, the integration will decide whether to wait or not. If set to `true`, note that the service call can take a while if setting a value on an asleep battery device.</param>
		public void SetValue(ServiceTarget target, string @commandClass, string @property, object @value, string? @endpoint = null, string? @propertyKey = null, object? @options = null, bool? @waitForResult = null)
		{
			_haContext.CallService("zwave_js", "set_value", target, new ZwaveJsSetValueParameters{CommandClass = @commandClass, Endpoint = @endpoint, Property = @property, PropertyKey = @propertyKey, Value = @value, Options = @options, WaitForResult = @waitForResult});
		}
	}

	public record ZwaveJsBulkSetPartialConfigParametersParameters
	{
		///<summary>The id of the configuration parameter you want to configure. eg: 9</summary>
		[JsonPropertyName("parameter")]
		public string? Parameter { get; init; }

		///<summary>The new value(s) to set for this configuration parameter. Can either be a raw integer value to represent the bulk change or a mapping where the key is the bitmask (either in hex or integer form) and the value is the new value you want to set for that partial parameter. eg: {"0x1":1,"0x10":1,"0x20":1,"0x40":1}</summary>
		[JsonPropertyName("value")]
		public object? Value { get; init; }
	}

	public record ZwaveJsInvokeCcApiParameters
	{
		///<summary>The ID of the command class that you want to issue a command to. eg: 132</summary>
		[JsonPropertyName("command_class")]
		public string? CommandClass { get; init; }

		///<summary>The endpoint to call the API on. If an endpoint is specified, that endpoint will be targeted for all nodes associated with the target areas, devices, and/or entities. If an endpoint is not specified, the root endpoint (0) will be targeted for nodes associated with target areas and devices, and the endpoint for the primary value of each entity will be targeted. eg: 1</summary>
		[JsonPropertyName("endpoint")]
		public string? Endpoint { get; init; }

		///<summary>The name of the API method to call. Refer to the Z-Wave JS Command Class API documentation (https://zwave-js.github.io/node-zwave-js/#/api/CCs/index) for available methods. eg: setInterval</summary>
		[JsonPropertyName("method_name")]
		public string? MethodName { get; init; }

		///<summary>A list of parameters to pass to the API method. Refer to the Z-Wave JS Command Class API documentation (https://zwave-js.github.io/node-zwave-js/#/api/CCs/index) for parameters. eg: [1,1]</summary>
		[JsonPropertyName("parameters")]
		public object? Parameters { get; init; }
	}

	public record ZwaveJsMulticastSetValueParameters
	{
		///<summary>Whether command should be broadcast to all devices on the network. eg: True</summary>
		[JsonPropertyName("broadcast")]
		public bool? Broadcast { get; init; }

		///<summary>The ID of the command class for the value. eg: 117</summary>
		[JsonPropertyName("command_class")]
		public string? CommandClass { get; init; }

		///<summary>The endpoint for the value. eg: 1</summary>
		[JsonPropertyName("endpoint")]
		public string? Endpoint { get; init; }

		///<summary>The ID of the property for the value. eg: currentValue</summary>
		[JsonPropertyName("property")]
		public string? Property { get; init; }

		///<summary>The ID of the property key for the value eg: 1</summary>
		[JsonPropertyName("property_key")]
		public string? PropertyKey { get; init; }

		///<summary>Set value options map. Refer to the Z-Wave JS documentation for more information on what options can be set.</summary>
		[JsonPropertyName("options")]
		public object? Options { get; init; }

		///<summary>The new value to set. eg: ffbb99</summary>
		[JsonPropertyName("value")]
		public object? Value { get; init; }
	}

	public record ZwaveJsRefreshValueParameters
	{
		///<summary>Entity whose value(s) should be refreshed eg: sensor.family_room_motion</summary>
		[JsonPropertyName("entity_id")]
		public string? EntityId { get; init; }

		///<summary>Whether to refresh all values (true) or just the primary value (false)</summary>
		[JsonPropertyName("refresh_all_values")]
		public bool? RefreshAllValues { get; init; }
	}

	public record ZwaveJsResetMeterParameters
	{
		///<summary>The type of meter to reset. Not all meters support the ability to pick a meter type to reset. eg: 1</summary>
		[JsonPropertyName("meter_type")]
		public string? MeterType { get; init; }

		///<summary>The value that meter(s) should be reset to. Not all meters support the ability to be reset to a specific value. eg: 5</summary>
		[JsonPropertyName("value")]
		public string? Value { get; init; }
	}

	public record ZwaveJsSetConfigParameterParameters
	{
		///<summary>The (name or id of the) configuration parameter you want to configure. eg: Minimum brightness level</summary>
		[JsonPropertyName("parameter")]
		public string? Parameter { get; init; }

		///<summary>The new value to set for this configuration parameter. eg: 5</summary>
		[JsonPropertyName("value")]
		public string? Value { get; init; }

		///<summary>Target a specific bitmask (see the documentation for more information).</summary>
		[JsonPropertyName("bitmask")]
		public string? Bitmask { get; init; }
	}

	public record ZwaveJsSetValueParameters
	{
		///<summary>The ID of the command class for the value. eg: 117</summary>
		[JsonPropertyName("command_class")]
		public string? CommandClass { get; init; }

		///<summary>The endpoint for the value. eg: 1</summary>
		[JsonPropertyName("endpoint")]
		public string? Endpoint { get; init; }

		///<summary>The ID of the property for the value. eg: currentValue</summary>
		[JsonPropertyName("property")]
		public string? Property { get; init; }

		///<summary>The ID of the property key for the value eg: 1</summary>
		[JsonPropertyName("property_key")]
		public string? PropertyKey { get; init; }

		///<summary>The new value to set. eg: ffbb99</summary>
		[JsonPropertyName("value")]
		public object? Value { get; init; }

		///<summary>Set value options map. Refer to the Z-Wave JS documentation for more information on what options can be set.</summary>
		[JsonPropertyName("options")]
		public object? Options { get; init; }

		///<summary>Whether or not to wait for a response from the node. If not included in the payload, the integration will decide whether to wait or not. If set to `true`, note that the service call can take a while if setting a value on an asleep battery device.</summary>
		[JsonPropertyName("wait_for_result")]
		public bool? WaitForResult { get; init; }
	}

	public static class AlarmControlPanelEntityExtensionMethods
	{
		///<summary>Send the alarm the command for arm away.</summary>
		public static void AlarmArmAway(this AlarmControlPanelEntity target, AlarmControlPanelAlarmArmAwayParameters data)
		{
			target.CallService("alarm_arm_away", data);
		}

		///<summary>Send the alarm the command for arm away.</summary>
		public static void AlarmArmAway(this IEnumerable<AlarmControlPanelEntity> target, AlarmControlPanelAlarmArmAwayParameters data)
		{
			target.CallService("alarm_arm_away", data);
		}

		///<summary>Send the alarm the command for arm away.</summary>
		///<param name="target">The AlarmControlPanelEntity to call this service for</param>
		///<param name="code">An optional code to arm away the alarm control panel with. eg: 1234</param>
		public static void AlarmArmAway(this AlarmControlPanelEntity target, string? @code = null)
		{
			target.CallService("alarm_arm_away", new AlarmControlPanelAlarmArmAwayParameters{Code = @code});
		}

		///<summary>Send the alarm the command for arm away.</summary>
		///<param name="target">The IEnumerable<AlarmControlPanelEntity> to call this service for</param>
		///<param name="code">An optional code to arm away the alarm control panel with. eg: 1234</param>
		public static void AlarmArmAway(this IEnumerable<AlarmControlPanelEntity> target, string? @code = null)
		{
			target.CallService("alarm_arm_away", new AlarmControlPanelAlarmArmAwayParameters{Code = @code});
		}

		///<summary>Send arm custom bypass command.</summary>
		public static void AlarmArmCustomBypass(this AlarmControlPanelEntity target, AlarmControlPanelAlarmArmCustomBypassParameters data)
		{
			target.CallService("alarm_arm_custom_bypass", data);
		}

		///<summary>Send arm custom bypass command.</summary>
		public static void AlarmArmCustomBypass(this IEnumerable<AlarmControlPanelEntity> target, AlarmControlPanelAlarmArmCustomBypassParameters data)
		{
			target.CallService("alarm_arm_custom_bypass", data);
		}

		///<summary>Send arm custom bypass command.</summary>
		///<param name="target">The AlarmControlPanelEntity to call this service for</param>
		///<param name="code">An optional code to arm custom bypass the alarm control panel with. eg: 1234</param>
		public static void AlarmArmCustomBypass(this AlarmControlPanelEntity target, string? @code = null)
		{
			target.CallService("alarm_arm_custom_bypass", new AlarmControlPanelAlarmArmCustomBypassParameters{Code = @code});
		}

		///<summary>Send arm custom bypass command.</summary>
		///<param name="target">The IEnumerable<AlarmControlPanelEntity> to call this service for</param>
		///<param name="code">An optional code to arm custom bypass the alarm control panel with. eg: 1234</param>
		public static void AlarmArmCustomBypass(this IEnumerable<AlarmControlPanelEntity> target, string? @code = null)
		{
			target.CallService("alarm_arm_custom_bypass", new AlarmControlPanelAlarmArmCustomBypassParameters{Code = @code});
		}

		///<summary>Send the alarm the command for arm home.</summary>
		public static void AlarmArmHome(this AlarmControlPanelEntity target, AlarmControlPanelAlarmArmHomeParameters data)
		{
			target.CallService("alarm_arm_home", data);
		}

		///<summary>Send the alarm the command for arm home.</summary>
		public static void AlarmArmHome(this IEnumerable<AlarmControlPanelEntity> target, AlarmControlPanelAlarmArmHomeParameters data)
		{
			target.CallService("alarm_arm_home", data);
		}

		///<summary>Send the alarm the command for arm home.</summary>
		///<param name="target">The AlarmControlPanelEntity to call this service for</param>
		///<param name="code">An optional code to arm home the alarm control panel with. eg: 1234</param>
		public static void AlarmArmHome(this AlarmControlPanelEntity target, string? @code = null)
		{
			target.CallService("alarm_arm_home", new AlarmControlPanelAlarmArmHomeParameters{Code = @code});
		}

		///<summary>Send the alarm the command for arm home.</summary>
		///<param name="target">The IEnumerable<AlarmControlPanelEntity> to call this service for</param>
		///<param name="code">An optional code to arm home the alarm control panel with. eg: 1234</param>
		public static void AlarmArmHome(this IEnumerable<AlarmControlPanelEntity> target, string? @code = null)
		{
			target.CallService("alarm_arm_home", new AlarmControlPanelAlarmArmHomeParameters{Code = @code});
		}

		///<summary>Send the alarm the command for arm night.</summary>
		public static void AlarmArmNight(this AlarmControlPanelEntity target, AlarmControlPanelAlarmArmNightParameters data)
		{
			target.CallService("alarm_arm_night", data);
		}

		///<summary>Send the alarm the command for arm night.</summary>
		public static void AlarmArmNight(this IEnumerable<AlarmControlPanelEntity> target, AlarmControlPanelAlarmArmNightParameters data)
		{
			target.CallService("alarm_arm_night", data);
		}

		///<summary>Send the alarm the command for arm night.</summary>
		///<param name="target">The AlarmControlPanelEntity to call this service for</param>
		///<param name="code">An optional code to arm night the alarm control panel with. eg: 1234</param>
		public static void AlarmArmNight(this AlarmControlPanelEntity target, string? @code = null)
		{
			target.CallService("alarm_arm_night", new AlarmControlPanelAlarmArmNightParameters{Code = @code});
		}

		///<summary>Send the alarm the command for arm night.</summary>
		///<param name="target">The IEnumerable<AlarmControlPanelEntity> to call this service for</param>
		///<param name="code">An optional code to arm night the alarm control panel with. eg: 1234</param>
		public static void AlarmArmNight(this IEnumerable<AlarmControlPanelEntity> target, string? @code = null)
		{
			target.CallService("alarm_arm_night", new AlarmControlPanelAlarmArmNightParameters{Code = @code});
		}

		///<summary>Send the alarm the command for arm vacation.</summary>
		public static void AlarmArmVacation(this AlarmControlPanelEntity target, AlarmControlPanelAlarmArmVacationParameters data)
		{
			target.CallService("alarm_arm_vacation", data);
		}

		///<summary>Send the alarm the command for arm vacation.</summary>
		public static void AlarmArmVacation(this IEnumerable<AlarmControlPanelEntity> target, AlarmControlPanelAlarmArmVacationParameters data)
		{
			target.CallService("alarm_arm_vacation", data);
		}

		///<summary>Send the alarm the command for arm vacation.</summary>
		///<param name="target">The AlarmControlPanelEntity to call this service for</param>
		///<param name="code">An optional code to arm vacation the alarm control panel with. eg: 1234</param>
		public static void AlarmArmVacation(this AlarmControlPanelEntity target, string? @code = null)
		{
			target.CallService("alarm_arm_vacation", new AlarmControlPanelAlarmArmVacationParameters{Code = @code});
		}

		///<summary>Send the alarm the command for arm vacation.</summary>
		///<param name="target">The IEnumerable<AlarmControlPanelEntity> to call this service for</param>
		///<param name="code">An optional code to arm vacation the alarm control panel with. eg: 1234</param>
		public static void AlarmArmVacation(this IEnumerable<AlarmControlPanelEntity> target, string? @code = null)
		{
			target.CallService("alarm_arm_vacation", new AlarmControlPanelAlarmArmVacationParameters{Code = @code});
		}

		///<summary>Send the alarm the command for disarm.</summary>
		public static void AlarmDisarm(this AlarmControlPanelEntity target, AlarmControlPanelAlarmDisarmParameters data)
		{
			target.CallService("alarm_disarm", data);
		}

		///<summary>Send the alarm the command for disarm.</summary>
		public static void AlarmDisarm(this IEnumerable<AlarmControlPanelEntity> target, AlarmControlPanelAlarmDisarmParameters data)
		{
			target.CallService("alarm_disarm", data);
		}

		///<summary>Send the alarm the command for disarm.</summary>
		///<param name="target">The AlarmControlPanelEntity to call this service for</param>
		///<param name="code">An optional code to disarm the alarm control panel with. eg: 1234</param>
		public static void AlarmDisarm(this AlarmControlPanelEntity target, string? @code = null)
		{
			target.CallService("alarm_disarm", new AlarmControlPanelAlarmDisarmParameters{Code = @code});
		}

		///<summary>Send the alarm the command for disarm.</summary>
		///<param name="target">The IEnumerable<AlarmControlPanelEntity> to call this service for</param>
		///<param name="code">An optional code to disarm the alarm control panel with. eg: 1234</param>
		public static void AlarmDisarm(this IEnumerable<AlarmControlPanelEntity> target, string? @code = null)
		{
			target.CallService("alarm_disarm", new AlarmControlPanelAlarmDisarmParameters{Code = @code});
		}

		///<summary>Send the alarm the command for trigger.</summary>
		public static void AlarmTrigger(this AlarmControlPanelEntity target, AlarmControlPanelAlarmTriggerParameters data)
		{
			target.CallService("alarm_trigger", data);
		}

		///<summary>Send the alarm the command for trigger.</summary>
		public static void AlarmTrigger(this IEnumerable<AlarmControlPanelEntity> target, AlarmControlPanelAlarmTriggerParameters data)
		{
			target.CallService("alarm_trigger", data);
		}

		///<summary>Send the alarm the command for trigger.</summary>
		///<param name="target">The AlarmControlPanelEntity to call this service for</param>
		///<param name="code">An optional code to trigger the alarm control panel with. eg: 1234</param>
		public static void AlarmTrigger(this AlarmControlPanelEntity target, string? @code = null)
		{
			target.CallService("alarm_trigger", new AlarmControlPanelAlarmTriggerParameters{Code = @code});
		}

		///<summary>Send the alarm the command for trigger.</summary>
		///<param name="target">The IEnumerable<AlarmControlPanelEntity> to call this service for</param>
		///<param name="code">An optional code to trigger the alarm control panel with. eg: 1234</param>
		public static void AlarmTrigger(this IEnumerable<AlarmControlPanelEntity> target, string? @code = null)
		{
			target.CallService("alarm_trigger", new AlarmControlPanelAlarmTriggerParameters{Code = @code});
		}
	}

	public static class AlertEntityExtensionMethods
	{
		///<summary>Toggle alert's notifications.</summary>
		public static void Toggle(this AlertEntity target)
		{
			target.CallService("toggle");
		}

		///<summary>Toggle alert's notifications.</summary>
		public static void Toggle(this IEnumerable<AlertEntity> target)
		{
			target.CallService("toggle");
		}

		///<summary>Silence alert's notifications.</summary>
		public static void TurnOff(this AlertEntity target)
		{
			target.CallService("turn_off");
		}

		///<summary>Silence alert's notifications.</summary>
		public static void TurnOff(this IEnumerable<AlertEntity> target)
		{
			target.CallService("turn_off");
		}

		///<summary>Reset alert's notifications.</summary>
		public static void TurnOn(this AlertEntity target)
		{
			target.CallService("turn_on");
		}

		///<summary>Reset alert's notifications.</summary>
		public static void TurnOn(this IEnumerable<AlertEntity> target)
		{
			target.CallService("turn_on");
		}
	}

	public static class AndroidtvEntityExtensionMethods
	{
		///<summary>Send an ADB command to an Android TV / Fire TV device.</summary>
		public static void AdbCommand(this MediaPlayerEntity target, AndroidtvAdbCommandParameters data)
		{
			target.CallService("adb_command", data);
		}

		///<summary>Send an ADB command to an Android TV / Fire TV device.</summary>
		public static void AdbCommand(this IEnumerable<MediaPlayerEntity> target, AndroidtvAdbCommandParameters data)
		{
			target.CallService("adb_command", data);
		}

		///<summary>Send an ADB command to an Android TV / Fire TV device.</summary>
		///<param name="target">The MediaPlayerEntity to call this service for</param>
		///<param name="command">Either a key command or an ADB shell command. eg: HOME</param>
		public static void AdbCommand(this MediaPlayerEntity target, string @command)
		{
			target.CallService("adb_command", new AndroidtvAdbCommandParameters{Command = @command});
		}

		///<summary>Send an ADB command to an Android TV / Fire TV device.</summary>
		///<param name="target">The IEnumerable<MediaPlayerEntity> to call this service for</param>
		///<param name="command">Either a key command or an ADB shell command. eg: HOME</param>
		public static void AdbCommand(this IEnumerable<MediaPlayerEntity> target, string @command)
		{
			target.CallService("adb_command", new AndroidtvAdbCommandParameters{Command = @command});
		}

		///<summary>Download a file from your Android TV / Fire TV device to your Home Assistant instance.</summary>
		public static void Download(this MediaPlayerEntity target, AndroidtvDownloadParameters data)
		{
			target.CallService("download", data);
		}

		///<summary>Download a file from your Android TV / Fire TV device to your Home Assistant instance.</summary>
		public static void Download(this IEnumerable<MediaPlayerEntity> target, AndroidtvDownloadParameters data)
		{
			target.CallService("download", data);
		}

		///<summary>Download a file from your Android TV / Fire TV device to your Home Assistant instance.</summary>
		///<param name="target">The MediaPlayerEntity to call this service for</param>
		///<param name="devicePath">The filepath on the Android TV / Fire TV device. eg: /storage/emulated/0/Download/example.txt</param>
		///<param name="localPath">The filepath on your Home Assistant instance. eg: /config/www/example.txt</param>
		public static void Download(this MediaPlayerEntity target, string @devicePath, string @localPath)
		{
			target.CallService("download", new AndroidtvDownloadParameters{DevicePath = @devicePath, LocalPath = @localPath});
		}

		///<summary>Download a file from your Android TV / Fire TV device to your Home Assistant instance.</summary>
		///<param name="target">The IEnumerable<MediaPlayerEntity> to call this service for</param>
		///<param name="devicePath">The filepath on the Android TV / Fire TV device. eg: /storage/emulated/0/Download/example.txt</param>
		///<param name="localPath">The filepath on your Home Assistant instance. eg: /config/www/example.txt</param>
		public static void Download(this IEnumerable<MediaPlayerEntity> target, string @devicePath, string @localPath)
		{
			target.CallService("download", new AndroidtvDownloadParameters{DevicePath = @devicePath, LocalPath = @localPath});
		}

		///<summary>Translate a key press on a remote into ADB 'sendevent' commands.  You must press one button on the remote within 8 seconds of calling this service.</summary>
		public static void LearnSendevent(this MediaPlayerEntity target)
		{
			target.CallService("learn_sendevent");
		}

		///<summary>Translate a key press on a remote into ADB 'sendevent' commands.  You must press one button on the remote within 8 seconds of calling this service.</summary>
		public static void LearnSendevent(this IEnumerable<MediaPlayerEntity> target)
		{
			target.CallService("learn_sendevent");
		}

		///<summary>Upload a file from your Home Assistant instance to an Android TV / Fire TV device.</summary>
		public static void Upload(this MediaPlayerEntity target, AndroidtvUploadParameters data)
		{
			target.CallService("upload", data);
		}

		///<summary>Upload a file from your Home Assistant instance to an Android TV / Fire TV device.</summary>
		public static void Upload(this IEnumerable<MediaPlayerEntity> target, AndroidtvUploadParameters data)
		{
			target.CallService("upload", data);
		}

		///<summary>Upload a file from your Home Assistant instance to an Android TV / Fire TV device.</summary>
		///<param name="target">The MediaPlayerEntity to call this service for</param>
		///<param name="devicePath">The filepath on the Android TV / Fire TV device. eg: /storage/emulated/0/Download/example.txt</param>
		///<param name="localPath">The filepath on your Home Assistant instance. eg: /config/www/example.txt</param>
		public static void Upload(this MediaPlayerEntity target, string @devicePath, string @localPath)
		{
			target.CallService("upload", new AndroidtvUploadParameters{DevicePath = @devicePath, LocalPath = @localPath});
		}

		///<summary>Upload a file from your Home Assistant instance to an Android TV / Fire TV device.</summary>
		///<param name="target">The IEnumerable<MediaPlayerEntity> to call this service for</param>
		///<param name="devicePath">The filepath on the Android TV / Fire TV device. eg: /storage/emulated/0/Download/example.txt</param>
		///<param name="localPath">The filepath on your Home Assistant instance. eg: /config/www/example.txt</param>
		public static void Upload(this IEnumerable<MediaPlayerEntity> target, string @devicePath, string @localPath)
		{
			target.CallService("upload", new AndroidtvUploadParameters{DevicePath = @devicePath, LocalPath = @localPath});
		}
	}

	public static class AutomationEntityExtensionMethods
	{
		///<summary>Toggle (enable / disable) an automation.</summary>
		public static void Toggle(this AutomationEntity target)
		{
			target.CallService("toggle");
		}

		///<summary>Toggle (enable / disable) an automation.</summary>
		public static void Toggle(this IEnumerable<AutomationEntity> target)
		{
			target.CallService("toggle");
		}

		///<summary>Trigger the actions of an automation.</summary>
		public static void Trigger(this AutomationEntity target, AutomationTriggerParameters data)
		{
			target.CallService("trigger", data);
		}

		///<summary>Trigger the actions of an automation.</summary>
		public static void Trigger(this IEnumerable<AutomationEntity> target, AutomationTriggerParameters data)
		{
			target.CallService("trigger", data);
		}

		///<summary>Trigger the actions of an automation.</summary>
		///<param name="target">The AutomationEntity to call this service for</param>
		///<param name="skipCondition">Whether or not the conditions will be skipped.</param>
		public static void Trigger(this AutomationEntity target, bool? @skipCondition = null)
		{
			target.CallService("trigger", new AutomationTriggerParameters{SkipCondition = @skipCondition});
		}

		///<summary>Trigger the actions of an automation.</summary>
		///<param name="target">The IEnumerable<AutomationEntity> to call this service for</param>
		///<param name="skipCondition">Whether or not the conditions will be skipped.</param>
		public static void Trigger(this IEnumerable<AutomationEntity> target, bool? @skipCondition = null)
		{
			target.CallService("trigger", new AutomationTriggerParameters{SkipCondition = @skipCondition});
		}

		///<summary>Disable an automation.</summary>
		public static void TurnOff(this AutomationEntity target, AutomationTurnOffParameters data)
		{
			target.CallService("turn_off", data);
		}

		///<summary>Disable an automation.</summary>
		public static void TurnOff(this IEnumerable<AutomationEntity> target, AutomationTurnOffParameters data)
		{
			target.CallService("turn_off", data);
		}

		///<summary>Disable an automation.</summary>
		///<param name="target">The AutomationEntity to call this service for</param>
		///<param name="stopActions">Stop currently running actions.</param>
		public static void TurnOff(this AutomationEntity target, bool? @stopActions = null)
		{
			target.CallService("turn_off", new AutomationTurnOffParameters{StopActions = @stopActions});
		}

		///<summary>Disable an automation.</summary>
		///<param name="target">The IEnumerable<AutomationEntity> to call this service for</param>
		///<param name="stopActions">Stop currently running actions.</param>
		public static void TurnOff(this IEnumerable<AutomationEntity> target, bool? @stopActions = null)
		{
			target.CallService("turn_off", new AutomationTurnOffParameters{StopActions = @stopActions});
		}

		///<summary>Enable an automation.</summary>
		public static void TurnOn(this AutomationEntity target)
		{
			target.CallService("turn_on");
		}

		///<summary>Enable an automation.</summary>
		public static void TurnOn(this IEnumerable<AutomationEntity> target)
		{
			target.CallService("turn_on");
		}
	}

	public static class ButtonEntityExtensionMethods
	{
		///<summary>Press the button entity.</summary>
		public static void Press(this ButtonEntity target)
		{
			target.CallService("press");
		}

		///<summary>Press the button entity.</summary>
		public static void Press(this IEnumerable<ButtonEntity> target)
		{
			target.CallService("press");
		}
	}

	public static class CameraEntityExtensionMethods
	{
		///<summary>Disable the motion detection in a camera.</summary>
		public static void DisableMotionDetection(this CameraEntity target)
		{
			target.CallService("disable_motion_detection");
		}

		///<summary>Disable the motion detection in a camera.</summary>
		public static void DisableMotionDetection(this IEnumerable<CameraEntity> target)
		{
			target.CallService("disable_motion_detection");
		}

		///<summary>Enable the motion detection in a camera.</summary>
		public static void EnableMotionDetection(this CameraEntity target)
		{
			target.CallService("enable_motion_detection");
		}

		///<summary>Enable the motion detection in a camera.</summary>
		public static void EnableMotionDetection(this IEnumerable<CameraEntity> target)
		{
			target.CallService("enable_motion_detection");
		}

		///<summary>Play camera stream on supported media player.</summary>
		public static void PlayStream(this CameraEntity target, CameraPlayStreamParameters data)
		{
			target.CallService("play_stream", data);
		}

		///<summary>Play camera stream on supported media player.</summary>
		public static void PlayStream(this IEnumerable<CameraEntity> target, CameraPlayStreamParameters data)
		{
			target.CallService("play_stream", data);
		}

		///<summary>Play camera stream on supported media player.</summary>
		///<param name="target">The CameraEntity to call this service for</param>
		///<param name="mediaPlayer">Name(s) of media player to stream to.</param>
		///<param name="format">Stream format supported by media player.</param>
		public static void PlayStream(this CameraEntity target, string @mediaPlayer, object? @format = null)
		{
			target.CallService("play_stream", new CameraPlayStreamParameters{MediaPlayer = @mediaPlayer, Format = @format});
		}

		///<summary>Play camera stream on supported media player.</summary>
		///<param name="target">The IEnumerable<CameraEntity> to call this service for</param>
		///<param name="mediaPlayer">Name(s) of media player to stream to.</param>
		///<param name="format">Stream format supported by media player.</param>
		public static void PlayStream(this IEnumerable<CameraEntity> target, string @mediaPlayer, object? @format = null)
		{
			target.CallService("play_stream", new CameraPlayStreamParameters{MediaPlayer = @mediaPlayer, Format = @format});
		}

		///<summary>Record live camera feed.</summary>
		public static void Record(this CameraEntity target, CameraRecordParameters data)
		{
			target.CallService("record", data);
		}

		///<summary>Record live camera feed.</summary>
		public static void Record(this IEnumerable<CameraEntity> target, CameraRecordParameters data)
		{
			target.CallService("record", data);
		}

		///<summary>Record live camera feed.</summary>
		///<param name="target">The CameraEntity to call this service for</param>
		///<param name="filename">Template of a Filename. Variable is entity_id. Must be mp4. eg: /tmp/snapshot_{{ entity_id.name }}.mp4</param>
		///<param name="duration">Target recording length.</param>
		///<param name="lookback">Target lookback period to include in addition to duration. Only available if there is currently an active HLS stream.</param>
		public static void Record(this CameraEntity target, string @filename, long? @duration = null, long? @lookback = null)
		{
			target.CallService("record", new CameraRecordParameters{Filename = @filename, Duration = @duration, Lookback = @lookback});
		}

		///<summary>Record live camera feed.</summary>
		///<param name="target">The IEnumerable<CameraEntity> to call this service for</param>
		///<param name="filename">Template of a Filename. Variable is entity_id. Must be mp4. eg: /tmp/snapshot_{{ entity_id.name }}.mp4</param>
		///<param name="duration">Target recording length.</param>
		///<param name="lookback">Target lookback period to include in addition to duration. Only available if there is currently an active HLS stream.</param>
		public static void Record(this IEnumerable<CameraEntity> target, string @filename, long? @duration = null, long? @lookback = null)
		{
			target.CallService("record", new CameraRecordParameters{Filename = @filename, Duration = @duration, Lookback = @lookback});
		}

		///<summary>Take a snapshot from a camera.</summary>
		public static void Snapshot(this CameraEntity target, CameraSnapshotParameters data)
		{
			target.CallService("snapshot", data);
		}

		///<summary>Take a snapshot from a camera.</summary>
		public static void Snapshot(this IEnumerable<CameraEntity> target, CameraSnapshotParameters data)
		{
			target.CallService("snapshot", data);
		}

		///<summary>Take a snapshot from a camera.</summary>
		///<param name="target">The CameraEntity to call this service for</param>
		///<param name="filename">Template of a Filename. Variable is entity_id. eg: /tmp/snapshot_{{ entity_id.name }}.jpg</param>
		public static void Snapshot(this CameraEntity target, string @filename)
		{
			target.CallService("snapshot", new CameraSnapshotParameters{Filename = @filename});
		}

		///<summary>Take a snapshot from a camera.</summary>
		///<param name="target">The IEnumerable<CameraEntity> to call this service for</param>
		///<param name="filename">Template of a Filename. Variable is entity_id. eg: /tmp/snapshot_{{ entity_id.name }}.jpg</param>
		public static void Snapshot(this IEnumerable<CameraEntity> target, string @filename)
		{
			target.CallService("snapshot", new CameraSnapshotParameters{Filename = @filename});
		}

		///<summary>Turn off camera.</summary>
		public static void TurnOff(this CameraEntity target)
		{
			target.CallService("turn_off");
		}

		///<summary>Turn off camera.</summary>
		public static void TurnOff(this IEnumerable<CameraEntity> target)
		{
			target.CallService("turn_off");
		}

		///<summary>Turn on camera.</summary>
		public static void TurnOn(this CameraEntity target)
		{
			target.CallService("turn_on");
		}

		///<summary>Turn on camera.</summary>
		public static void TurnOn(this IEnumerable<CameraEntity> target)
		{
			target.CallService("turn_on");
		}
	}

	public static class ClimateEntityExtensionMethods
	{
		///<summary>Turn auxiliary heater on/off for climate device.</summary>
		public static void SetAuxHeat(this ClimateEntity target, ClimateSetAuxHeatParameters data)
		{
			target.CallService("set_aux_heat", data);
		}

		///<summary>Turn auxiliary heater on/off for climate device.</summary>
		public static void SetAuxHeat(this IEnumerable<ClimateEntity> target, ClimateSetAuxHeatParameters data)
		{
			target.CallService("set_aux_heat", data);
		}

		///<summary>Turn auxiliary heater on/off for climate device.</summary>
		///<param name="target">The ClimateEntity to call this service for</param>
		///<param name="auxHeat">New value of auxiliary heater.</param>
		public static void SetAuxHeat(this ClimateEntity target, bool @auxHeat)
		{
			target.CallService("set_aux_heat", new ClimateSetAuxHeatParameters{AuxHeat = @auxHeat});
		}

		///<summary>Turn auxiliary heater on/off for climate device.</summary>
		///<param name="target">The IEnumerable<ClimateEntity> to call this service for</param>
		///<param name="auxHeat">New value of auxiliary heater.</param>
		public static void SetAuxHeat(this IEnumerable<ClimateEntity> target, bool @auxHeat)
		{
			target.CallService("set_aux_heat", new ClimateSetAuxHeatParameters{AuxHeat = @auxHeat});
		}

		///<summary>Set fan operation for climate device.</summary>
		public static void SetFanMode(this ClimateEntity target, ClimateSetFanModeParameters data)
		{
			target.CallService("set_fan_mode", data);
		}

		///<summary>Set fan operation for climate device.</summary>
		public static void SetFanMode(this IEnumerable<ClimateEntity> target, ClimateSetFanModeParameters data)
		{
			target.CallService("set_fan_mode", data);
		}

		///<summary>Set fan operation for climate device.</summary>
		///<param name="target">The ClimateEntity to call this service for</param>
		///<param name="fanMode">New value of fan mode. eg: low</param>
		public static void SetFanMode(this ClimateEntity target, string @fanMode)
		{
			target.CallService("set_fan_mode", new ClimateSetFanModeParameters{FanMode = @fanMode});
		}

		///<summary>Set fan operation for climate device.</summary>
		///<param name="target">The IEnumerable<ClimateEntity> to call this service for</param>
		///<param name="fanMode">New value of fan mode. eg: low</param>
		public static void SetFanMode(this IEnumerable<ClimateEntity> target, string @fanMode)
		{
			target.CallService("set_fan_mode", new ClimateSetFanModeParameters{FanMode = @fanMode});
		}

		///<summary>Set target humidity of climate device.</summary>
		public static void SetHumidity(this ClimateEntity target, ClimateSetHumidityParameters data)
		{
			target.CallService("set_humidity", data);
		}

		///<summary>Set target humidity of climate device.</summary>
		public static void SetHumidity(this IEnumerable<ClimateEntity> target, ClimateSetHumidityParameters data)
		{
			target.CallService("set_humidity", data);
		}

		///<summary>Set target humidity of climate device.</summary>
		///<param name="target">The ClimateEntity to call this service for</param>
		///<param name="humidity">New target humidity for climate device.</param>
		public static void SetHumidity(this ClimateEntity target, long @humidity)
		{
			target.CallService("set_humidity", new ClimateSetHumidityParameters{Humidity = @humidity});
		}

		///<summary>Set target humidity of climate device.</summary>
		///<param name="target">The IEnumerable<ClimateEntity> to call this service for</param>
		///<param name="humidity">New target humidity for climate device.</param>
		public static void SetHumidity(this IEnumerable<ClimateEntity> target, long @humidity)
		{
			target.CallService("set_humidity", new ClimateSetHumidityParameters{Humidity = @humidity});
		}

		///<summary>Set HVAC operation mode for climate device.</summary>
		public static void SetHvacMode(this ClimateEntity target, ClimateSetHvacModeParameters data)
		{
			target.CallService("set_hvac_mode", data);
		}

		///<summary>Set HVAC operation mode for climate device.</summary>
		public static void SetHvacMode(this IEnumerable<ClimateEntity> target, ClimateSetHvacModeParameters data)
		{
			target.CallService("set_hvac_mode", data);
		}

		///<summary>Set HVAC operation mode for climate device.</summary>
		///<param name="target">The ClimateEntity to call this service for</param>
		///<param name="hvacMode">New value of operation mode.</param>
		public static void SetHvacMode(this ClimateEntity target, object? @hvacMode = null)
		{
			target.CallService("set_hvac_mode", new ClimateSetHvacModeParameters{HvacMode = @hvacMode});
		}

		///<summary>Set HVAC operation mode for climate device.</summary>
		///<param name="target">The IEnumerable<ClimateEntity> to call this service for</param>
		///<param name="hvacMode">New value of operation mode.</param>
		public static void SetHvacMode(this IEnumerable<ClimateEntity> target, object? @hvacMode = null)
		{
			target.CallService("set_hvac_mode", new ClimateSetHvacModeParameters{HvacMode = @hvacMode});
		}

		///<summary>Set preset mode for climate device.</summary>
		public static void SetPresetMode(this ClimateEntity target, ClimateSetPresetModeParameters data)
		{
			target.CallService("set_preset_mode", data);
		}

		///<summary>Set preset mode for climate device.</summary>
		public static void SetPresetMode(this IEnumerable<ClimateEntity> target, ClimateSetPresetModeParameters data)
		{
			target.CallService("set_preset_mode", data);
		}

		///<summary>Set preset mode for climate device.</summary>
		///<param name="target">The ClimateEntity to call this service for</param>
		///<param name="presetMode">New value of preset mode. eg: away</param>
		public static void SetPresetMode(this ClimateEntity target, string @presetMode)
		{
			target.CallService("set_preset_mode", new ClimateSetPresetModeParameters{PresetMode = @presetMode});
		}

		///<summary>Set preset mode for climate device.</summary>
		///<param name="target">The IEnumerable<ClimateEntity> to call this service for</param>
		///<param name="presetMode">New value of preset mode. eg: away</param>
		public static void SetPresetMode(this IEnumerable<ClimateEntity> target, string @presetMode)
		{
			target.CallService("set_preset_mode", new ClimateSetPresetModeParameters{PresetMode = @presetMode});
		}

		///<summary>Set swing operation for climate device.</summary>
		public static void SetSwingMode(this ClimateEntity target, ClimateSetSwingModeParameters data)
		{
			target.CallService("set_swing_mode", data);
		}

		///<summary>Set swing operation for climate device.</summary>
		public static void SetSwingMode(this IEnumerable<ClimateEntity> target, ClimateSetSwingModeParameters data)
		{
			target.CallService("set_swing_mode", data);
		}

		///<summary>Set swing operation for climate device.</summary>
		///<param name="target">The ClimateEntity to call this service for</param>
		///<param name="swingMode">New value of swing mode. eg: horizontal</param>
		public static void SetSwingMode(this ClimateEntity target, string @swingMode)
		{
			target.CallService("set_swing_mode", new ClimateSetSwingModeParameters{SwingMode = @swingMode});
		}

		///<summary>Set swing operation for climate device.</summary>
		///<param name="target">The IEnumerable<ClimateEntity> to call this service for</param>
		///<param name="swingMode">New value of swing mode. eg: horizontal</param>
		public static void SetSwingMode(this IEnumerable<ClimateEntity> target, string @swingMode)
		{
			target.CallService("set_swing_mode", new ClimateSetSwingModeParameters{SwingMode = @swingMode});
		}

		///<summary>Set target temperature of climate device.</summary>
		public static void SetTemperature(this ClimateEntity target, ClimateSetTemperatureParameters data)
		{
			target.CallService("set_temperature", data);
		}

		///<summary>Set target temperature of climate device.</summary>
		public static void SetTemperature(this IEnumerable<ClimateEntity> target, ClimateSetTemperatureParameters data)
		{
			target.CallService("set_temperature", data);
		}

		///<summary>Set target temperature of climate device.</summary>
		///<param name="target">The ClimateEntity to call this service for</param>
		///<param name="temperature">New target temperature for HVAC.</param>
		///<param name="targetTempHigh">New target high temperature for HVAC.</param>
		///<param name="targetTempLow">New target low temperature for HVAC.</param>
		///<param name="hvacMode">HVAC operation mode to set temperature to.</param>
		public static void SetTemperature(this ClimateEntity target, double? @temperature = null, double? @targetTempHigh = null, double? @targetTempLow = null, object? @hvacMode = null)
		{
			target.CallService("set_temperature", new ClimateSetTemperatureParameters{Temperature = @temperature, TargetTempHigh = @targetTempHigh, TargetTempLow = @targetTempLow, HvacMode = @hvacMode});
		}

		///<summary>Set target temperature of climate device.</summary>
		///<param name="target">The IEnumerable<ClimateEntity> to call this service for</param>
		///<param name="temperature">New target temperature for HVAC.</param>
		///<param name="targetTempHigh">New target high temperature for HVAC.</param>
		///<param name="targetTempLow">New target low temperature for HVAC.</param>
		///<param name="hvacMode">HVAC operation mode to set temperature to.</param>
		public static void SetTemperature(this IEnumerable<ClimateEntity> target, double? @temperature = null, double? @targetTempHigh = null, double? @targetTempLow = null, object? @hvacMode = null)
		{
			target.CallService("set_temperature", new ClimateSetTemperatureParameters{Temperature = @temperature, TargetTempHigh = @targetTempHigh, TargetTempLow = @targetTempLow, HvacMode = @hvacMode});
		}

		///<summary>Turn climate device off.</summary>
		public static void TurnOff(this ClimateEntity target)
		{
			target.CallService("turn_off");
		}

		///<summary>Turn climate device off.</summary>
		public static void TurnOff(this IEnumerable<ClimateEntity> target)
		{
			target.CallService("turn_off");
		}

		///<summary>Turn climate device on.</summary>
		public static void TurnOn(this ClimateEntity target)
		{
			target.CallService("turn_on");
		}

		///<summary>Turn climate device on.</summary>
		public static void TurnOn(this IEnumerable<ClimateEntity> target)
		{
			target.CallService("turn_on");
		}
	}

	public static class CounterEntityExtensionMethods
	{
		///<summary>Change counter parameters.</summary>
		public static void Configure(this CounterEntity target, CounterConfigureParameters data)
		{
			target.CallService("configure", data);
		}

		///<summary>Change counter parameters.</summary>
		public static void Configure(this IEnumerable<CounterEntity> target, CounterConfigureParameters data)
		{
			target.CallService("configure", data);
		}

		///<summary>Change counter parameters.</summary>
		///<param name="target">The CounterEntity to call this service for</param>
		///<param name="minimum">New minimum value for the counter or None to remove minimum.</param>
		///<param name="maximum">New maximum value for the counter or None to remove maximum.</param>
		///<param name="step">New value for step.</param>
		///<param name="initial">New value for initial.</param>
		///<param name="value">New state value.</param>
		public static void Configure(this CounterEntity target, long? @minimum = null, long? @maximum = null, long? @step = null, long? @initial = null, long? @value = null)
		{
			target.CallService("configure", new CounterConfigureParameters{Minimum = @minimum, Maximum = @maximum, Step = @step, Initial = @initial, Value = @value});
		}

		///<summary>Change counter parameters.</summary>
		///<param name="target">The IEnumerable<CounterEntity> to call this service for</param>
		///<param name="minimum">New minimum value for the counter or None to remove minimum.</param>
		///<param name="maximum">New maximum value for the counter or None to remove maximum.</param>
		///<param name="step">New value for step.</param>
		///<param name="initial">New value for initial.</param>
		///<param name="value">New state value.</param>
		public static void Configure(this IEnumerable<CounterEntity> target, long? @minimum = null, long? @maximum = null, long? @step = null, long? @initial = null, long? @value = null)
		{
			target.CallService("configure", new CounterConfigureParameters{Minimum = @minimum, Maximum = @maximum, Step = @step, Initial = @initial, Value = @value});
		}

		///<summary>Decrement a counter.</summary>
		public static void Decrement(this CounterEntity target)
		{
			target.CallService("decrement");
		}

		///<summary>Decrement a counter.</summary>
		public static void Decrement(this IEnumerable<CounterEntity> target)
		{
			target.CallService("decrement");
		}

		///<summary>Increment a counter.</summary>
		public static void Increment(this CounterEntity target)
		{
			target.CallService("increment");
		}

		///<summary>Increment a counter.</summary>
		public static void Increment(this IEnumerable<CounterEntity> target)
		{
			target.CallService("increment");
		}

		///<summary>Reset a counter.</summary>
		public static void Reset(this CounterEntity target)
		{
			target.CallService("reset");
		}

		///<summary>Reset a counter.</summary>
		public static void Reset(this IEnumerable<CounterEntity> target)
		{
			target.CallService("reset");
		}
	}

	public static class CoverEntityExtensionMethods
	{
		///<summary>Close all or specified cover.</summary>
		public static void CloseCover(this CoverEntity target)
		{
			target.CallService("close_cover");
		}

		///<summary>Close all or specified cover.</summary>
		public static void CloseCover(this IEnumerable<CoverEntity> target)
		{
			target.CallService("close_cover");
		}

		///<summary>Close all or specified cover tilt.</summary>
		public static void CloseCoverTilt(this CoverEntity target)
		{
			target.CallService("close_cover_tilt");
		}

		///<summary>Close all or specified cover tilt.</summary>
		public static void CloseCoverTilt(this IEnumerable<CoverEntity> target)
		{
			target.CallService("close_cover_tilt");
		}

		///<summary>Open all or specified cover.</summary>
		public static void OpenCover(this CoverEntity target)
		{
			target.CallService("open_cover");
		}

		///<summary>Open all or specified cover.</summary>
		public static void OpenCover(this IEnumerable<CoverEntity> target)
		{
			target.CallService("open_cover");
		}

		///<summary>Open all or specified cover tilt.</summary>
		public static void OpenCoverTilt(this CoverEntity target)
		{
			target.CallService("open_cover_tilt");
		}

		///<summary>Open all or specified cover tilt.</summary>
		public static void OpenCoverTilt(this IEnumerable<CoverEntity> target)
		{
			target.CallService("open_cover_tilt");
		}

		///<summary>Move to specific position all or specified cover.</summary>
		public static void SetCoverPosition(this CoverEntity target, CoverSetCoverPositionParameters data)
		{
			target.CallService("set_cover_position", data);
		}

		///<summary>Move to specific position all or specified cover.</summary>
		public static void SetCoverPosition(this IEnumerable<CoverEntity> target, CoverSetCoverPositionParameters data)
		{
			target.CallService("set_cover_position", data);
		}

		///<summary>Move to specific position all or specified cover.</summary>
		///<param name="target">The CoverEntity to call this service for</param>
		///<param name="position">Position of the cover</param>
		public static void SetCoverPosition(this CoverEntity target, long @position)
		{
			target.CallService("set_cover_position", new CoverSetCoverPositionParameters{Position = @position});
		}

		///<summary>Move to specific position all or specified cover.</summary>
		///<param name="target">The IEnumerable<CoverEntity> to call this service for</param>
		///<param name="position">Position of the cover</param>
		public static void SetCoverPosition(this IEnumerable<CoverEntity> target, long @position)
		{
			target.CallService("set_cover_position", new CoverSetCoverPositionParameters{Position = @position});
		}

		///<summary>Move to specific position all or specified cover tilt.</summary>
		public static void SetCoverTiltPosition(this CoverEntity target, CoverSetCoverTiltPositionParameters data)
		{
			target.CallService("set_cover_tilt_position", data);
		}

		///<summary>Move to specific position all or specified cover tilt.</summary>
		public static void SetCoverTiltPosition(this IEnumerable<CoverEntity> target, CoverSetCoverTiltPositionParameters data)
		{
			target.CallService("set_cover_tilt_position", data);
		}

		///<summary>Move to specific position all or specified cover tilt.</summary>
		///<param name="target">The CoverEntity to call this service for</param>
		///<param name="tiltPosition">Tilt position of the cover.</param>
		public static void SetCoverTiltPosition(this CoverEntity target, long @tiltPosition)
		{
			target.CallService("set_cover_tilt_position", new CoverSetCoverTiltPositionParameters{TiltPosition = @tiltPosition});
		}

		///<summary>Move to specific position all or specified cover tilt.</summary>
		///<param name="target">The IEnumerable<CoverEntity> to call this service for</param>
		///<param name="tiltPosition">Tilt position of the cover.</param>
		public static void SetCoverTiltPosition(this IEnumerable<CoverEntity> target, long @tiltPosition)
		{
			target.CallService("set_cover_tilt_position", new CoverSetCoverTiltPositionParameters{TiltPosition = @tiltPosition});
		}

		///<summary>Stop all or specified cover.</summary>
		public static void StopCover(this CoverEntity target)
		{
			target.CallService("stop_cover");
		}

		///<summary>Stop all or specified cover.</summary>
		public static void StopCover(this IEnumerable<CoverEntity> target)
		{
			target.CallService("stop_cover");
		}

		///<summary>Stop all or specified cover.</summary>
		public static void StopCoverTilt(this CoverEntity target)
		{
			target.CallService("stop_cover_tilt");
		}

		///<summary>Stop all or specified cover.</summary>
		public static void StopCoverTilt(this IEnumerable<CoverEntity> target)
		{
			target.CallService("stop_cover_tilt");
		}

		///<summary>Toggle a cover open/closed.</summary>
		public static void Toggle(this CoverEntity target)
		{
			target.CallService("toggle");
		}

		///<summary>Toggle a cover open/closed.</summary>
		public static void Toggle(this IEnumerable<CoverEntity> target)
		{
			target.CallService("toggle");
		}

		///<summary>Toggle a cover tilt open/closed.</summary>
		public static void ToggleCoverTilt(this CoverEntity target)
		{
			target.CallService("toggle_cover_tilt");
		}

		///<summary>Toggle a cover tilt open/closed.</summary>
		public static void ToggleCoverTilt(this IEnumerable<CoverEntity> target)
		{
			target.CallService("toggle_cover_tilt");
		}
	}

	public static class FanEntityExtensionMethods
	{
		///<summary>Decrease the speed of the fan by one speed or a percentage_step.</summary>
		public static void DecreaseSpeed(this FanEntity target, FanDecreaseSpeedParameters data)
		{
			target.CallService("decrease_speed", data);
		}

		///<summary>Decrease the speed of the fan by one speed or a percentage_step.</summary>
		public static void DecreaseSpeed(this IEnumerable<FanEntity> target, FanDecreaseSpeedParameters data)
		{
			target.CallService("decrease_speed", data);
		}

		///<summary>Decrease the speed of the fan by one speed or a percentage_step.</summary>
		///<param name="target">The FanEntity to call this service for</param>
		///<param name="percentageStep">Decrease speed by a percentage.</param>
		public static void DecreaseSpeed(this FanEntity target, long? @percentageStep = null)
		{
			target.CallService("decrease_speed", new FanDecreaseSpeedParameters{PercentageStep = @percentageStep});
		}

		///<summary>Decrease the speed of the fan by one speed or a percentage_step.</summary>
		///<param name="target">The IEnumerable<FanEntity> to call this service for</param>
		///<param name="percentageStep">Decrease speed by a percentage.</param>
		public static void DecreaseSpeed(this IEnumerable<FanEntity> target, long? @percentageStep = null)
		{
			target.CallService("decrease_speed", new FanDecreaseSpeedParameters{PercentageStep = @percentageStep});
		}

		///<summary>Increase the speed of the fan by one speed or a percentage_step.</summary>
		public static void IncreaseSpeed(this FanEntity target, FanIncreaseSpeedParameters data)
		{
			target.CallService("increase_speed", data);
		}

		///<summary>Increase the speed of the fan by one speed or a percentage_step.</summary>
		public static void IncreaseSpeed(this IEnumerable<FanEntity> target, FanIncreaseSpeedParameters data)
		{
			target.CallService("increase_speed", data);
		}

		///<summary>Increase the speed of the fan by one speed or a percentage_step.</summary>
		///<param name="target">The FanEntity to call this service for</param>
		///<param name="percentageStep">Increase speed by a percentage.</param>
		public static void IncreaseSpeed(this FanEntity target, long? @percentageStep = null)
		{
			target.CallService("increase_speed", new FanIncreaseSpeedParameters{PercentageStep = @percentageStep});
		}

		///<summary>Increase the speed of the fan by one speed or a percentage_step.</summary>
		///<param name="target">The IEnumerable<FanEntity> to call this service for</param>
		///<param name="percentageStep">Increase speed by a percentage.</param>
		public static void IncreaseSpeed(this IEnumerable<FanEntity> target, long? @percentageStep = null)
		{
			target.CallService("increase_speed", new FanIncreaseSpeedParameters{PercentageStep = @percentageStep});
		}

		///<summary>Oscillate the fan.</summary>
		public static void Oscillate(this FanEntity target, FanOscillateParameters data)
		{
			target.CallService("oscillate", data);
		}

		///<summary>Oscillate the fan.</summary>
		public static void Oscillate(this IEnumerable<FanEntity> target, FanOscillateParameters data)
		{
			target.CallService("oscillate", data);
		}

		///<summary>Oscillate the fan.</summary>
		///<param name="target">The FanEntity to call this service for</param>
		///<param name="oscillating">Flag to turn on/off oscillation.</param>
		public static void Oscillate(this FanEntity target, bool @oscillating)
		{
			target.CallService("oscillate", new FanOscillateParameters{Oscillating = @oscillating});
		}

		///<summary>Oscillate the fan.</summary>
		///<param name="target">The IEnumerable<FanEntity> to call this service for</param>
		///<param name="oscillating">Flag to turn on/off oscillation.</param>
		public static void Oscillate(this IEnumerable<FanEntity> target, bool @oscillating)
		{
			target.CallService("oscillate", new FanOscillateParameters{Oscillating = @oscillating});
		}

		///<summary>Set the fan rotation.</summary>
		public static void SetDirection(this FanEntity target, FanSetDirectionParameters data)
		{
			target.CallService("set_direction", data);
		}

		///<summary>Set the fan rotation.</summary>
		public static void SetDirection(this IEnumerable<FanEntity> target, FanSetDirectionParameters data)
		{
			target.CallService("set_direction", data);
		}

		///<summary>Set the fan rotation.</summary>
		///<param name="target">The FanEntity to call this service for</param>
		///<param name="direction">The direction to rotate.</param>
		public static void SetDirection(this FanEntity target, object @direction)
		{
			target.CallService("set_direction", new FanSetDirectionParameters{Direction = @direction});
		}

		///<summary>Set the fan rotation.</summary>
		///<param name="target">The IEnumerable<FanEntity> to call this service for</param>
		///<param name="direction">The direction to rotate.</param>
		public static void SetDirection(this IEnumerable<FanEntity> target, object @direction)
		{
			target.CallService("set_direction", new FanSetDirectionParameters{Direction = @direction});
		}

		///<summary>Set fan speed percentage.</summary>
		public static void SetPercentage(this FanEntity target, FanSetPercentageParameters data)
		{
			target.CallService("set_percentage", data);
		}

		///<summary>Set fan speed percentage.</summary>
		public static void SetPercentage(this IEnumerable<FanEntity> target, FanSetPercentageParameters data)
		{
			target.CallService("set_percentage", data);
		}

		///<summary>Set fan speed percentage.</summary>
		///<param name="target">The FanEntity to call this service for</param>
		///<param name="percentage">Percentage speed setting.</param>
		public static void SetPercentage(this FanEntity target, long @percentage)
		{
			target.CallService("set_percentage", new FanSetPercentageParameters{Percentage = @percentage});
		}

		///<summary>Set fan speed percentage.</summary>
		///<param name="target">The IEnumerable<FanEntity> to call this service for</param>
		///<param name="percentage">Percentage speed setting.</param>
		public static void SetPercentage(this IEnumerable<FanEntity> target, long @percentage)
		{
			target.CallService("set_percentage", new FanSetPercentageParameters{Percentage = @percentage});
		}

		///<summary>Set preset mode for a fan device.</summary>
		public static void SetPresetMode(this FanEntity target, FanSetPresetModeParameters data)
		{
			target.CallService("set_preset_mode", data);
		}

		///<summary>Set preset mode for a fan device.</summary>
		public static void SetPresetMode(this IEnumerable<FanEntity> target, FanSetPresetModeParameters data)
		{
			target.CallService("set_preset_mode", data);
		}

		///<summary>Set preset mode for a fan device.</summary>
		///<param name="target">The FanEntity to call this service for</param>
		///<param name="presetMode">New value of preset mode. eg: auto</param>
		public static void SetPresetMode(this FanEntity target, string @presetMode)
		{
			target.CallService("set_preset_mode", new FanSetPresetModeParameters{PresetMode = @presetMode});
		}

		///<summary>Set preset mode for a fan device.</summary>
		///<param name="target">The IEnumerable<FanEntity> to call this service for</param>
		///<param name="presetMode">New value of preset mode. eg: auto</param>
		public static void SetPresetMode(this IEnumerable<FanEntity> target, string @presetMode)
		{
			target.CallService("set_preset_mode", new FanSetPresetModeParameters{PresetMode = @presetMode});
		}

		///<summary>Toggle the fan on/off.</summary>
		public static void Toggle(this FanEntity target)
		{
			target.CallService("toggle");
		}

		///<summary>Toggle the fan on/off.</summary>
		public static void Toggle(this IEnumerable<FanEntity> target)
		{
			target.CallService("toggle");
		}

		///<summary>Turn fan off.</summary>
		public static void TurnOff(this FanEntity target)
		{
			target.CallService("turn_off");
		}

		///<summary>Turn fan off.</summary>
		public static void TurnOff(this IEnumerable<FanEntity> target)
		{
			target.CallService("turn_off");
		}

		///<summary>Turn fan on.</summary>
		public static void TurnOn(this FanEntity target, FanTurnOnParameters data)
		{
			target.CallService("turn_on", data);
		}

		///<summary>Turn fan on.</summary>
		public static void TurnOn(this IEnumerable<FanEntity> target, FanTurnOnParameters data)
		{
			target.CallService("turn_on", data);
		}

		///<summary>Turn fan on.</summary>
		///<param name="target">The FanEntity to call this service for</param>
		///<param name="speed">Speed setting. eg: high</param>
		///<param name="percentage">Percentage speed setting.</param>
		///<param name="presetMode">Preset mode setting. eg: auto</param>
		public static void TurnOn(this FanEntity target, string? @speed = null, long? @percentage = null, string? @presetMode = null)
		{
			target.CallService("turn_on", new FanTurnOnParameters{Speed = @speed, Percentage = @percentage, PresetMode = @presetMode});
		}

		///<summary>Turn fan on.</summary>
		///<param name="target">The IEnumerable<FanEntity> to call this service for</param>
		///<param name="speed">Speed setting. eg: high</param>
		///<param name="percentage">Percentage speed setting.</param>
		///<param name="presetMode">Preset mode setting. eg: auto</param>
		public static void TurnOn(this IEnumerable<FanEntity> target, string? @speed = null, long? @percentage = null, string? @presetMode = null)
		{
			target.CallService("turn_on", new FanTurnOnParameters{Speed = @speed, Percentage = @percentage, PresetMode = @presetMode});
		}
	}

	public static class HarmonyEntityExtensionMethods
	{
		///<summary>Sends change channel command to the Harmony HUB</summary>
		public static void ChangeChannel(this RemoteEntity target, HarmonyChangeChannelParameters data)
		{
			target.CallService("change_channel", data);
		}

		///<summary>Sends change channel command to the Harmony HUB</summary>
		public static void ChangeChannel(this IEnumerable<RemoteEntity> target, HarmonyChangeChannelParameters data)
		{
			target.CallService("change_channel", data);
		}

		///<summary>Sends change channel command to the Harmony HUB</summary>
		///<param name="target">The RemoteEntity to call this service for</param>
		///<param name="channel">Channel number to change to</param>
		public static void ChangeChannel(this RemoteEntity target, long @channel)
		{
			target.CallService("change_channel", new HarmonyChangeChannelParameters{Channel = @channel});
		}

		///<summary>Sends change channel command to the Harmony HUB</summary>
		///<param name="target">The IEnumerable<RemoteEntity> to call this service for</param>
		///<param name="channel">Channel number to change to</param>
		public static void ChangeChannel(this IEnumerable<RemoteEntity> target, long @channel)
		{
			target.CallService("change_channel", new HarmonyChangeChannelParameters{Channel = @channel});
		}

		///<summary>Syncs the remote's configuration.</summary>
		public static void Sync(this RemoteEntity target)
		{
			target.CallService("sync");
		}

		///<summary>Syncs the remote's configuration.</summary>
		public static void Sync(this IEnumerable<RemoteEntity> target)
		{
			target.CallService("sync");
		}
	}

	public static class InputBooleanEntityExtensionMethods
	{
		///<summary>Toggle an input boolean</summary>
		public static void Toggle(this InputBooleanEntity target)
		{
			target.CallService("toggle");
		}

		///<summary>Toggle an input boolean</summary>
		public static void Toggle(this IEnumerable<InputBooleanEntity> target)
		{
			target.CallService("toggle");
		}

		///<summary>Turn off an input boolean</summary>
		public static void TurnOff(this InputBooleanEntity target)
		{
			target.CallService("turn_off");
		}

		///<summary>Turn off an input boolean</summary>
		public static void TurnOff(this IEnumerable<InputBooleanEntity> target)
		{
			target.CallService("turn_off");
		}

		///<summary>Turn on an input boolean</summary>
		public static void TurnOn(this InputBooleanEntity target)
		{
			target.CallService("turn_on");
		}

		///<summary>Turn on an input boolean</summary>
		public static void TurnOn(this IEnumerable<InputBooleanEntity> target)
		{
			target.CallService("turn_on");
		}
	}

	public static class InputDatetimeEntityExtensionMethods
	{
		///<summary>This can be used to dynamically set the date and/or time.</summary>
		public static void SetDatetime(this InputDatetimeEntity target, InputDatetimeSetDatetimeParameters data)
		{
			target.CallService("set_datetime", data);
		}

		///<summary>This can be used to dynamically set the date and/or time.</summary>
		public static void SetDatetime(this IEnumerable<InputDatetimeEntity> target, InputDatetimeSetDatetimeParameters data)
		{
			target.CallService("set_datetime", data);
		}

		///<summary>This can be used to dynamically set the date and/or time.</summary>
		///<param name="target">The InputDatetimeEntity to call this service for</param>
		///<param name="date">The target date the entity should be set to. eg: "2019-04-20"</param>
		///<param name="time">The target time the entity should be set to. eg: "05:04:20"</param>
		///<param name="datetime">The target date & time the entity should be set to. eg: "2019-04-20 05:04:20"</param>
		///<param name="timestamp">The target date & time the entity should be set to as expressed by a UNIX timestamp.</param>
		public static void SetDatetime(this InputDatetimeEntity target, string? @date = null, DateTime? @time = null, string? @datetime = null, long? @timestamp = null)
		{
			target.CallService("set_datetime", new InputDatetimeSetDatetimeParameters{Date = @date, Time = @time, Datetime = @datetime, Timestamp = @timestamp});
		}

		///<summary>This can be used to dynamically set the date and/or time.</summary>
		///<param name="target">The IEnumerable<InputDatetimeEntity> to call this service for</param>
		///<param name="date">The target date the entity should be set to. eg: "2019-04-20"</param>
		///<param name="time">The target time the entity should be set to. eg: "05:04:20"</param>
		///<param name="datetime">The target date & time the entity should be set to. eg: "2019-04-20 05:04:20"</param>
		///<param name="timestamp">The target date & time the entity should be set to as expressed by a UNIX timestamp.</param>
		public static void SetDatetime(this IEnumerable<InputDatetimeEntity> target, string? @date = null, DateTime? @time = null, string? @datetime = null, long? @timestamp = null)
		{
			target.CallService("set_datetime", new InputDatetimeSetDatetimeParameters{Date = @date, Time = @time, Datetime = @datetime, Timestamp = @timestamp});
		}
	}

	public static class InputNumberEntityExtensionMethods
	{
		///<summary>Decrement the value of an input number entity by its stepping.</summary>
		public static void Decrement(this InputNumberEntity target)
		{
			target.CallService("decrement");
		}

		///<summary>Decrement the value of an input number entity by its stepping.</summary>
		public static void Decrement(this IEnumerable<InputNumberEntity> target)
		{
			target.CallService("decrement");
		}

		///<summary>Increment the value of an input number entity by its stepping.</summary>
		public static void Increment(this InputNumberEntity target)
		{
			target.CallService("increment");
		}

		///<summary>Increment the value of an input number entity by its stepping.</summary>
		public static void Increment(this IEnumerable<InputNumberEntity> target)
		{
			target.CallService("increment");
		}

		///<summary>Set the value of an input number entity.</summary>
		public static void SetValue(this InputNumberEntity target, InputNumberSetValueParameters data)
		{
			target.CallService("set_value", data);
		}

		///<summary>Set the value of an input number entity.</summary>
		public static void SetValue(this IEnumerable<InputNumberEntity> target, InputNumberSetValueParameters data)
		{
			target.CallService("set_value", data);
		}

		///<summary>Set the value of an input number entity.</summary>
		///<param name="target">The InputNumberEntity to call this service for</param>
		///<param name="value">The target value the entity should be set to.</param>
		public static void SetValue(this InputNumberEntity target, double @value)
		{
			target.CallService("set_value", new InputNumberSetValueParameters{Value = @value});
		}

		///<summary>Set the value of an input number entity.</summary>
		///<param name="target">The IEnumerable<InputNumberEntity> to call this service for</param>
		///<param name="value">The target value the entity should be set to.</param>
		public static void SetValue(this IEnumerable<InputNumberEntity> target, double @value)
		{
			target.CallService("set_value", new InputNumberSetValueParameters{Value = @value});
		}
	}

	public static class InputSelectEntityExtensionMethods
	{
		///<summary>Select the first option of an input select entity.</summary>
		public static void SelectFirst(this InputSelectEntity target)
		{
			target.CallService("select_first");
		}

		///<summary>Select the first option of an input select entity.</summary>
		public static void SelectFirst(this IEnumerable<InputSelectEntity> target)
		{
			target.CallService("select_first");
		}

		///<summary>Select the last option of an input select entity.</summary>
		public static void SelectLast(this InputSelectEntity target)
		{
			target.CallService("select_last");
		}

		///<summary>Select the last option of an input select entity.</summary>
		public static void SelectLast(this IEnumerable<InputSelectEntity> target)
		{
			target.CallService("select_last");
		}

		///<summary>Select the next options of an input select entity.</summary>
		public static void SelectNext(this InputSelectEntity target, InputSelectSelectNextParameters data)
		{
			target.CallService("select_next", data);
		}

		///<summary>Select the next options of an input select entity.</summary>
		public static void SelectNext(this IEnumerable<InputSelectEntity> target, InputSelectSelectNextParameters data)
		{
			target.CallService("select_next", data);
		}

		///<summary>Select the next options of an input select entity.</summary>
		///<param name="target">The InputSelectEntity to call this service for</param>
		///<param name="cycle">If the option should cycle from the last to the first.</param>
		public static void SelectNext(this InputSelectEntity target, bool? @cycle = null)
		{
			target.CallService("select_next", new InputSelectSelectNextParameters{Cycle = @cycle});
		}

		///<summary>Select the next options of an input select entity.</summary>
		///<param name="target">The IEnumerable<InputSelectEntity> to call this service for</param>
		///<param name="cycle">If the option should cycle from the last to the first.</param>
		public static void SelectNext(this IEnumerable<InputSelectEntity> target, bool? @cycle = null)
		{
			target.CallService("select_next", new InputSelectSelectNextParameters{Cycle = @cycle});
		}

		///<summary>Select an option of an input select entity.</summary>
		public static void SelectOption(this InputSelectEntity target, InputSelectSelectOptionParameters data)
		{
			target.CallService("select_option", data);
		}

		///<summary>Select an option of an input select entity.</summary>
		public static void SelectOption(this IEnumerable<InputSelectEntity> target, InputSelectSelectOptionParameters data)
		{
			target.CallService("select_option", data);
		}

		///<summary>Select an option of an input select entity.</summary>
		///<param name="target">The InputSelectEntity to call this service for</param>
		///<param name="option">Option to be selected. eg: "Item A"</param>
		public static void SelectOption(this InputSelectEntity target, string @option)
		{
			target.CallService("select_option", new InputSelectSelectOptionParameters{Option = @option});
		}

		///<summary>Select an option of an input select entity.</summary>
		///<param name="target">The IEnumerable<InputSelectEntity> to call this service for</param>
		///<param name="option">Option to be selected. eg: "Item A"</param>
		public static void SelectOption(this IEnumerable<InputSelectEntity> target, string @option)
		{
			target.CallService("select_option", new InputSelectSelectOptionParameters{Option = @option});
		}

		///<summary>Select the previous options of an input select entity.</summary>
		public static void SelectPrevious(this InputSelectEntity target, InputSelectSelectPreviousParameters data)
		{
			target.CallService("select_previous", data);
		}

		///<summary>Select the previous options of an input select entity.</summary>
		public static void SelectPrevious(this IEnumerable<InputSelectEntity> target, InputSelectSelectPreviousParameters data)
		{
			target.CallService("select_previous", data);
		}

		///<summary>Select the previous options of an input select entity.</summary>
		///<param name="target">The InputSelectEntity to call this service for</param>
		///<param name="cycle">If the option should cycle from the first to the last.</param>
		public static void SelectPrevious(this InputSelectEntity target, bool? @cycle = null)
		{
			target.CallService("select_previous", new InputSelectSelectPreviousParameters{Cycle = @cycle});
		}

		///<summary>Select the previous options of an input select entity.</summary>
		///<param name="target">The IEnumerable<InputSelectEntity> to call this service for</param>
		///<param name="cycle">If the option should cycle from the first to the last.</param>
		public static void SelectPrevious(this IEnumerable<InputSelectEntity> target, bool? @cycle = null)
		{
			target.CallService("select_previous", new InputSelectSelectPreviousParameters{Cycle = @cycle});
		}

		///<summary>Set the options of an input select entity.</summary>
		public static void SetOptions(this InputSelectEntity target, InputSelectSetOptionsParameters data)
		{
			target.CallService("set_options", data);
		}

		///<summary>Set the options of an input select entity.</summary>
		public static void SetOptions(this IEnumerable<InputSelectEntity> target, InputSelectSetOptionsParameters data)
		{
			target.CallService("set_options", data);
		}

		///<summary>Set the options of an input select entity.</summary>
		///<param name="target">The InputSelectEntity to call this service for</param>
		///<param name="options">Options for the input select entity. eg: ["Item A", "Item B", "Item C"]</param>
		public static void SetOptions(this InputSelectEntity target, object @options)
		{
			target.CallService("set_options", new InputSelectSetOptionsParameters{Options = @options});
		}

		///<summary>Set the options of an input select entity.</summary>
		///<param name="target">The IEnumerable<InputSelectEntity> to call this service for</param>
		///<param name="options">Options for the input select entity. eg: ["Item A", "Item B", "Item C"]</param>
		public static void SetOptions(this IEnumerable<InputSelectEntity> target, object @options)
		{
			target.CallService("set_options", new InputSelectSetOptionsParameters{Options = @options});
		}
	}

	public static class InputTextEntityExtensionMethods
	{
		///<summary>Set the value of an input text entity.</summary>
		public static void SetValue(this InputTextEntity target, InputTextSetValueParameters data)
		{
			target.CallService("set_value", data);
		}

		///<summary>Set the value of an input text entity.</summary>
		public static void SetValue(this IEnumerable<InputTextEntity> target, InputTextSetValueParameters data)
		{
			target.CallService("set_value", data);
		}

		///<summary>Set the value of an input text entity.</summary>
		///<param name="target">The InputTextEntity to call this service for</param>
		///<param name="value">The target value the entity should be set to. eg: This is an example text</param>
		public static void SetValue(this InputTextEntity target, string @value)
		{
			target.CallService("set_value", new InputTextSetValueParameters{Value = @value});
		}

		///<summary>Set the value of an input text entity.</summary>
		///<param name="target">The IEnumerable<InputTextEntity> to call this service for</param>
		///<param name="value">The target value the entity should be set to. eg: This is an example text</param>
		public static void SetValue(this IEnumerable<InputTextEntity> target, string @value)
		{
			target.CallService("set_value", new InputTextSetValueParameters{Value = @value});
		}
	}

	public static class LightEntityExtensionMethods
	{
		///<summary>Toggles one or more lights, from on to off, or, off to on, based on their current state. </summary>
		public static void Toggle(this LightEntity target, LightToggleParameters data)
		{
			target.CallService("toggle", data);
		}

		///<summary>Toggles one or more lights, from on to off, or, off to on, based on their current state. </summary>
		public static void Toggle(this IEnumerable<LightEntity> target, LightToggleParameters data)
		{
			target.CallService("toggle", data);
		}

		///<summary>Toggles one or more lights, from on to off, or, off to on, based on their current state. </summary>
		///<param name="target">The LightEntity to call this service for</param>
		///<param name="transition">Duration it takes to get to next state.</param>
		///<param name="rgbColor">Color for the light in RGB-format. eg: [255, 100, 100]</param>
		///<param name="colorName">A human readable color name.</param>
		///<param name="hsColor">Color for the light in hue/sat format. Hue is 0-360 and Sat is 0-100. eg: [300, 70]</param>
		///<param name="xyColor">Color for the light in XY-format. eg: [0.52, 0.43]</param>
		///<param name="colorTemp">Color temperature for the light in mireds.</param>
		///<param name="kelvin">Color temperature for the light in Kelvin.</param>
		///<param name="whiteValue">Number indicating level of white.</param>
		///<param name="brightness">Number indicating brightness, where 0 turns the light off, 1 is the minimum brightness and 255 is the maximum brightness supported by the light.</param>
		///<param name="brightnessPct">Number indicating percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness and 100 is the maximum brightness supported by the light.</param>
		///<param name="profile">Name of a light profile to use. eg: relax</param>
		///<param name="flash">If the light should flash.</param>
		///<param name="effect">Light effect.</param>
		public static void Toggle(this LightEntity target, long? @transition = null, object? @rgbColor = null, object? @colorName = null, object? @hsColor = null, object? @xyColor = null, object? @colorTemp = null, long? @kelvin = null, long? @whiteValue = null, long? @brightness = null, long? @brightnessPct = null, string? @profile = null, object? @flash = null, string? @effect = null)
		{
			target.CallService("toggle", new LightToggleParameters{Transition = @transition, RgbColor = @rgbColor, ColorName = @colorName, HsColor = @hsColor, XyColor = @xyColor, ColorTemp = @colorTemp, Kelvin = @kelvin, WhiteValue = @whiteValue, Brightness = @brightness, BrightnessPct = @brightnessPct, Profile = @profile, Flash = @flash, Effect = @effect});
		}

		///<summary>Toggles one or more lights, from on to off, or, off to on, based on their current state. </summary>
		///<param name="target">The IEnumerable<LightEntity> to call this service for</param>
		///<param name="transition">Duration it takes to get to next state.</param>
		///<param name="rgbColor">Color for the light in RGB-format. eg: [255, 100, 100]</param>
		///<param name="colorName">A human readable color name.</param>
		///<param name="hsColor">Color for the light in hue/sat format. Hue is 0-360 and Sat is 0-100. eg: [300, 70]</param>
		///<param name="xyColor">Color for the light in XY-format. eg: [0.52, 0.43]</param>
		///<param name="colorTemp">Color temperature for the light in mireds.</param>
		///<param name="kelvin">Color temperature for the light in Kelvin.</param>
		///<param name="whiteValue">Number indicating level of white.</param>
		///<param name="brightness">Number indicating brightness, where 0 turns the light off, 1 is the minimum brightness and 255 is the maximum brightness supported by the light.</param>
		///<param name="brightnessPct">Number indicating percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness and 100 is the maximum brightness supported by the light.</param>
		///<param name="profile">Name of a light profile to use. eg: relax</param>
		///<param name="flash">If the light should flash.</param>
		///<param name="effect">Light effect.</param>
		public static void Toggle(this IEnumerable<LightEntity> target, long? @transition = null, object? @rgbColor = null, object? @colorName = null, object? @hsColor = null, object? @xyColor = null, object? @colorTemp = null, long? @kelvin = null, long? @whiteValue = null, long? @brightness = null, long? @brightnessPct = null, string? @profile = null, object? @flash = null, string? @effect = null)
		{
			target.CallService("toggle", new LightToggleParameters{Transition = @transition, RgbColor = @rgbColor, ColorName = @colorName, HsColor = @hsColor, XyColor = @xyColor, ColorTemp = @colorTemp, Kelvin = @kelvin, WhiteValue = @whiteValue, Brightness = @brightness, BrightnessPct = @brightnessPct, Profile = @profile, Flash = @flash, Effect = @effect});
		}

		///<summary>Turns off one or more lights.</summary>
		public static void TurnOff(this LightEntity target, LightTurnOffParameters data)
		{
			target.CallService("turn_off", data);
		}

		///<summary>Turns off one or more lights.</summary>
		public static void TurnOff(this IEnumerable<LightEntity> target, LightTurnOffParameters data)
		{
			target.CallService("turn_off", data);
		}

		///<summary>Turns off one or more lights.</summary>
		///<param name="target">The LightEntity to call this service for</param>
		///<param name="transition">Duration it takes to get to next state.</param>
		///<param name="flash">If the light should flash.</param>
		public static void TurnOff(this LightEntity target, long? @transition = null, object? @flash = null)
		{
			target.CallService("turn_off", new LightTurnOffParameters{Transition = @transition, Flash = @flash});
		}

		///<summary>Turns off one or more lights.</summary>
		///<param name="target">The IEnumerable<LightEntity> to call this service for</param>
		///<param name="transition">Duration it takes to get to next state.</param>
		///<param name="flash">If the light should flash.</param>
		public static void TurnOff(this IEnumerable<LightEntity> target, long? @transition = null, object? @flash = null)
		{
			target.CallService("turn_off", new LightTurnOffParameters{Transition = @transition, Flash = @flash});
		}

		///<summary>Turn on one or more lights and adjust properties of the light, even when they are turned on already. </summary>
		public static void TurnOn(this LightEntity target, LightTurnOnParameters data)
		{
			target.CallService("turn_on", data);
		}

		///<summary>Turn on one or more lights and adjust properties of the light, even when they are turned on already. </summary>
		public static void TurnOn(this IEnumerable<LightEntity> target, LightTurnOnParameters data)
		{
			target.CallService("turn_on", data);
		}

		///<summary>Turn on one or more lights and adjust properties of the light, even when they are turned on already. </summary>
		///<param name="target">The LightEntity to call this service for</param>
		///<param name="transition">Duration it takes to get to next state.</param>
		///<param name="rgbColor">The color for the light (based on RGB - red, green, blue).</param>
		///<param name="rgbwColor">A list containing four integers between 0 and 255 representing the RGBW (red, green, blue, white) color for the light. eg: [255, 100, 100, 50]</param>
		///<param name="rgbwwColor">A list containing five integers between 0 and 255 representing the RGBWW (red, green, blue, cold white, warm white) color for the light. eg: [255, 100, 100, 50, 70]</param>
		///<param name="colorName">A human readable color name.</param>
		///<param name="hsColor">Color for the light in hue/sat format. Hue is 0-360 and Sat is 0-100. eg: [300, 70]</param>
		///<param name="xyColor">Color for the light in XY-format. eg: [0.52, 0.43]</param>
		///<param name="colorTemp">Color temperature for the light in mireds.</param>
		///<param name="kelvin">Color temperature for the light in Kelvin.</param>
		///<param name="brightness">Number indicating brightness, where 0 turns the light off, 1 is the minimum brightness and 255 is the maximum brightness supported by the light.</param>
		///<param name="brightnessPct">Number indicating percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness and 100 is the maximum brightness supported by the light.</param>
		///<param name="brightnessStep">Change brightness by an amount.</param>
		///<param name="brightnessStepPct">Change brightness by a percentage.</param>
		///<param name="white">Set the light to white mode and change its brightness, where 0 turns the light off, 1 is the minimum brightness and 255 is the maximum brightness supported by the light.</param>
		///<param name="profile">Name of a light profile to use. eg: relax</param>
		///<param name="flash">If the light should flash.</param>
		///<param name="effect">Light effect.</param>
		public static void TurnOn(this LightEntity target, long? @transition = null, object? @rgbColor = null, object? @rgbwColor = null, object? @rgbwwColor = null, object? @colorName = null, object? @hsColor = null, object? @xyColor = null, object? @colorTemp = null, long? @kelvin = null, long? @brightness = null, long? @brightnessPct = null, long? @brightnessStep = null, long? @brightnessStepPct = null, long? @white = null, string? @profile = null, object? @flash = null, string? @effect = null)
		{
			target.CallService("turn_on", new LightTurnOnParameters{Transition = @transition, RgbColor = @rgbColor, RgbwColor = @rgbwColor, RgbwwColor = @rgbwwColor, ColorName = @colorName, HsColor = @hsColor, XyColor = @xyColor, ColorTemp = @colorTemp, Kelvin = @kelvin, Brightness = @brightness, BrightnessPct = @brightnessPct, BrightnessStep = @brightnessStep, BrightnessStepPct = @brightnessStepPct, White = @white, Profile = @profile, Flash = @flash, Effect = @effect});
		}

		///<summary>Turn on one or more lights and adjust properties of the light, even when they are turned on already. </summary>
		///<param name="target">The IEnumerable<LightEntity> to call this service for</param>
		///<param name="transition">Duration it takes to get to next state.</param>
		///<param name="rgbColor">The color for the light (based on RGB - red, green, blue).</param>
		///<param name="rgbwColor">A list containing four integers between 0 and 255 representing the RGBW (red, green, blue, white) color for the light. eg: [255, 100, 100, 50]</param>
		///<param name="rgbwwColor">A list containing five integers between 0 and 255 representing the RGBWW (red, green, blue, cold white, warm white) color for the light. eg: [255, 100, 100, 50, 70]</param>
		///<param name="colorName">A human readable color name.</param>
		///<param name="hsColor">Color for the light in hue/sat format. Hue is 0-360 and Sat is 0-100. eg: [300, 70]</param>
		///<param name="xyColor">Color for the light in XY-format. eg: [0.52, 0.43]</param>
		///<param name="colorTemp">Color temperature for the light in mireds.</param>
		///<param name="kelvin">Color temperature for the light in Kelvin.</param>
		///<param name="brightness">Number indicating brightness, where 0 turns the light off, 1 is the minimum brightness and 255 is the maximum brightness supported by the light.</param>
		///<param name="brightnessPct">Number indicating percentage of full brightness, where 0 turns the light off, 1 is the minimum brightness and 100 is the maximum brightness supported by the light.</param>
		///<param name="brightnessStep">Change brightness by an amount.</param>
		///<param name="brightnessStepPct">Change brightness by a percentage.</param>
		///<param name="white">Set the light to white mode and change its brightness, where 0 turns the light off, 1 is the minimum brightness and 255 is the maximum brightness supported by the light.</param>
		///<param name="profile">Name of a light profile to use. eg: relax</param>
		///<param name="flash">If the light should flash.</param>
		///<param name="effect">Light effect.</param>
		public static void TurnOn(this IEnumerable<LightEntity> target, long? @transition = null, object? @rgbColor = null, object? @rgbwColor = null, object? @rgbwwColor = null, object? @colorName = null, object? @hsColor = null, object? @xyColor = null, object? @colorTemp = null, long? @kelvin = null, long? @brightness = null, long? @brightnessPct = null, long? @brightnessStep = null, long? @brightnessStepPct = null, long? @white = null, string? @profile = null, object? @flash = null, string? @effect = null)
		{
			target.CallService("turn_on", new LightTurnOnParameters{Transition = @transition, RgbColor = @rgbColor, RgbwColor = @rgbwColor, RgbwwColor = @rgbwwColor, ColorName = @colorName, HsColor = @hsColor, XyColor = @xyColor, ColorTemp = @colorTemp, Kelvin = @kelvin, Brightness = @brightness, BrightnessPct = @brightnessPct, BrightnessStep = @brightnessStep, BrightnessStepPct = @brightnessStepPct, White = @white, Profile = @profile, Flash = @flash, Effect = @effect});
		}
	}

	public static class LockEntityExtensionMethods
	{
		///<summary>Lock all or specified locks.</summary>
		public static void Lock(this LockEntity target, LockLockParameters data)
		{
			target.CallService("lock", data);
		}

		///<summary>Lock all or specified locks.</summary>
		public static void Lock(this IEnumerable<LockEntity> target, LockLockParameters data)
		{
			target.CallService("lock", data);
		}

		///<summary>Lock all or specified locks.</summary>
		///<param name="target">The LockEntity to call this service for</param>
		///<param name="code">An optional code to lock the lock with. eg: 1234</param>
		public static void Lock(this LockEntity target, string? @code = null)
		{
			target.CallService("lock", new LockLockParameters{Code = @code});
		}

		///<summary>Lock all or specified locks.</summary>
		///<param name="target">The IEnumerable<LockEntity> to call this service for</param>
		///<param name="code">An optional code to lock the lock with. eg: 1234</param>
		public static void Lock(this IEnumerable<LockEntity> target, string? @code = null)
		{
			target.CallService("lock", new LockLockParameters{Code = @code});
		}

		///<summary>Open all or specified locks.</summary>
		public static void Open(this LockEntity target, LockOpenParameters data)
		{
			target.CallService("open", data);
		}

		///<summary>Open all or specified locks.</summary>
		public static void Open(this IEnumerable<LockEntity> target, LockOpenParameters data)
		{
			target.CallService("open", data);
		}

		///<summary>Open all or specified locks.</summary>
		///<param name="target">The LockEntity to call this service for</param>
		///<param name="code">An optional code to open the lock with. eg: 1234</param>
		public static void Open(this LockEntity target, string? @code = null)
		{
			target.CallService("open", new LockOpenParameters{Code = @code});
		}

		///<summary>Open all or specified locks.</summary>
		///<param name="target">The IEnumerable<LockEntity> to call this service for</param>
		///<param name="code">An optional code to open the lock with. eg: 1234</param>
		public static void Open(this IEnumerable<LockEntity> target, string? @code = null)
		{
			target.CallService("open", new LockOpenParameters{Code = @code});
		}

		///<summary>Unlock all or specified locks.</summary>
		public static void Unlock(this LockEntity target, LockUnlockParameters data)
		{
			target.CallService("unlock", data);
		}

		///<summary>Unlock all or specified locks.</summary>
		public static void Unlock(this IEnumerable<LockEntity> target, LockUnlockParameters data)
		{
			target.CallService("unlock", data);
		}

		///<summary>Unlock all or specified locks.</summary>
		///<param name="target">The LockEntity to call this service for</param>
		///<param name="code">An optional code to unlock the lock with. eg: 1234</param>
		public static void Unlock(this LockEntity target, string? @code = null)
		{
			target.CallService("unlock", new LockUnlockParameters{Code = @code});
		}

		///<summary>Unlock all or specified locks.</summary>
		///<param name="target">The IEnumerable<LockEntity> to call this service for</param>
		///<param name="code">An optional code to unlock the lock with. eg: 1234</param>
		public static void Unlock(this IEnumerable<LockEntity> target, string? @code = null)
		{
			target.CallService("unlock", new LockUnlockParameters{Code = @code});
		}
	}

	public static class MediaPlayerEntityExtensionMethods
	{
		///<summary>Send the media player the command to clear players playlist.</summary>
		public static void ClearPlaylist(this MediaPlayerEntity target)
		{
			target.CallService("clear_playlist");
		}

		///<summary>Send the media player the command to clear players playlist.</summary>
		public static void ClearPlaylist(this IEnumerable<MediaPlayerEntity> target)
		{
			target.CallService("clear_playlist");
		}

		///<summary>Group players together. Only works on platforms with support for player groups.</summary>
		public static void Join(this MediaPlayerEntity target, MediaPlayerJoinParameters data)
		{
			target.CallService("join", data);
		}

		///<summary>Group players together. Only works on platforms with support for player groups.</summary>
		public static void Join(this IEnumerable<MediaPlayerEntity> target, MediaPlayerJoinParameters data)
		{
			target.CallService("join", data);
		}

		///<summary>Group players together. Only works on platforms with support for player groups.</summary>
		///<param name="target">The MediaPlayerEntity to call this service for</param>
		///<param name="groupMembers">The players which will be synced with the target player. eg: ["media_player.multiroom_player2","media_player.multiroom_player3"]</param>
		public static void Join(this MediaPlayerEntity target, object? @groupMembers = null)
		{
			target.CallService("join", new MediaPlayerJoinParameters{GroupMembers = @groupMembers});
		}

		///<summary>Group players together. Only works on platforms with support for player groups.</summary>
		///<param name="target">The IEnumerable<MediaPlayerEntity> to call this service for</param>
		///<param name="groupMembers">The players which will be synced with the target player. eg: ["media_player.multiroom_player2","media_player.multiroom_player3"]</param>
		public static void Join(this IEnumerable<MediaPlayerEntity> target, object? @groupMembers = null)
		{
			target.CallService("join", new MediaPlayerJoinParameters{GroupMembers = @groupMembers});
		}

		///<summary>Send the media player the command for next track.</summary>
		public static void MediaNextTrack(this MediaPlayerEntity target)
		{
			target.CallService("media_next_track");
		}

		///<summary>Send the media player the command for next track.</summary>
		public static void MediaNextTrack(this IEnumerable<MediaPlayerEntity> target)
		{
			target.CallService("media_next_track");
		}

		///<summary>Send the media player the command for pause.</summary>
		public static void MediaPause(this MediaPlayerEntity target)
		{
			target.CallService("media_pause");
		}

		///<summary>Send the media player the command for pause.</summary>
		public static void MediaPause(this IEnumerable<MediaPlayerEntity> target)
		{
			target.CallService("media_pause");
		}

		///<summary>Send the media player the command for play.</summary>
		public static void MediaPlay(this MediaPlayerEntity target)
		{
			target.CallService("media_play");
		}

		///<summary>Send the media player the command for play.</summary>
		public static void MediaPlay(this IEnumerable<MediaPlayerEntity> target)
		{
			target.CallService("media_play");
		}

		///<summary>Toggle media player play/pause state.</summary>
		public static void MediaPlayPause(this MediaPlayerEntity target)
		{
			target.CallService("media_play_pause");
		}

		///<summary>Toggle media player play/pause state.</summary>
		public static void MediaPlayPause(this IEnumerable<MediaPlayerEntity> target)
		{
			target.CallService("media_play_pause");
		}

		///<summary>Send the media player the command for previous track.</summary>
		public static void MediaPreviousTrack(this MediaPlayerEntity target)
		{
			target.CallService("media_previous_track");
		}

		///<summary>Send the media player the command for previous track.</summary>
		public static void MediaPreviousTrack(this IEnumerable<MediaPlayerEntity> target)
		{
			target.CallService("media_previous_track");
		}

		///<summary>Send the media player the command to seek in current playing media.</summary>
		public static void MediaSeek(this MediaPlayerEntity target, MediaPlayerMediaSeekParameters data)
		{
			target.CallService("media_seek", data);
		}

		///<summary>Send the media player the command to seek in current playing media.</summary>
		public static void MediaSeek(this IEnumerable<MediaPlayerEntity> target, MediaPlayerMediaSeekParameters data)
		{
			target.CallService("media_seek", data);
		}

		///<summary>Send the media player the command to seek in current playing media.</summary>
		///<param name="target">The MediaPlayerEntity to call this service for</param>
		///<param name="seekPosition">Position to seek to. The format is platform dependent.</param>
		public static void MediaSeek(this MediaPlayerEntity target, double @seekPosition)
		{
			target.CallService("media_seek", new MediaPlayerMediaSeekParameters{SeekPosition = @seekPosition});
		}

		///<summary>Send the media player the command to seek in current playing media.</summary>
		///<param name="target">The IEnumerable<MediaPlayerEntity> to call this service for</param>
		///<param name="seekPosition">Position to seek to. The format is platform dependent.</param>
		public static void MediaSeek(this IEnumerable<MediaPlayerEntity> target, double @seekPosition)
		{
			target.CallService("media_seek", new MediaPlayerMediaSeekParameters{SeekPosition = @seekPosition});
		}

		///<summary>Send the media player the stop command.</summary>
		public static void MediaStop(this MediaPlayerEntity target)
		{
			target.CallService("media_stop");
		}

		///<summary>Send the media player the stop command.</summary>
		public static void MediaStop(this IEnumerable<MediaPlayerEntity> target)
		{
			target.CallService("media_stop");
		}

		///<summary>Send the media player the command for playing media.</summary>
		public static void PlayMedia(this MediaPlayerEntity target, MediaPlayerPlayMediaParameters data)
		{
			target.CallService("play_media", data);
		}

		///<summary>Send the media player the command for playing media.</summary>
		public static void PlayMedia(this IEnumerable<MediaPlayerEntity> target, MediaPlayerPlayMediaParameters data)
		{
			target.CallService("play_media", data);
		}

		///<summary>Send the media player the command for playing media.</summary>
		///<param name="target">The MediaPlayerEntity to call this service for</param>
		///<param name="mediaContentId">The ID of the content to play. Platform dependent. eg: https://home-assistant.io/images/cast/splash.png</param>
		///<param name="mediaContentType">The type of the content to play. Like image, music, tvshow, video, episode, channel or playlist. eg: music</param>
		///<param name="enqueue">If the content should be played now or be added to the queue.</param>
		///<param name="announce">If the media should be played as an announcement. eg: true</param>
		public static void PlayMedia(this MediaPlayerEntity target, string @mediaContentId, string @mediaContentType, object? @enqueue = null, bool? @announce = null)
		{
			target.CallService("play_media", new MediaPlayerPlayMediaParameters{MediaContentId = @mediaContentId, MediaContentType = @mediaContentType, Enqueue = @enqueue, Announce = @announce});
		}

		///<summary>Send the media player the command for playing media.</summary>
		///<param name="target">The IEnumerable<MediaPlayerEntity> to call this service for</param>
		///<param name="mediaContentId">The ID of the content to play. Platform dependent. eg: https://home-assistant.io/images/cast/splash.png</param>
		///<param name="mediaContentType">The type of the content to play. Like image, music, tvshow, video, episode, channel or playlist. eg: music</param>
		///<param name="enqueue">If the content should be played now or be added to the queue.</param>
		///<param name="announce">If the media should be played as an announcement. eg: true</param>
		public static void PlayMedia(this IEnumerable<MediaPlayerEntity> target, string @mediaContentId, string @mediaContentType, object? @enqueue = null, bool? @announce = null)
		{
			target.CallService("play_media", new MediaPlayerPlayMediaParameters{MediaContentId = @mediaContentId, MediaContentType = @mediaContentType, Enqueue = @enqueue, Announce = @announce});
		}

		///<summary>Set repeat mode</summary>
		public static void RepeatSet(this MediaPlayerEntity target, MediaPlayerRepeatSetParameters data)
		{
			target.CallService("repeat_set", data);
		}

		///<summary>Set repeat mode</summary>
		public static void RepeatSet(this IEnumerable<MediaPlayerEntity> target, MediaPlayerRepeatSetParameters data)
		{
			target.CallService("repeat_set", data);
		}

		///<summary>Set repeat mode</summary>
		///<param name="target">The MediaPlayerEntity to call this service for</param>
		///<param name="repeat">Repeat mode to set.</param>
		public static void RepeatSet(this MediaPlayerEntity target, object @repeat)
		{
			target.CallService("repeat_set", new MediaPlayerRepeatSetParameters{Repeat = @repeat});
		}

		///<summary>Set repeat mode</summary>
		///<param name="target">The IEnumerable<MediaPlayerEntity> to call this service for</param>
		///<param name="repeat">Repeat mode to set.</param>
		public static void RepeatSet(this IEnumerable<MediaPlayerEntity> target, object @repeat)
		{
			target.CallService("repeat_set", new MediaPlayerRepeatSetParameters{Repeat = @repeat});
		}

		///<summary>Send the media player the command to change sound mode.</summary>
		public static void SelectSoundMode(this MediaPlayerEntity target, MediaPlayerSelectSoundModeParameters data)
		{
			target.CallService("select_sound_mode", data);
		}

		///<summary>Send the media player the command to change sound mode.</summary>
		public static void SelectSoundMode(this IEnumerable<MediaPlayerEntity> target, MediaPlayerSelectSoundModeParameters data)
		{
			target.CallService("select_sound_mode", data);
		}

		///<summary>Send the media player the command to change sound mode.</summary>
		///<param name="target">The MediaPlayerEntity to call this service for</param>
		///<param name="soundMode">Name of the sound mode to switch to. eg: Music</param>
		public static void SelectSoundMode(this MediaPlayerEntity target, string? @soundMode = null)
		{
			target.CallService("select_sound_mode", new MediaPlayerSelectSoundModeParameters{SoundMode = @soundMode});
		}

		///<summary>Send the media player the command to change sound mode.</summary>
		///<param name="target">The IEnumerable<MediaPlayerEntity> to call this service for</param>
		///<param name="soundMode">Name of the sound mode to switch to. eg: Music</param>
		public static void SelectSoundMode(this IEnumerable<MediaPlayerEntity> target, string? @soundMode = null)
		{
			target.CallService("select_sound_mode", new MediaPlayerSelectSoundModeParameters{SoundMode = @soundMode});
		}

		///<summary>Send the media player the command to change input source.</summary>
		public static void SelectSource(this MediaPlayerEntity target, MediaPlayerSelectSourceParameters data)
		{
			target.CallService("select_source", data);
		}

		///<summary>Send the media player the command to change input source.</summary>
		public static void SelectSource(this IEnumerable<MediaPlayerEntity> target, MediaPlayerSelectSourceParameters data)
		{
			target.CallService("select_source", data);
		}

		///<summary>Send the media player the command to change input source.</summary>
		///<param name="target">The MediaPlayerEntity to call this service for</param>
		///<param name="source">Name of the source to switch to. Platform dependent. eg: video1</param>
		public static void SelectSource(this MediaPlayerEntity target, string @source)
		{
			target.CallService("select_source", new MediaPlayerSelectSourceParameters{Source = @source});
		}

		///<summary>Send the media player the command to change input source.</summary>
		///<param name="target">The IEnumerable<MediaPlayerEntity> to call this service for</param>
		///<param name="source">Name of the source to switch to. Platform dependent. eg: video1</param>
		public static void SelectSource(this IEnumerable<MediaPlayerEntity> target, string @source)
		{
			target.CallService("select_source", new MediaPlayerSelectSourceParameters{Source = @source});
		}

		///<summary>Set shuffling state.</summary>
		public static void ShuffleSet(this MediaPlayerEntity target, MediaPlayerShuffleSetParameters data)
		{
			target.CallService("shuffle_set", data);
		}

		///<summary>Set shuffling state.</summary>
		public static void ShuffleSet(this IEnumerable<MediaPlayerEntity> target, MediaPlayerShuffleSetParameters data)
		{
			target.CallService("shuffle_set", data);
		}

		///<summary>Set shuffling state.</summary>
		///<param name="target">The MediaPlayerEntity to call this service for</param>
		///<param name="shuffle">True/false for enabling/disabling shuffle.</param>
		public static void ShuffleSet(this MediaPlayerEntity target, bool @shuffle)
		{
			target.CallService("shuffle_set", new MediaPlayerShuffleSetParameters{Shuffle = @shuffle});
		}

		///<summary>Set shuffling state.</summary>
		///<param name="target">The IEnumerable<MediaPlayerEntity> to call this service for</param>
		///<param name="shuffle">True/false for enabling/disabling shuffle.</param>
		public static void ShuffleSet(this IEnumerable<MediaPlayerEntity> target, bool @shuffle)
		{
			target.CallService("shuffle_set", new MediaPlayerShuffleSetParameters{Shuffle = @shuffle});
		}

		///<summary>Toggles a media player power state.</summary>
		public static void Toggle(this MediaPlayerEntity target)
		{
			target.CallService("toggle");
		}

		///<summary>Toggles a media player power state.</summary>
		public static void Toggle(this IEnumerable<MediaPlayerEntity> target)
		{
			target.CallService("toggle");
		}

		///<summary>Turn a media player power off.</summary>
		public static void TurnOff(this MediaPlayerEntity target)
		{
			target.CallService("turn_off");
		}

		///<summary>Turn a media player power off.</summary>
		public static void TurnOff(this IEnumerable<MediaPlayerEntity> target)
		{
			target.CallService("turn_off");
		}

		///<summary>Turn a media player power on.</summary>
		public static void TurnOn(this MediaPlayerEntity target)
		{
			target.CallService("turn_on");
		}

		///<summary>Turn a media player power on.</summary>
		public static void TurnOn(this IEnumerable<MediaPlayerEntity> target)
		{
			target.CallService("turn_on");
		}

		///<summary>Unjoin the player from a group. Only works on platforms with support for player groups.</summary>
		public static void Unjoin(this MediaPlayerEntity target)
		{
			target.CallService("unjoin");
		}

		///<summary>Unjoin the player from a group. Only works on platforms with support for player groups.</summary>
		public static void Unjoin(this IEnumerable<MediaPlayerEntity> target)
		{
			target.CallService("unjoin");
		}

		///<summary>Turn a media player volume down.</summary>
		public static void VolumeDown(this MediaPlayerEntity target)
		{
			target.CallService("volume_down");
		}

		///<summary>Turn a media player volume down.</summary>
		public static void VolumeDown(this IEnumerable<MediaPlayerEntity> target)
		{
			target.CallService("volume_down");
		}

		///<summary>Mute a media player's volume.</summary>
		public static void VolumeMute(this MediaPlayerEntity target, MediaPlayerVolumeMuteParameters data)
		{
			target.CallService("volume_mute", data);
		}

		///<summary>Mute a media player's volume.</summary>
		public static void VolumeMute(this IEnumerable<MediaPlayerEntity> target, MediaPlayerVolumeMuteParameters data)
		{
			target.CallService("volume_mute", data);
		}

		///<summary>Mute a media player's volume.</summary>
		///<param name="target">The MediaPlayerEntity to call this service for</param>
		///<param name="isVolumeMuted">True/false for mute/unmute.</param>
		public static void VolumeMute(this MediaPlayerEntity target, bool @isVolumeMuted)
		{
			target.CallService("volume_mute", new MediaPlayerVolumeMuteParameters{IsVolumeMuted = @isVolumeMuted});
		}

		///<summary>Mute a media player's volume.</summary>
		///<param name="target">The IEnumerable<MediaPlayerEntity> to call this service for</param>
		///<param name="isVolumeMuted">True/false for mute/unmute.</param>
		public static void VolumeMute(this IEnumerable<MediaPlayerEntity> target, bool @isVolumeMuted)
		{
			target.CallService("volume_mute", new MediaPlayerVolumeMuteParameters{IsVolumeMuted = @isVolumeMuted});
		}

		///<summary>Set a media player's volume level.</summary>
		public static void VolumeSet(this MediaPlayerEntity target, MediaPlayerVolumeSetParameters data)
		{
			target.CallService("volume_set", data);
		}

		///<summary>Set a media player's volume level.</summary>
		public static void VolumeSet(this IEnumerable<MediaPlayerEntity> target, MediaPlayerVolumeSetParameters data)
		{
			target.CallService("volume_set", data);
		}

		///<summary>Set a media player's volume level.</summary>
		///<param name="target">The MediaPlayerEntity to call this service for</param>
		///<param name="volumeLevel">Volume level to set as float.</param>
		public static void VolumeSet(this MediaPlayerEntity target, double @volumeLevel)
		{
			target.CallService("volume_set", new MediaPlayerVolumeSetParameters{VolumeLevel = @volumeLevel});
		}

		///<summary>Set a media player's volume level.</summary>
		///<param name="target">The IEnumerable<MediaPlayerEntity> to call this service for</param>
		///<param name="volumeLevel">Volume level to set as float.</param>
		public static void VolumeSet(this IEnumerable<MediaPlayerEntity> target, double @volumeLevel)
		{
			target.CallService("volume_set", new MediaPlayerVolumeSetParameters{VolumeLevel = @volumeLevel});
		}

		///<summary>Turn a media player volume up.</summary>
		public static void VolumeUp(this MediaPlayerEntity target)
		{
			target.CallService("volume_up");
		}

		///<summary>Turn a media player volume up.</summary>
		public static void VolumeUp(this IEnumerable<MediaPlayerEntity> target)
		{
			target.CallService("volume_up");
		}
	}

	public static class NeatoEntityExtensionMethods
	{
		///<summary>Zone Cleaning service call specific to Neato Botvacs.</summary>
		public static void CustomCleaning(this VacuumEntity target, NeatoCustomCleaningParameters data)
		{
			target.CallService("custom_cleaning", data);
		}

		///<summary>Zone Cleaning service call specific to Neato Botvacs.</summary>
		public static void CustomCleaning(this IEnumerable<VacuumEntity> target, NeatoCustomCleaningParameters data)
		{
			target.CallService("custom_cleaning", data);
		}

		///<summary>Zone Cleaning service call specific to Neato Botvacs.</summary>
		///<param name="target">The VacuumEntity to call this service for</param>
		///<param name="mode">Set the cleaning mode: 1 for eco and 2 for turbo. Defaults to turbo if not set.</param>
		///<param name="navigation">Set the navigation mode: 1 for normal, 2 for extra care, 3 for deep. Defaults to normal if not set.</param>
		///<param name="category">Whether to use a persistent map or not for cleaning (i.e. No go lines): 2 for no map, 4 for map. Default to using map if not set (and fallback to no map if no map is found).</param>
		///<param name="zone">Only supported on the Botvac D7. Name of the zone to clean. Defaults to no zone i.e. complete house cleanup. eg: Kitchen</param>
		public static void CustomCleaning(this VacuumEntity target, long? @mode = null, long? @navigation = null, long? @category = null, string? @zone = null)
		{
			target.CallService("custom_cleaning", new NeatoCustomCleaningParameters{Mode = @mode, Navigation = @navigation, Category = @category, Zone = @zone});
		}

		///<summary>Zone Cleaning service call specific to Neato Botvacs.</summary>
		///<param name="target">The IEnumerable<VacuumEntity> to call this service for</param>
		///<param name="mode">Set the cleaning mode: 1 for eco and 2 for turbo. Defaults to turbo if not set.</param>
		///<param name="navigation">Set the navigation mode: 1 for normal, 2 for extra care, 3 for deep. Defaults to normal if not set.</param>
		///<param name="category">Whether to use a persistent map or not for cleaning (i.e. No go lines): 2 for no map, 4 for map. Default to using map if not set (and fallback to no map if no map is found).</param>
		///<param name="zone">Only supported on the Botvac D7. Name of the zone to clean. Defaults to no zone i.e. complete house cleanup. eg: Kitchen</param>
		public static void CustomCleaning(this IEnumerable<VacuumEntity> target, long? @mode = null, long? @navigation = null, long? @category = null, string? @zone = null)
		{
			target.CallService("custom_cleaning", new NeatoCustomCleaningParameters{Mode = @mode, Navigation = @navigation, Category = @category, Zone = @zone});
		}
	}

	public static class OnvifEntityExtensionMethods
	{
		///<summary>If your ONVIF camera supports PTZ, you will be able to pan, tilt or zoom your camera.</summary>
		public static void Ptz(this CameraEntity target, OnvifPtzParameters data)
		{
			target.CallService("ptz", data);
		}

		///<summary>If your ONVIF camera supports PTZ, you will be able to pan, tilt or zoom your camera.</summary>
		public static void Ptz(this IEnumerable<CameraEntity> target, OnvifPtzParameters data)
		{
			target.CallService("ptz", data);
		}

		///<summary>If your ONVIF camera supports PTZ, you will be able to pan, tilt or zoom your camera.</summary>
		///<param name="target">The CameraEntity to call this service for</param>
		///<param name="tilt">Tilt direction.</param>
		///<param name="pan">Pan direction.</param>
		///<param name="zoom">Zoom.</param>
		///<param name="distance">Distance coefficient. Sets how much PTZ should be executed in one request.</param>
		///<param name="speed">Speed coefficient. Sets how fast PTZ will be executed.</param>
		///<param name="continuousDuration">Set ContinuousMove delay in seconds before stopping the move</param>
		///<param name="preset">PTZ preset profile token. Sets the preset profile token which is executed with GotoPreset eg: 1</param>
		///<param name="moveMode">PTZ moving mode.</param>
		public static void Ptz(this CameraEntity target, object? @tilt = null, object? @pan = null, object? @zoom = null, double? @distance = null, double? @speed = null, double? @continuousDuration = null, string? @preset = null, object? @moveMode = null)
		{
			target.CallService("ptz", new OnvifPtzParameters{Tilt = @tilt, Pan = @pan, Zoom = @zoom, Distance = @distance, Speed = @speed, ContinuousDuration = @continuousDuration, Preset = @preset, MoveMode = @moveMode});
		}

		///<summary>If your ONVIF camera supports PTZ, you will be able to pan, tilt or zoom your camera.</summary>
		///<param name="target">The IEnumerable<CameraEntity> to call this service for</param>
		///<param name="tilt">Tilt direction.</param>
		///<param name="pan">Pan direction.</param>
		///<param name="zoom">Zoom.</param>
		///<param name="distance">Distance coefficient. Sets how much PTZ should be executed in one request.</param>
		///<param name="speed">Speed coefficient. Sets how fast PTZ will be executed.</param>
		///<param name="continuousDuration">Set ContinuousMove delay in seconds before stopping the move</param>
		///<param name="preset">PTZ preset profile token. Sets the preset profile token which is executed with GotoPreset eg: 1</param>
		///<param name="moveMode">PTZ moving mode.</param>
		public static void Ptz(this IEnumerable<CameraEntity> target, object? @tilt = null, object? @pan = null, object? @zoom = null, double? @distance = null, double? @speed = null, double? @continuousDuration = null, string? @preset = null, object? @moveMode = null)
		{
			target.CallService("ptz", new OnvifPtzParameters{Tilt = @tilt, Pan = @pan, Zoom = @zoom, Distance = @distance, Speed = @speed, ContinuousDuration = @continuousDuration, Preset = @preset, MoveMode = @moveMode});
		}
	}

	public static class PiHoleEntityExtensionMethods
	{
		///<summary>Disable configured Pi-hole(s) for an amount of time</summary>
		public static void Disable(this SwitchEntity target, PiHoleDisableParameters data)
		{
			target.CallService("disable", data);
		}

		///<summary>Disable configured Pi-hole(s) for an amount of time</summary>
		public static void Disable(this IEnumerable<SwitchEntity> target, PiHoleDisableParameters data)
		{
			target.CallService("disable", data);
		}

		///<summary>Disable configured Pi-hole(s) for an amount of time</summary>
		///<param name="target">The SwitchEntity to call this service for</param>
		///<param name="duration">Time that the Pi-hole should be disabled for eg: 00:00:15</param>
		public static void Disable(this SwitchEntity target, string @duration)
		{
			target.CallService("disable", new PiHoleDisableParameters{Duration = @duration});
		}

		///<summary>Disable configured Pi-hole(s) for an amount of time</summary>
		///<param name="target">The IEnumerable<SwitchEntity> to call this service for</param>
		///<param name="duration">Time that the Pi-hole should be disabled for eg: 00:00:15</param>
		public static void Disable(this IEnumerable<SwitchEntity> target, string @duration)
		{
			target.CallService("disable", new PiHoleDisableParameters{Duration = @duration});
		}
	}

	public static class RemoteEntityExtensionMethods
	{
		///<summary>Deletes a command or a list of commands from the database.</summary>
		public static void DeleteCommand(this RemoteEntity target, RemoteDeleteCommandParameters data)
		{
			target.CallService("delete_command", data);
		}

		///<summary>Deletes a command or a list of commands from the database.</summary>
		public static void DeleteCommand(this IEnumerable<RemoteEntity> target, RemoteDeleteCommandParameters data)
		{
			target.CallService("delete_command", data);
		}

		///<summary>Deletes a command or a list of commands from the database.</summary>
		///<param name="target">The RemoteEntity to call this service for</param>
		///<param name="device">Name of the device from which commands will be deleted. eg: television</param>
		///<param name="command">A single command or a list of commands to delete. eg: Mute</param>
		public static void DeleteCommand(this RemoteEntity target, object @command, string? @device = null)
		{
			target.CallService("delete_command", new RemoteDeleteCommandParameters{Device = @device, Command = @command});
		}

		///<summary>Deletes a command or a list of commands from the database.</summary>
		///<param name="target">The IEnumerable<RemoteEntity> to call this service for</param>
		///<param name="device">Name of the device from which commands will be deleted. eg: television</param>
		///<param name="command">A single command or a list of commands to delete. eg: Mute</param>
		public static void DeleteCommand(this IEnumerable<RemoteEntity> target, object @command, string? @device = null)
		{
			target.CallService("delete_command", new RemoteDeleteCommandParameters{Device = @device, Command = @command});
		}

		///<summary>Learns a command or a list of commands from a device.</summary>
		public static void LearnCommand(this RemoteEntity target, RemoteLearnCommandParameters data)
		{
			target.CallService("learn_command", data);
		}

		///<summary>Learns a command or a list of commands from a device.</summary>
		public static void LearnCommand(this IEnumerable<RemoteEntity> target, RemoteLearnCommandParameters data)
		{
			target.CallService("learn_command", data);
		}

		///<summary>Learns a command or a list of commands from a device.</summary>
		///<param name="target">The RemoteEntity to call this service for</param>
		///<param name="device">Device ID to learn command from. eg: television</param>
		///<param name="command">A single command or a list of commands to learn. eg: Turn on</param>
		///<param name="commandType">The type of command to be learned.</param>
		///<param name="alternative">If code must be stored as alternative (useful for discrete remotes).</param>
		///<param name="timeout">Timeout for the command to be learned.</param>
		public static void LearnCommand(this RemoteEntity target, string? @device = null, object? @command = null, object? @commandType = null, bool? @alternative = null, long? @timeout = null)
		{
			target.CallService("learn_command", new RemoteLearnCommandParameters{Device = @device, Command = @command, CommandType = @commandType, Alternative = @alternative, Timeout = @timeout});
		}

		///<summary>Learns a command or a list of commands from a device.</summary>
		///<param name="target">The IEnumerable<RemoteEntity> to call this service for</param>
		///<param name="device">Device ID to learn command from. eg: television</param>
		///<param name="command">A single command or a list of commands to learn. eg: Turn on</param>
		///<param name="commandType">The type of command to be learned.</param>
		///<param name="alternative">If code must be stored as alternative (useful for discrete remotes).</param>
		///<param name="timeout">Timeout for the command to be learned.</param>
		public static void LearnCommand(this IEnumerable<RemoteEntity> target, string? @device = null, object? @command = null, object? @commandType = null, bool? @alternative = null, long? @timeout = null)
		{
			target.CallService("learn_command", new RemoteLearnCommandParameters{Device = @device, Command = @command, CommandType = @commandType, Alternative = @alternative, Timeout = @timeout});
		}

		///<summary>Sends a command or a list of commands to a device.</summary>
		public static void SendCommand(this RemoteEntity target, RemoteSendCommandParameters data)
		{
			target.CallService("send_command", data);
		}

		///<summary>Sends a command or a list of commands to a device.</summary>
		public static void SendCommand(this IEnumerable<RemoteEntity> target, RemoteSendCommandParameters data)
		{
			target.CallService("send_command", data);
		}

		///<summary>Sends a command or a list of commands to a device.</summary>
		///<param name="target">The RemoteEntity to call this service for</param>
		///<param name="device">Device ID to send command to. eg: 32756745</param>
		///<param name="command">A single command or a list of commands to send. eg: Play</param>
		///<param name="numRepeats">The number of times you want to repeat the command(s).</param>
		///<param name="delaySecs">The time you want to wait in between repeated commands.</param>
		///<param name="holdSecs">The time you want to have it held before the release is send.</param>
		public static void SendCommand(this RemoteEntity target, object @command, string? @device = null, long? @numRepeats = null, double? @delaySecs = null, double? @holdSecs = null)
		{
			target.CallService("send_command", new RemoteSendCommandParameters{Device = @device, Command = @command, NumRepeats = @numRepeats, DelaySecs = @delaySecs, HoldSecs = @holdSecs});
		}

		///<summary>Sends a command or a list of commands to a device.</summary>
		///<param name="target">The IEnumerable<RemoteEntity> to call this service for</param>
		///<param name="device">Device ID to send command to. eg: 32756745</param>
		///<param name="command">A single command or a list of commands to send. eg: Play</param>
		///<param name="numRepeats">The number of times you want to repeat the command(s).</param>
		///<param name="delaySecs">The time you want to wait in between repeated commands.</param>
		///<param name="holdSecs">The time you want to have it held before the release is send.</param>
		public static void SendCommand(this IEnumerable<RemoteEntity> target, object @command, string? @device = null, long? @numRepeats = null, double? @delaySecs = null, double? @holdSecs = null)
		{
			target.CallService("send_command", new RemoteSendCommandParameters{Device = @device, Command = @command, NumRepeats = @numRepeats, DelaySecs = @delaySecs, HoldSecs = @holdSecs});
		}

		///<summary>Toggles a device.</summary>
		public static void Toggle(this RemoteEntity target)
		{
			target.CallService("toggle");
		}

		///<summary>Toggles a device.</summary>
		public static void Toggle(this IEnumerable<RemoteEntity> target)
		{
			target.CallService("toggle");
		}

		///<summary>Sends the Power Off Command.</summary>
		public static void TurnOff(this RemoteEntity target)
		{
			target.CallService("turn_off");
		}

		///<summary>Sends the Power Off Command.</summary>
		public static void TurnOff(this IEnumerable<RemoteEntity> target)
		{
			target.CallService("turn_off");
		}

		///<summary>Sends the Power On Command.</summary>
		public static void TurnOn(this RemoteEntity target, RemoteTurnOnParameters data)
		{
			target.CallService("turn_on", data);
		}

		///<summary>Sends the Power On Command.</summary>
		public static void TurnOn(this IEnumerable<RemoteEntity> target, RemoteTurnOnParameters data)
		{
			target.CallService("turn_on", data);
		}

		///<summary>Sends the Power On Command.</summary>
		///<param name="target">The RemoteEntity to call this service for</param>
		///<param name="activity">Activity ID or Activity Name to start. eg: BedroomTV</param>
		public static void TurnOn(this RemoteEntity target, string? @activity = null)
		{
			target.CallService("turn_on", new RemoteTurnOnParameters{Activity = @activity});
		}

		///<summary>Sends the Power On Command.</summary>
		///<param name="target">The IEnumerable<RemoteEntity> to call this service for</param>
		///<param name="activity">Activity ID or Activity Name to start. eg: BedroomTV</param>
		public static void TurnOn(this IEnumerable<RemoteEntity> target, string? @activity = null)
		{
			target.CallService("turn_on", new RemoteTurnOnParameters{Activity = @activity});
		}
	}

	public static class ScriptEntityExtensionMethods
	{
		///<summary>Toggle script</summary>
		public static void Toggle(this ScriptEntity target)
		{
			target.CallService("toggle");
		}

		///<summary>Toggle script</summary>
		public static void Toggle(this IEnumerable<ScriptEntity> target)
		{
			target.CallService("toggle");
		}

		///<summary>Turn off script</summary>
		public static void TurnOff(this ScriptEntity target)
		{
			target.CallService("turn_off");
		}

		///<summary>Turn off script</summary>
		public static void TurnOff(this IEnumerable<ScriptEntity> target)
		{
			target.CallService("turn_off");
		}

		///<summary>Turn on script</summary>
		public static void TurnOn(this ScriptEntity target)
		{
			target.CallService("turn_on");
		}

		///<summary>Turn on script</summary>
		public static void TurnOn(this IEnumerable<ScriptEntity> target)
		{
			target.CallService("turn_on");
		}
	}

	public static class SelectEntityExtensionMethods
	{
		///<summary>Select an option of an select entity.</summary>
		public static void SelectOption(this SelectEntity target, SelectSelectOptionParameters data)
		{
			target.CallService("select_option", data);
		}

		///<summary>Select an option of an select entity.</summary>
		public static void SelectOption(this IEnumerable<SelectEntity> target, SelectSelectOptionParameters data)
		{
			target.CallService("select_option", data);
		}

		///<summary>Select an option of an select entity.</summary>
		///<param name="target">The SelectEntity to call this service for</param>
		///<param name="option">Option to be selected. eg: "Item A"</param>
		public static void SelectOption(this SelectEntity target, string @option)
		{
			target.CallService("select_option", new SelectSelectOptionParameters{Option = @option});
		}

		///<summary>Select an option of an select entity.</summary>
		///<param name="target">The IEnumerable<SelectEntity> to call this service for</param>
		///<param name="option">Option to be selected. eg: "Item A"</param>
		public static void SelectOption(this IEnumerable<SelectEntity> target, string @option)
		{
			target.CallService("select_option", new SelectSelectOptionParameters{Option = @option});
		}
	}

	public static class SwitchEntityExtensionMethods
	{
		///<summary>Toggles a switch state</summary>
		public static void Toggle(this SwitchEntity target)
		{
			target.CallService("toggle");
		}

		///<summary>Toggles a switch state</summary>
		public static void Toggle(this IEnumerable<SwitchEntity> target)
		{
			target.CallService("toggle");
		}

		///<summary>Turn a switch off</summary>
		public static void TurnOff(this SwitchEntity target)
		{
			target.CallService("turn_off");
		}

		///<summary>Turn a switch off</summary>
		public static void TurnOff(this IEnumerable<SwitchEntity> target)
		{
			target.CallService("turn_off");
		}

		///<summary>Turn a switch on</summary>
		public static void TurnOn(this SwitchEntity target)
		{
			target.CallService("turn_on");
		}

		///<summary>Turn a switch on</summary>
		public static void TurnOn(this IEnumerable<SwitchEntity> target)
		{
			target.CallService("turn_on");
		}
	}

	public static class UpdateEntityExtensionMethods
	{
		///<summary>Removes the skipped version marker from an update.</summary>
		public static void ClearSkipped(this UpdateEntity target)
		{
			target.CallService("clear_skipped");
		}

		///<summary>Removes the skipped version marker from an update.</summary>
		public static void ClearSkipped(this IEnumerable<UpdateEntity> target)
		{
			target.CallService("clear_skipped");
		}

		///<summary>Install an update for this device or service</summary>
		public static void Install(this UpdateEntity target, UpdateInstallParameters data)
		{
			target.CallService("install", data);
		}

		///<summary>Install an update for this device or service</summary>
		public static void Install(this IEnumerable<UpdateEntity> target, UpdateInstallParameters data)
		{
			target.CallService("install", data);
		}

		///<summary>Install an update for this device or service</summary>
		///<param name="target">The UpdateEntity to call this service for</param>
		///<param name="version">Version to install, if omitted, the latest version will be installed. eg: 1.0.0</param>
		///<param name="backup">Backup before installing the update, if supported by the integration.</param>
		public static void Install(this UpdateEntity target, string? @version = null, bool? @backup = null)
		{
			target.CallService("install", new UpdateInstallParameters{Version = @version, Backup = @backup});
		}

		///<summary>Install an update for this device or service</summary>
		///<param name="target">The IEnumerable<UpdateEntity> to call this service for</param>
		///<param name="version">Version to install, if omitted, the latest version will be installed. eg: 1.0.0</param>
		///<param name="backup">Backup before installing the update, if supported by the integration.</param>
		public static void Install(this IEnumerable<UpdateEntity> target, string? @version = null, bool? @backup = null)
		{
			target.CallService("install", new UpdateInstallParameters{Version = @version, Backup = @backup});
		}

		///<summary>Mark currently available update as skipped.</summary>
		public static void Skip(this UpdateEntity target)
		{
			target.CallService("skip");
		}

		///<summary>Mark currently available update as skipped.</summary>
		public static void Skip(this IEnumerable<UpdateEntity> target)
		{
			target.CallService("skip");
		}
	}

	public static class UtilityMeterEntityExtensionMethods
	{
		///<summary>Calibrates a utility meter sensor.</summary>
		public static void Calibrate(this SensorEntity target, UtilityMeterCalibrateParameters data)
		{
			target.CallService("calibrate", data);
		}

		///<summary>Calibrates a utility meter sensor.</summary>
		public static void Calibrate(this IEnumerable<SensorEntity> target, UtilityMeterCalibrateParameters data)
		{
			target.CallService("calibrate", data);
		}

		///<summary>Calibrates a utility meter sensor.</summary>
		///<param name="target">The SensorEntity to call this service for</param>
		///<param name="value">Value to which set the meter eg: 100</param>
		public static void Calibrate(this SensorEntity target, string @value)
		{
			target.CallService("calibrate", new UtilityMeterCalibrateParameters{Value = @value});
		}

		///<summary>Calibrates a utility meter sensor.</summary>
		///<param name="target">The IEnumerable<SensorEntity> to call this service for</param>
		///<param name="value">Value to which set the meter eg: 100</param>
		public static void Calibrate(this IEnumerable<SensorEntity> target, string @value)
		{
			target.CallService("calibrate", new UtilityMeterCalibrateParameters{Value = @value});
		}

		///<summary>Changes the tariff to the next one.</summary>
		public static void NextTariff(this UtilityMeterEntity target)
		{
			target.CallService("next_tariff");
		}

		///<summary>Changes the tariff to the next one.</summary>
		public static void NextTariff(this IEnumerable<UtilityMeterEntity> target)
		{
			target.CallService("next_tariff");
		}

		///<summary>Resets all counters of a utility meter.</summary>
		public static void Reset(this SelectEntity target)
		{
			target.CallService("reset");
		}

		///<summary>Resets all counters of a utility meter.</summary>
		public static void Reset(this IEnumerable<SelectEntity> target)
		{
			target.CallService("reset");
		}

		///<summary>Selects the current tariff of a utility meter.</summary>
		public static void SelectTariff(this UtilityMeterEntity target, UtilityMeterSelectTariffParameters data)
		{
			target.CallService("select_tariff", data);
		}

		///<summary>Selects the current tariff of a utility meter.</summary>
		public static void SelectTariff(this IEnumerable<UtilityMeterEntity> target, UtilityMeterSelectTariffParameters data)
		{
			target.CallService("select_tariff", data);
		}

		///<summary>Selects the current tariff of a utility meter.</summary>
		///<param name="target">The UtilityMeterEntity to call this service for</param>
		///<param name="tariff">Name of the tariff to switch to eg: offpeak</param>
		public static void SelectTariff(this UtilityMeterEntity target, string @tariff)
		{
			target.CallService("select_tariff", new UtilityMeterSelectTariffParameters{Tariff = @tariff});
		}

		///<summary>Selects the current tariff of a utility meter.</summary>
		///<param name="target">The IEnumerable<UtilityMeterEntity> to call this service for</param>
		///<param name="tariff">Name of the tariff to switch to eg: offpeak</param>
		public static void SelectTariff(this IEnumerable<UtilityMeterEntity> target, string @tariff)
		{
			target.CallService("select_tariff", new UtilityMeterSelectTariffParameters{Tariff = @tariff});
		}
	}

	public static class VacuumEntityExtensionMethods
	{
		///<summary>Tell the vacuum cleaner to do a spot clean-up.</summary>
		public static void CleanSpot(this VacuumEntity target)
		{
			target.CallService("clean_spot");
		}

		///<summary>Tell the vacuum cleaner to do a spot clean-up.</summary>
		public static void CleanSpot(this IEnumerable<VacuumEntity> target)
		{
			target.CallService("clean_spot");
		}

		///<summary>Locate the vacuum cleaner robot.</summary>
		public static void Locate(this VacuumEntity target)
		{
			target.CallService("locate");
		}

		///<summary>Locate the vacuum cleaner robot.</summary>
		public static void Locate(this IEnumerable<VacuumEntity> target)
		{
			target.CallService("locate");
		}

		///<summary>Pause the cleaning task.</summary>
		public static void Pause(this VacuumEntity target)
		{
			target.CallService("pause");
		}

		///<summary>Pause the cleaning task.</summary>
		public static void Pause(this IEnumerable<VacuumEntity> target)
		{
			target.CallService("pause");
		}

		///<summary>Tell the vacuum cleaner to return to its dock.</summary>
		public static void ReturnToBase(this VacuumEntity target)
		{
			target.CallService("return_to_base");
		}

		///<summary>Tell the vacuum cleaner to return to its dock.</summary>
		public static void ReturnToBase(this IEnumerable<VacuumEntity> target)
		{
			target.CallService("return_to_base");
		}

		///<summary>Send a raw command to the vacuum cleaner.</summary>
		public static void SendCommand(this VacuumEntity target, VacuumSendCommandParameters data)
		{
			target.CallService("send_command", data);
		}

		///<summary>Send a raw command to the vacuum cleaner.</summary>
		public static void SendCommand(this IEnumerable<VacuumEntity> target, VacuumSendCommandParameters data)
		{
			target.CallService("send_command", data);
		}

		///<summary>Send a raw command to the vacuum cleaner.</summary>
		///<param name="target">The VacuumEntity to call this service for</param>
		///<param name="command">Command to execute. eg: set_dnd_timer</param>
		///<param name="params">Parameters for the command. eg: { "key": "value" }</param>
		public static void SendCommand(this VacuumEntity target, string @command, object? @params = null)
		{
			target.CallService("send_command", new VacuumSendCommandParameters{Command = @command, Params = @params});
		}

		///<summary>Send a raw command to the vacuum cleaner.</summary>
		///<param name="target">The IEnumerable<VacuumEntity> to call this service for</param>
		///<param name="command">Command to execute. eg: set_dnd_timer</param>
		///<param name="params">Parameters for the command. eg: { "key": "value" }</param>
		public static void SendCommand(this IEnumerable<VacuumEntity> target, string @command, object? @params = null)
		{
			target.CallService("send_command", new VacuumSendCommandParameters{Command = @command, Params = @params});
		}

		///<summary>Set the fan speed of the vacuum cleaner.</summary>
		public static void SetFanSpeed(this VacuumEntity target, VacuumSetFanSpeedParameters data)
		{
			target.CallService("set_fan_speed", data);
		}

		///<summary>Set the fan speed of the vacuum cleaner.</summary>
		public static void SetFanSpeed(this IEnumerable<VacuumEntity> target, VacuumSetFanSpeedParameters data)
		{
			target.CallService("set_fan_speed", data);
		}

		///<summary>Set the fan speed of the vacuum cleaner.</summary>
		///<param name="target">The VacuumEntity to call this service for</param>
		///<param name="fanSpeed">Platform dependent vacuum cleaner fan speed, with speed steps, like 'medium' or by percentage, between 0 and 100. eg: low</param>
		public static void SetFanSpeed(this VacuumEntity target, string @fanSpeed)
		{
			target.CallService("set_fan_speed", new VacuumSetFanSpeedParameters{FanSpeed = @fanSpeed});
		}

		///<summary>Set the fan speed of the vacuum cleaner.</summary>
		///<param name="target">The IEnumerable<VacuumEntity> to call this service for</param>
		///<param name="fanSpeed">Platform dependent vacuum cleaner fan speed, with speed steps, like 'medium' or by percentage, between 0 and 100. eg: low</param>
		public static void SetFanSpeed(this IEnumerable<VacuumEntity> target, string @fanSpeed)
		{
			target.CallService("set_fan_speed", new VacuumSetFanSpeedParameters{FanSpeed = @fanSpeed});
		}

		///<summary>Start or resume the cleaning task.</summary>
		public static void Start(this VacuumEntity target)
		{
			target.CallService("start");
		}

		///<summary>Start or resume the cleaning task.</summary>
		public static void Start(this IEnumerable<VacuumEntity> target)
		{
			target.CallService("start");
		}

		///<summary>Start, pause, or resume the cleaning task.</summary>
		public static void StartPause(this VacuumEntity target)
		{
			target.CallService("start_pause");
		}

		///<summary>Start, pause, or resume the cleaning task.</summary>
		public static void StartPause(this IEnumerable<VacuumEntity> target)
		{
			target.CallService("start_pause");
		}

		///<summary>Stop the current cleaning task.</summary>
		public static void Stop(this VacuumEntity target)
		{
			target.CallService("stop");
		}

		///<summary>Stop the current cleaning task.</summary>
		public static void Stop(this IEnumerable<VacuumEntity> target)
		{
			target.CallService("stop");
		}

		///<summary>Stop the current cleaning task and return to home.</summary>
		public static void TurnOff(this VacuumEntity target)
		{
			target.CallService("turn_off");
		}

		///<summary>Stop the current cleaning task and return to home.</summary>
		public static void TurnOff(this IEnumerable<VacuumEntity> target)
		{
			target.CallService("turn_off");
		}

		///<summary>Start a new cleaning task.</summary>
		public static void TurnOn(this VacuumEntity target)
		{
			target.CallService("turn_on");
		}

		///<summary>Start a new cleaning task.</summary>
		public static void TurnOn(this IEnumerable<VacuumEntity> target)
		{
			target.CallService("turn_on");
		}
	}

	public static class WaterHeaterEntityExtensionMethods
	{
		///<summary>Turn away mode on/off for water_heater device.</summary>
		public static void SetAwayMode(this WaterHeaterEntity target, WaterHeaterSetAwayModeParameters data)
		{
			target.CallService("set_away_mode", data);
		}

		///<summary>Turn away mode on/off for water_heater device.</summary>
		public static void SetAwayMode(this IEnumerable<WaterHeaterEntity> target, WaterHeaterSetAwayModeParameters data)
		{
			target.CallService("set_away_mode", data);
		}

		///<summary>Turn away mode on/off for water_heater device.</summary>
		///<param name="target">The WaterHeaterEntity to call this service for</param>
		///<param name="awayMode">New value of away mode.</param>
		public static void SetAwayMode(this WaterHeaterEntity target, bool @awayMode)
		{
			target.CallService("set_away_mode", new WaterHeaterSetAwayModeParameters{AwayMode = @awayMode});
		}

		///<summary>Turn away mode on/off for water_heater device.</summary>
		///<param name="target">The IEnumerable<WaterHeaterEntity> to call this service for</param>
		///<param name="awayMode">New value of away mode.</param>
		public static void SetAwayMode(this IEnumerable<WaterHeaterEntity> target, bool @awayMode)
		{
			target.CallService("set_away_mode", new WaterHeaterSetAwayModeParameters{AwayMode = @awayMode});
		}

		///<summary>Set operation mode for water_heater device.</summary>
		public static void SetOperationMode(this WaterHeaterEntity target, WaterHeaterSetOperationModeParameters data)
		{
			target.CallService("set_operation_mode", data);
		}

		///<summary>Set operation mode for water_heater device.</summary>
		public static void SetOperationMode(this IEnumerable<WaterHeaterEntity> target, WaterHeaterSetOperationModeParameters data)
		{
			target.CallService("set_operation_mode", data);
		}

		///<summary>Set operation mode for water_heater device.</summary>
		///<param name="target">The WaterHeaterEntity to call this service for</param>
		///<param name="operationMode">New value of operation mode. eg: eco</param>
		public static void SetOperationMode(this WaterHeaterEntity target, string @operationMode)
		{
			target.CallService("set_operation_mode", new WaterHeaterSetOperationModeParameters{OperationMode = @operationMode});
		}

		///<summary>Set operation mode for water_heater device.</summary>
		///<param name="target">The IEnumerable<WaterHeaterEntity> to call this service for</param>
		///<param name="operationMode">New value of operation mode. eg: eco</param>
		public static void SetOperationMode(this IEnumerable<WaterHeaterEntity> target, string @operationMode)
		{
			target.CallService("set_operation_mode", new WaterHeaterSetOperationModeParameters{OperationMode = @operationMode});
		}

		///<summary>Set target temperature of water_heater device.</summary>
		public static void SetTemperature(this WaterHeaterEntity target, WaterHeaterSetTemperatureParameters data)
		{
			target.CallService("set_temperature", data);
		}

		///<summary>Set target temperature of water_heater device.</summary>
		public static void SetTemperature(this IEnumerable<WaterHeaterEntity> target, WaterHeaterSetTemperatureParameters data)
		{
			target.CallService("set_temperature", data);
		}

		///<summary>Set target temperature of water_heater device.</summary>
		///<param name="target">The WaterHeaterEntity to call this service for</param>
		///<param name="temperature">New target temperature for water heater.</param>
		///<param name="operationMode">New value of operation mode. eg: eco</param>
		public static void SetTemperature(this WaterHeaterEntity target, double @temperature, string? @operationMode = null)
		{
			target.CallService("set_temperature", new WaterHeaterSetTemperatureParameters{Temperature = @temperature, OperationMode = @operationMode});
		}

		///<summary>Set target temperature of water_heater device.</summary>
		///<param name="target">The IEnumerable<WaterHeaterEntity> to call this service for</param>
		///<param name="temperature">New target temperature for water heater.</param>
		///<param name="operationMode">New value of operation mode. eg: eco</param>
		public static void SetTemperature(this IEnumerable<WaterHeaterEntity> target, double @temperature, string? @operationMode = null)
		{
			target.CallService("set_temperature", new WaterHeaterSetTemperatureParameters{Temperature = @temperature, OperationMode = @operationMode});
		}
	}

	public static class ZwaveJsEntityExtensionMethods
	{
		///<summary>Resets the meter(s) on a node.</summary>
		public static void ResetMeter(this SensorEntity target, ZwaveJsResetMeterParameters data)
		{
			target.CallService("reset_meter", data);
		}

		///<summary>Resets the meter(s) on a node.</summary>
		public static void ResetMeter(this IEnumerable<SensorEntity> target, ZwaveJsResetMeterParameters data)
		{
			target.CallService("reset_meter", data);
		}

		///<summary>Resets the meter(s) on a node.</summary>
		///<param name="target">The SensorEntity to call this service for</param>
		///<param name="meterType">The type of meter to reset. Not all meters support the ability to pick a meter type to reset. eg: 1</param>
		///<param name="value">The value that meter(s) should be reset to. Not all meters support the ability to be reset to a specific value. eg: 5</param>
		public static void ResetMeter(this SensorEntity target, string? @meterType = null, string? @value = null)
		{
			target.CallService("reset_meter", new ZwaveJsResetMeterParameters{MeterType = @meterType, Value = @value});
		}

		///<summary>Resets the meter(s) on a node.</summary>
		///<param name="target">The IEnumerable<SensorEntity> to call this service for</param>
		///<param name="meterType">The type of meter to reset. Not all meters support the ability to pick a meter type to reset. eg: 1</param>
		///<param name="value">The value that meter(s) should be reset to. Not all meters support the ability to be reset to a specific value. eg: 5</param>
		public static void ResetMeter(this IEnumerable<SensorEntity> target, string? @meterType = null, string? @value = null)
		{
			target.CallService("reset_meter", new ZwaveJsResetMeterParameters{MeterType = @meterType, Value = @value});
		}
	}
}
